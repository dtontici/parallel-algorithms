 ,Family Name,Looked at?,Variation,Algo ID,Algorithm Description,Final Call,Exact Problem Statement?,Exact?,Time Complexity (Average),Average Case Distribution,Reference?,,Algorithm Name,Year,Paper/Reference Link,Constants,Derived?,Paper Reference for Constants,Time Complexity Improvement?,Transition Class,Time Complexity Class,Param: Time Class,Time Complexity (Worst Only),Parallel Algorithm Span/Depth,Span Encoding (T_1),Parallel Algorithm Span References,Parallel Algorithm Work,Work Encoding (T_inf),Parallel Algorithm Work References,Reference mentions work efficiency?,Parameter definitions,Preferred Parameter,Time Complexity Reference,Derived Time Complexity?,Computational Model,Model Encoding,Unit of Space,Space Complexity Class,Param: Space Class,Space Complexity (Auxiliary),Space Complexity Reference,Derived Space Complexity?,Space Complexity in Original Paper?,Interesting Space Complexity?,Randomized?,"Type of Randomized Algorithm (e.g. Las Vegas, Monte Carlo, Atlantic City)",Approximate?,Approximation Factor (if approximate algorithm),Heuristic-based?,Parallel?,"# of
Processors",# of Proc Encoding,Quantum?,GPU-based?,Other References,Problem Statement,Notes,"Algorithm family
parameters",Description of Inputs,Ratios of input parameter sizes,Space n = 1000 value,Space n = 1000 rate,Space n = 10^6 value,Space n = 10^6 rate,Space n = 10^9 value,Space n = 10^9 rate,n = 1000 value,n = 1000 scale,n = 1000 Rate,n = 10^6 value,n = 10^6 scale,n = 10^6 Rate,n = 10^9 value,n = 10^9 scale,n = 10^9 Rate,Starting Complexity,Remarks,Papers for ratio evaluations,Domains
1,Sorting,1,Comparison Sorting,,,,,,,,,,odd-even sort - Batcher,1968,https://link.springer.com/article/10.1007/BF00991185,,,,,,,,$O(\log^2{n})$,$O(\log^2{n})$,2,,$O(n \log^2{n})$,12,,,n: size of list,,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1675167,,sorting network,510,,,,,,,,,,,,,,1,$O(n \log^2{n})$,12,,,"first found in https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1675167 
mentioned in https://dl.acm.org/doi/abs/10.1145/2514.2516#sec-ref; https://link.springer.com/chapter/10.1007/978-94-009-5315-4_5 (paper starts p184 in pdf)
classified as ""merge based multi-step"" in https://dl.acm.org/doi/pdf/10.1145/181014.192329
also https://link.springer.com/chapter/10.1007/BFb0028577",,,1,n is the size of the array to be sorted.,,,,,,,,99,10101.0101,,,,,,,,4,,,Combinatorics
1,Sorting,1,Comparison Sorting,,,,,,,,,,Bitonic sort - Batcher,1968,https://dl.acm.org/doi/abs/10.1145/1468075.1468121,,,,,,,,$O(\log^2{n})$,$O(\log^2{n})$,2,,$O(n \log^2{n})$,12,,,n: size of list,,,,sorting network,510,,,,,,,,,,,,,,1,$O(n \log^2{n})$,12,,,"mentioned in https://dl.acm.org/doi/abs/10.1145/2514.2516#sec-ref
also https://link.springer.com/chapter/10.1007/BFb0028577",,,1,n is the size of the array to be sorted.,,,,,,,,1000000,1,,,,,,,,4,,,Combinatorics
1,Sorting,1,Comparison Sorting,,"network sorting algo, perfect shuffle",,,,,,,,Batcher's bitonic sort using perfect shuffle - Stone,1971,https://ieeexplore.ieee.org/abstract/document/1671798,,,,,,,,$O(\log^2{n})$,$O(\log^2{n})$,2,,$O(n \log{n})$,11,,,n: size of list,,https://ieeexplore.ieee.org/abstract/document/1671798,,sorting network,510,,,,,,,,,,,,,,1,$n/2$,10,,,mentioned in https://dl.acm.org/doi/abs/10.1145/2514.2516#sec-ref; https://link.springer.com/chapter/10.1007/978-94-009-5315-4_5 (paper starts p184 in pdf),,Rezaul: The first O(log(n))-depth sorting network (AKS) was not discovered until 1983. -error should be resolved now,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,,"n-sorter network, generalization of divide-sort-merge strategy",,,,,,,,Van Voorhis,1971,https://apps.dtic.mil/sti/citations/AD0737270,,,,,,,,$O(\log^2{n})$,$O(\log^2{n})$,2,,$O(n \log^2{n})$,12,,,n: size of list,,https://dl.acm.org/doi/abs/10.1145/2514.2516#sec-ref,,sorting network,510,,,,,,,,,,,,,,1,$0.25 n \log^2{n}-0.372 n \log{n}+O(n)$,12,,,mentioned in https://dl.acm.org/doi/abs/10.1145/2514.2516#sec-ref; https://link.springer.com/chapter/10.1007/978-94-009-5315-4_5 (paper starts p184 in pdf),,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,,,,,,,,,,Shellsort on sorting networks- Pratt,1972,https://apps.dtic.mil/sti/citations/AD0740110 (pdf page 42 ish),1/1.58,,https://apps.dtic.mil/sti/citations/AD0740110,,,,,$O(\log^2{n})$,$O(\log^2{n})$,2,,$O(n \log^2{n})$,12,,,n: size of list,,,,sorting network,510,,,,,,,,,,,,,,1,$n/2$,10,,,,,"Rezaul: Should be O(n log^2(n)) work. -corrected, should be resolved",,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,,external parallel sorting,,,,,,,,parallel tape sort - Even (1),1974,https://dl.acm.org/doi/abs/10.1145/360924.360941,,,,,,,,$O(n/p \log{n} + n)$,$O(n)$,10,,$O(n \log{n})$,11,,yes,"n: size of list
p: number of processors",,,,external sorting,610,,,,,,,,,,,,,,1,$p$,,,,mentioned in https://dl.acm.org/doi/abs/10.1145/2514.2516#sec-ref; https://link.springer.com/chapter/10.1007/978-94-009-5315-4_5 (paper starts p184 in pdf),,"Rezaul: This should be O(n log(n) ) which is found as follows: n work in step 1, p x (n/p) log(n/p) work in step 2, and sum_{i = 1}^{log_{2}(p)}{ ( p/(2^i) ) * (2^i) n / } = n log_2{p} work in step 3. - corrected, should be resolved",,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,,external parallel sorting,,,,,,,,parallel tape sort - Even (2),1974,https://dl.acm.org/doi/abs/10.1145/360924.360941,,,,,,,,$O(n)$,$O(n)$,10,,$O(n \log{n})$,11,,yes,n: size of list,,,,external sorting,610,,,,,,,,,,,,,,1,$O(\log{n})$,1,,,mentioned in https://dl.acm.org/doi/abs/10.1145/2514.2516#sec-ref; https://link.springer.com/chapter/10.1007/978-94-009-5315-4_5 (paper starts p184 in pdf),,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,,,,,,,,,,"Parallel Neighborhood sort - Baudet, Stevenson",1975,https://kilthub.cmu.edu/articles/Optimal_sorting_algorithms_for_parallel_computers/6608162/files/12099023.pdf,,,,,,,,$O(n \log{n}/p +n)$,$O(n)$,10,,$O(n \log{n})$,11,https://kilthub.cmu.edu/articles/Optimal_sorting_algorithms_for_parallel_computers/6608162/files/12099023.pdf,"if p=log n
""optimal"" - 
speedup=p
efficiency=1","n: size of list
p: number of processors",,,,SIMD; MIMD,200,,,,,,,,,,,,,,1,$p=\log{n}$,1,,,,,"Rezaul: SIMD bounds hold for MIMD models (standard parallel machines), too. -added MIMD to model",,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,,"shared memory parallel sorting, enumeration",,,,,,,,Muller and Preperata,1975,https://dl.acm.org/doi/pdf/10.1145/321879.321882,,,,,,,,$O(\log{n})$,$O(\log{n})$,1,,$O(n^2)$,20,,,n: size of list,,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1675167,,sorting network,510,,,,,,,,,,,,,,1,$O(n^2)$,20,,,"first found in https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1675167, mentioned in https://dl.acm.org/doi/abs/10.1145/2514.2516#sec-ref",,Rezaul: Work is O(n^2). -resolved,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,,,,,,,,,,Parallel Merge Sort - Valiant,1975,https://epubs.siam.org/doi/abs/10.1137/0204030,2,,https://epubs.siam.org/doi/pdf/10.1137/0204030?casa_token=UiBbWdfpwegAAAAA:D84jdC5HgN5YT4KlqkvEciBliGO5xPhV0FmuCPVlrcB_080MiEp1BwMqBM2Fbo92Qu7BIg7dpg,,,,,"O(n log(n) / p + log(p) log( n log(p) / p)) if 1<p<n
O(log n log(p/n) loglog n loglog (p/n)) if 4<=2n<p<=n(n-1)/2",$O(\log{n} \log{\log{n}})$,1.1,,$O(n \log{n}),11,https://epubs.siam.org/doi/abs/10.1137/0204030,,"n: size of list
p: number of processors",,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1675167,,Valiant's Parallel Comparison Tree Model,600,,,,,,,,,,,,,,1,p,,,,first found in https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1675167,,"Rezaul: The model is called Valiant's ""Parallel Comparison Tree Model"", see, e.g., https://ieeexplore.ieee.org/document/4568241    ------ For 1 < p < n, parallel time <= (n log(n)) / p + 2 log(p) log( n log(p) / p)     ---- the paper gives a bound for the 4 <= 2n < p <= n(n - 1)/2 case as well. -expanded info on time, should be reolved now (also wrote in model)",,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,,,,,,,,,,"Drysdale, Young",1975,https://epubs.siam.org/doi/abs/10.1137/0204022; https://drive.google.com/file/d/1Ddnx6AO0IBsr4jlVvF5bBw28Av4ucakG/view,,,,,,,,$O(\log^2{n})$,$O(\log^2{n})$,2,,$O(n \log^2{n})$,12,,,n: size of list,,,,sorting network,510,,,,,,,,,,,,,,1,? $O(n \log^2{n})$,12,,,,,Rezaul: Here is a link to the article: https://drive.google.com/file/d/1Ddnx6AO0IBsr4jlVvF5bBw28Av4ucakG/view?usp=drive_link,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting; Integer Sorting,,,,,,,,,,Parallel bucket-sort - Hirschberg (1),1977,https://dl.acm.org/doi/abs/10.1145/359576.359582,,,,,,,,$O(\log{n})$,$O(\log{n})$,1,,$O(n \log{n}),11,,,"n: size of list (integers from range {0, 1, 2, ..., m - 1})",,https://dl.acm.org/doi/abs/10.1145/359576.359582,,SIMD-SM-R,210,,,,,,,,,,,,,,1,$n$,10,,,space complexity: O(nm),,"Rezaul: This is an integer sorting algorithm with integers coming from {0, 1, 2, ..., m - 1}. -included this info, should be resolved now",,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting; Integer Sorting,,"""enumeration sorting""",,,,,,,,Parallel bucket-sort - Hirschberg (2),1977,https://dl.acm.org/doi/abs/10.1145/359576.359582,,,,,,,,$O(k \log{n})$,$O(\log{n})$,1,,$O(k \log{n} n^(1+1/k))$,,,,"n: size of list
m-1: largest number in list works on arbitrary integers (and arbitrary not-necessarily integers)?
k: arbitrary int >=2",,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1675167,,SIMD-SM-R,210,,,,,,,,,,,,,,1,$n^(1+1/k)$,,,,"space complexity: O(nm) O(n^2)?
first found in https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1675167",,"Rezaul: The paper states under the inout specification for Algorithm 3 that the input numbers can be arbitrary integers. The algorithm does bucket sort on the ""count"" values which are integers in {0, 1, 2, ..., n }. So, the space requirement should be something like O(n^2). This bound needs to be carefully verified. But the bound is not O(mn) as m is not defined for these algorithms. However, I think these algorithms (starting from Algorithm 3) work for arbitrary numbers (not necessarily integers).",,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,,"Uses Valiant's [1975] merge technique; ""enumeration sorting"", allows fetch conflicts",,,,,,,,Preperata (1),1977,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1675167&tag=1,,,,,,,,$O(\log{n})$,$O(\log{n})$,1,,$O(n \log^2{n})$,12,,,n: size of list,,,,SIMD-SM-R ? (memory fetch conflicts),210,,,,,,,,,,,,,,1,$n \log{n}$,11,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,,"Uses Valiant's [1975] merge technique; ""enumeration sorting"", doesn't allow fetch conflicts",,,,,,,,Preperata (2),1977,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1675167&tag=1,,,,,,,,$C/alpha \log{n} + o(\log{n})$,$O(\log{n})$,1,,$n^(1+alpha) \log{n}$,11,,,"n: size of list
0>alpha<=1
C: constant",,,,SIMD-SM ? (no memory fetch conflicts),200,,,,,,,,,,,,,,1,$n^(1+alpha)$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,,,,,,,,,,s^2-way merge sort - Thompson and Kung (1),1977,https://dl.acm.org/doi/abs/10.1145/359461.359481,,,,,,,,$O(n^0.5)$,$O(n^0.5)$,,,$O(n^1.5)$,16,,optimal within a factor of 2 for large n,"n: size of list (n=mxm, m assumed to be power of 2)",,,,"similar to ILLIAC IV machine, SIMD, mesh-connected array",200,,,,,,,,,,,,,,1,$n$,10,,,mentions lower bound,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,,,,,,,,,,adaptation of Batcher's bitonic merge sort - Thompson and Kung (2),1977,https://dl.acm.org/doi/abs/10.1145/359461.359481,,,,,,,,$O(n^0.5)$,$O(n^0.5)$,,,$O(n^1.5)$,16,,optimal within a factor of 4.5,"n: size of list (n=mxm, m assumed to be power of 2)",,,,"similar to ILLIAC IV machine, SIMD, mesh-connected array",200,,,,,,,,,,,,,,1,$n$,10,,,mentions lower bound,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,,,,,,Siegel,1977,https://dl.acm.org/doi/abs/10.1145/800255.810655,,,,,,,,O(log^2(n)),,,,,,,,,,,,SIMD,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,,Hardware sorter,,,,,,,,"Rebound sort - Chen, Lum, Tung ",1978,"https://dl.acm.org/doi/abs/10.5555/1286643.1286685 //
https://drive.google.com/file/d/1LOwpJ7Ct7aSE07Ks0xPWbXtSx2DUZP1p/view?usp=sharing (section 2.2.3)",4,,,,,,,$O(n)$,$O(n)$,10,,$O(n^2)$,20,,,n: size of list,,,,hardware sorter,520,,,,,,,,,,,,,,1,$n-1$,10,,,,,Rezaul: Section 2.2.3 of the following thesis describes (with performance bounds) the rebound-sorter from Cehn et al.'s 1978 paper: https://drive.google.com/file/d/1LOwpJ7Ct7aSE07Ks0xPWbXtSx2DUZP1p/view?usp=sharing,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,,,,,,,,,,"Odd-even transposition sort w/ uniform ladder - Chen, Eswaran, Lum, Tung",1978,https://link.springer.com/article/10.1007/BF00991635,,,,,,,,$(n+1)/2$,$O(n)$,10,,$O(n^2)$,20,,,n: size of list,,,,hardware sorter,520,,,,,,,,,,,,,,1,$n-1$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,,,,,,,,,,Todd,1978,https://ieeexplore.ieee.org/abstract/document/5390917,,,,,,,,$2n+\log{n}-1$,$O(n)$,10,,$O(n\log{n})$,11,,,n: size of list,,,,hardware sorter,520,,,,,,,,,,,,,,1,$\log{n}$,1,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,,parallel tree sort,,,,,,,,Bentley and Kung,1979,https://www.eecs.harvard.edu/htk/static/files/bg891xp4727.pdf,,,,,,,,$O(n)$,$O(n)$,10,,$O(n^2)$,20,https://www.eecs.harvard.edu/htk/static/files/bg891xp4727.pdf,mentions speedup,"n: size of list
p: number of square nodes in tree
log p<=n<=p",,,,"""new tree-structured machine suitable for VSLI implementation""",600,,,,,,,,,,,,,,1,p?,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,,adaptation of Batcher's bitonic sort on a mesh-connected processor array,,,,,,,,Nassimi and Sahni,1979,https://ieeexplore.ieee.org/abstract/document/1675216,,,,,,,,$O(n^0.5)$,$O(n^0.5)$,,,$O(n^1.5)$,16,,,n: size of list,,,,SIMD,200,,,,,,,,,,,,,,1,$n$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,,network sorter,,,,,,,,Preperata and Vuillemin,1979,https://ieeexplore.ieee.org/abstract/document/4568010,,,,,,,,$O(\log^2{n})$,$O(\log^2{n})$,2,,$O(n\log^2{n})$,12,,,n: size of list,,,,"network sorter; ""compliant with VLSI design""; Cube connected cycles",510,,,,,,,,,,,,,,1,$n$,10,,,mentioned in https://link.springer.com/chapter/10.1007/978-94-009-5315-4_5 (paper starts p184 in pdf),,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,,"Hardware sorter; block access memory, has two processor-to-processor interconnections",,,,,,,,odd-even sort - Hsiao and Menon (1),1980,https://apps.dtic.mil/sti/citations/ADA090192,,,,,,,,$O(n/p \log{n/p} + n)$,$O(n)$,10,,$O(n \log{n/p} + np)$,,,YES,"n: size of list
p: number of processors
n restricted (only) to memeory size of each processor = n/p",,,,hardware sorter ?,520,,,,,,,,,,,,,,1,$p$,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,,"Hardware sorter; block access memory, has two processor-to-processor interconnections",,,,,,,,modified Stone sort - Hsiao and Menon (2),1980,https://apps.dtic.mil/sti/citations/ADA090192,,,,,,,,$O(n/p \log{n/p} + n/p \log^2{p})$,$O(\log^2{n})$,2,,$O(n \log{n/p} + n \log^2{p})$,,,YES,"n: size of list
p: number of processors
p - has to be a power of 2
n restricted (only) to memeory size of each processor = n/p",,,,hardware sorter ?,520,,,,,,,,,,,,,,1,$p$,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,,hardware sorter; only works for specific number of processors - once built works only for the given value of p,,,,,,,,specialized minimum time sort - Hsiao and Menon (3),1980,https://apps.dtic.mil/sti/citations/ADA090192,,,,,,,,$O(n/p \log{n/p})$,$O(1)$,0,,$O(n \log{n/p})$,,,YES,"n: size of list
p: number of processors
n restricted (only) to memeory size of each processor = n/p",,,,hardware sorter ?,520,,,,,,,,,,,,,,1,$p$,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,,,,,,,,,,"sorting on two or more ladders - Chin, Fok",1980,https://ieeexplore.ieee.org/abstract/document/1675633,,,,,,,,$2n+1$,$O(n)$,10,,$O(n^2)$ ?,20,,,"m: loops per ladder
n: size of list",,,,hardware sorter,520,,,,,,,,,,,,,,1,$O((n-1)(m-1))$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,Kim,1980,https://koasas.kaist.ac.kr/handle/10203/33490,,,,,,,,,,,,,,,,"n: size of list
p: number of processors",,,,SIMD,200,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,,two round sorting,,,,,,,,Haggkvist and Hell,1981,https://epubs.siam.org/doi/abs/10.1137/0210034,,,,,,,,2 // O(1),$O(1)$,0,,$O(n^(3/2) \log{n})$,,,,,,https://link.springer.com/chapter/10.1007/978-94-009-5315-4_5,,sorting network,510,,,,,,,,,,,,,,1,$O(n^(3/2) \log{n})$,,,,"mentioned in https://link.springer.com/chapter/10.1007/978-94-009-5315-4_5 (paper starts p184 in pdf)
mentions lower bounds",,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,,,,,,,,,,Lee et al.,1981,https://ieeexplore.ieee.org/abstract/document/1675805,,,,,,,,$2n$,$O(n)$,10,,$O(n^2)$,20,,,n: size of list,,,,hardware sorter,520,,,,,,,,,,,,,,1,$n/2$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,,,,,,,,,,Shiloach and Vishkin,1981,https://link.springer.com/chapter/10.1007/BFb0105127,,,,,,,,"O(n/p log n + log n log p) for p<=n
O(log^2(n)/log(p/n) + log n) for p>=n",$O(\log{n})$,1,,O(n log n) if p<n or O(p log n) if p>=n,11,,"optimal for p<=n/log n,
same result for p=ceiling(n^(1+1/k)) as Hirschberg '78 and Preperata '78","n: size of list
p: number of processors",,,,SIMD-R ??,210,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,,randomized,,,0,,,https://ieeexplore.ieee.org/abstract/document/4568337,,Reischuk,1981,https://ieeexplore.ieee.org/abstract/document/4568337,,,,,,,,$O(\log{n})$,$O(\log{n})$ expected,1,,$O(n \log{n})$ expected,11,,,n: size of list,,,,CREW PRAM,130,,,,,,,,,1,,,,,1,$n$,10,,,mentioned in https://link.springer.com/chapter/10.1007/978-94-009-5315-4_5 (paper starts p184 in pdf),,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,hardware sorter,,,,,,,,Dohi et al.,1982,https://dl.acm.org/doi/abs/10.1145/1067649.801730,,,,,,,,n b tau (a+1+(n-l)/2^(l-1)),n b tau (a+1+(n-l)/2^(l-1)),,,2^l n b tau (a+1+(n-l)/2^(l-1)),,,,"n: size of list (power of two)
b: length of data items in bytes
l: level of bottom processors
tau=1/T: average time to send byte from node after sorting
M: bus transfer rate
a=T/M",,,,hardware sorter,,,,,,,,,,,,,,,1,2^l,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,,,,,,,,,,Parallel enumeration sorting scheme - Yasuura et al.,1982,https://ieeexplore.ieee.org/abstract/document/1675943,,,,,,,,$2n$,$O(n)$,10,,$O(n^2)$,20,,,"n: size of list (has integer keys, binary representation)",,,,hardware sorter,520,,,,,,,,,,,,,,1,$n$,10,,,,,"Rezaul: When sorting a sequence of length n using a single sorter of size m >= n (i.e., containing m cells/processors) the time required is O(n). This is optimal assuming that the input sequence must be fed to the sorter sequentially. The paper seems to mean that data is transferred from the memory to the sorter sequentially but it does not clearly state if multiple sequences can be read from memory simultaneously. When n > m, then the input sequence is divided into n/m segments and the single sorter is used once for each of (n/m)^2 pairs of segments. Since the sorter takes O(m) time every time it is used, total time complexity is O(n^2/m). The time complexity can be reduced by using multiple sorters in parallel. However, the way they describe it is a bit confusing. The paper says that (n/m)^2 sorters will be used in parallel. But doing so will require simultaneously accessing (n/m) segments from the memory. That will require only O(m) time for reading the input and computing the c_ij values. Seems like the O(n) time complexity comes from writing the c_i values sequentially to the memory. To me it seems like one can use only n/m sorters in a pipelined sequence (like a single sorter of size n composed of n/m sorters of size m each put in sequence) and read the input only once from the memory and execute the entire algorithm like the algorithm for the original m >= n case. This will require only O(n) time. ",,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,,,,,,,,,,"N&S sort - Nassimi, Sahni",1982,https://dl.acm.org/doi/pdf/10.1145/322326.322329,,,,,,,,$O(k \log{n})$,$O(\log{n})$,1,,$O(n^(1+1/k) k \log{n})$,,,,"n: size of list (power of two ?)
1<=k<=log n",,,,"network sorter, SIMD (Cube connected and perfect shuffle)",200,,,,,,,,,,,,,,1,n^(1+1/k),,,,"classified as ""merge based multi-step"" in https://dl.acm.org/doi/pdf/10.1145/181014.192329",,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,,"""sorting network""; expander graphs, epsilon-halving, epsilon-nearsort",,,,,,,,"Ajtai, Komlos, Szemeredi (AKS)",1983,https://dl.acm.org/doi/pdf/10.1145/800061.808726,"""very large""; ""unsuitable for actual implementation""",,https://dl.acm.org/doi/pdf/10.1145/800061.808726,,,,,$O(\log{n})$,$O(\log{n})$,1,https://dl.acm.org/doi/pdf/10.1145/800061.808726,$O(n \log^2{n})$ ?,12,https://dl.acm.org/doi/pdf/10.1145/800061.808726,,n: size of list,n,,,"""comparator network - deterministic sequence of switches"" ??",510,,,,,,,,,,,,,,1,$n \log{n}$,11,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,Kumar and Hirschberg,1983,https://ieeexplore.ieee.org/abstract/document/1676217,,,,,,,,11n^(1/2)t_r+2log n^(1/2) t_c +5/2 n^(1/2) t_e,11n^(1/2)t_r+2log n^(1/2) t_c +5/2 n^(1/2) t_e,,,11n^(3/2)t_r+2nlog n^(1/2) t_c +5/2 n^(3/2) t_e,,,,"n: size of list
t_r: routing time
t_c: compare-exchange time
t_e: exchange time",,,,"network sorter, SIMD ?",200,,,,,,,,,,,,,,1,$n$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,Kruskal,1983,https://ieeexplore.ieee.org/abstract/document/1676138/authors#authors,,,,,,,,1.893 log n loglog n / logloglog n,ceiling(log n/log G)((G-1)/floor(p/n)+log((G-1)/floor(p/n))+3/log3 loglog(p^2/n) +6) +O(Gn/p) = ??,,https://ieeexplore.ieee.org/abstract/document/1676138/authors#authors,$O(n \log{n} \log{\log{n}} / \log{\log{\log{n}}}),,,,"n: size of list
p: number of processors
G: number of processor groups",,,,CREW PRAM,120,,,,,,,,,,,,,,1,$n$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,,,,,,,,,,Akl,1983,https://link.springer.com/article/10.1007/BF02243071,,,,,,,,$O(n^\epsilon)$,approaching O(1) ?,0,,$O(n \log{n})$,11,https://link.springer.com/article/10.1007/BF02243071,,"n: size of list
0<epsilon<1",,,,SIMD,200,,,,,,,,,,,,,,1,$n^(1-\epsilon)$,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,randomized,,,,O(log n),,,,Reif and Valiant,1983,https://dl.acm.org/doi/abs/10.1145/800061.808727,,,,,,,,$O(\alpha \log{n}) w/ high (1-n^(-alpha)) probability for big alpha,$O(\log{n})$ expected,1,,$O(n \log{n})$ expected,11,,,n: size of list,,,,sorting network,510,,,,,,,,,1,,,,,1,$n$,10,,,mentioned in https://link.springer.com/chapter/10.1007/978-94-009-5315-4_5 (paper starts p184 in pdf),,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,,,,,,,,,,"Miranker, Tang, Wong",1983,https://ieeexplore.ieee.org/abstract/document/5390461,,,,,,,,$O(n)$,$O(n)$,10,,$O(n^2)$,20,,,n: size of list,,,,hardware sorter,520,,,,,,,,,,,,,,1,$O(n)$,10,,,,,"Rezaul: Performs \Theta(n^2) work in \Theta(n) parallel time to sort n numbers. -added information, resolved",,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,,,,,,,,,,Cyclic sort - Johnsson (1),1984,http://cs-www.cs.yale.edu/publications/techreports/tr439.pdf,,,,,,,,"O(n log n/p) when p<<n
O(log^2(n)) when n~=p",$O(\log^2{n})$,2,,"O(np log n/p) when p<<n
O(nlog^2(n)) when n~=p",,,,"n: size of list
p: number of processors (power of 2)",,,,MIMD,300,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,,,,,,,,,,Consecutive sort - Johnsson (2),1984,http://cs-www.cs.yale.edu/publications/techreports/tr439.pdf,,,,,,,,"O(n log n/p) when p<<n
O(log^2(n)) when n~=p",$O(\log^2{n})$,2,,"O(np log n/p) when p<<n
O(nlog^2(n)) when n~=p",,,,"n: size of list
p: number of processors (power of 2)",,,,MIMD,300,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,Bucket sort - Johnsson (3),1984,http://cs-www.cs.yale.edu/publications/techreports/tr439.pdf,,,,,,,,"O(n/p+L) when p<=L
O(n/p+L+log p log L) when p>L",O(n/p+L+log p log L) when p>L,,,"O(n+pL) when p<=L
O(n+pL+plog p log L) when p>L",,,,"n: size of list
p: number of processors (power of 2)
L: number of buckets elements are sorted into",,,,MIMD,300,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,,,,,,,,,,"re-circulating systolic sorter (RSS) - Wong, Ito",1984,https://academic.oup.com/comjnl/article/27/3/260/367818,,,,,,,,$O(n)$,$O(n)$,10,,$O(n^2)$,20,,,n: size of list,,,,sorting network,510,,,,,,,,,,,,,,1,$O(n)$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-Comparison Sorting; Integer Sorting,,integer sort,,,,,,,,Reif,1985,https://ieeexplore.ieee.org/abstract/document/4568176,,,,,,,,$O(\log{n})$,$O(\log{n})$ expected,1,,$O(n)$ expected,10,,"""optimal"" - efficiency=1",n: size of list,,,,Parallel RAM,100,,,,,,,,,1,,,,,1,$n/ \log{n}$,9,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,O(log n),,,,Reischuk,1985,https://epubs.siam.org/doi/abs/10.1137/0214030,,,,,,,,$O(\log{n})$ whp,$O(\log{n})$ expected,1,,$O(n \log{n})$ expected,11,,,n: size of list,,,,PRAM,100,,,,,,,,,1,,,,,1,$n$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,,,,,,n-sorter - Tseng and Lee,1985,https://link.springer.com/article/10.1007/BF00991185,,,,,,,,O(n(log^2(nm)),,,,,,,,"n: arbitrary number
nm: size of list, m=multiple of n",,,,hardware sorter ?,,,,,,,,,,,,,,,,nm ?,,,,,,"Rezaul: The summations on page 465 leads to bounds that are tighter than the bounds given in the paper. The total number of n-sorter required is O(m * (log(m) / log(n))^2) as opposed to O(m * (log(mn))^2) given in the paper, and the time complexity is O(n * (log(m) / log(n))^2) as opposed to O(n * (log(mn))^2). The summation given for the number of n-sorters should go from i = 1 to k (instead of i = 0 to k - 1). The solution to the recurrence M(nm) is correct. The analysis given in the paper basically shows that the algorithm sorts n^k numbers using \Theta((n^{k-1}) k^2)  n-sorters, and assuming an n-sorter takes O(1) time to execute the time complexity of the algorithm is \Theta(n k^2). In that case, the total work is asymptotically the same as the total number of n-sorters needed, i.e., \Theta((n^{k-1}) k^2). Since mn = n^k, we have k = log(mn) / log(n) = 1 + log(m)/log(n).",,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Lang, Schimmler, Schmeck and Schroder",1985,https://ieeexplore.ieee.org/abstract/document/1676603/,7,,https://ieeexplore.ieee.org/abstract/document/1676603/,,,,,O(n^(1/2)),O(n^(1/2)),,,O(n^(3/2)),,,,n: size of list,,,,network or hardware (VLSI) sorter ?,,,,,,,,,,,,,,,1,n,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Owens, JaJa",1985,https://ieeexplore.ieee.org/abstract/document/5009391,,,,,,,,O(n +n^2/p^2),O(n),,,O(np +n^2/p),,,,"n: size of list
p: number of processors
1<=p<=n",,,,sorting network (serial memories),,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Owens, JaJa",1985,https://ieeexplore.ieee.org/abstract/document/5009391,,,,,,,,O(n/sqrt(p) +n^2/p^2),O(sqrt(n)),,,O(n sqrt(p) +n^2/p),,,,"n: size of list
p: number of processors
1<=p<=n",,,,sorting network (serial memories),,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,Rudolph,1985,https://ieeexplore.ieee.org/abstract/document/5009383,,,,,,,,O(log^2(n)),O(log^2(n)),,,O(n log^2(n)),,,,n: size of list,,,,sorting network (fault tolerant),,,,,,,,,,,,,,,1,n/2,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,Han,1985,http://h.web.umkc.edu/hanyij/html/research/icpp85.pdf,,,,,,,,O(1/alpha log n),O(log n loglog n),,,O(1/alpha n log^(alpha+1)n),,,,"n: size of list
alpha: arbitrary positive number <1
but O(log n loglog n)<=O(1/alpha log n) ??",,,,CREW PRAM,120,,,,,,,,,,,,,,1,O(n log^alpha n),,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Kindervater, Lenstra",1985,https://ir.cwi.nl/pub/2057/2057A.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,,,,,,parallel internal shuffle sort - Menon,1986,https://www.vldb.org/conf/1986/P197.PDF,,,,,,,,n/p(C+V)(log p + log^2 p) + n/pV + n/p log(n/(pk))C,?,,,n(C+V)(log p + log^2 p) + nV + nlog(n/(pk))C,,,,"n - size of list
p - number of processors
M=n/p - number of records per processor
B=n/pk - number of pages per processor local memory
k - number of records per page  (M=Bk)
C- time to compare two keys
V - time to move a record in memory",,,,"""internal sorting""",,,,,,,,,,,,,,,1,p,,,,,,"Rezaul: Work is nV + n log(n/k)C which is obtained by putting p = 1 in the parallel running time. This makes sense as when there is only one processor there will be on exhange operation at all and as a results the n/p(C+V)(log p + log^2 p) part of the parallel running time will vanish. The rest of the terms account for the local sort which merges the n/k sorted pages.                  To obtain span note that for this algorithm, T_infinity = T_{n/k} as you cannot use more than n/k processors (each processor must process at least one page). So, T_infinity = k(C + V)[log(n/k) + log^2(n/k)] + kV.",,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,,,,,,parallel odd even external sort - Menon,1986,https://www.vldb.org/conf/1986/P197.PDF,,,,,,,,(N/(2p)log(N/(2p))+N)C,NC ?,,,(N/2log(N/(2p))+pN)C,,,,"N: number of pages
p: number of processors
C: time to read, merge and write 2 pages",,,,"""external sorting""",,,,,,,,,,,,,,,1,p,,,,,,Rezaul: Work is ((N/2)log(N/2)+N)C which is obtained by setting p=1 in the parallel running time. Span is NC. ,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,,,,,,parallel B-ary odd even sort - Menon,1986,https://www.vldb.org/conf/1986/P197.PDF,,,,,,,,(N/(Bp)log_B(N/(Bp))+(2N)/B)C_B,O(NC_B) ?,,,(N/B log_B(N/(Bp))+(2Np)/B)C_B,,,,"N: number of pages
p: number of processors
B: number of pages per processor local memory
C: time to read, merge and write 2 pages",,,,"""external sorting""",,,,,,,,,,,,,,,1,p,,,,,,Rezaul: Work is ((N/B)log_B(N/B)+(2N)/B)C_B which is obtained by setting p=1 in the parallel running time. Span is (2N/B)C_B.,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,,,,,,block bitonic sort - Menon,1986,https://www.vldb.org/conf/1986/P197.PDF,,,,,,,,,,,,,,,,,,,,"""external sorting""",,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison (integer) sorting,,,,,,,,,,"Wagner, Han",1986,http://h.web.umkc.edu/hanyij/html/research/icpp86.pdf,,,,,,,,O(ceiling(log m/ log(n/p + log p))(n/p+log p),"O(celing(log m/loglog n)log n) ?? [assumed n=p, could have a better result]",,,O(ceiling(log m/ log(n/p + log p))(n+p log p),,,yes,"n: size of list (ints in range 1,2,...m)
p: number of processors",,,,"EREW, CREW PRAM",,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Schnorr, Shamir",1986,https://dl.acm.org/doi/pdf/10.1145/12130.12156,3,https://dl.acm.org/doi/pdf/10.1145/12130.12156,,,,,,O(n^(1/2)),O(n^(1/2)),,,O(n^(3/2)) ?,,,,n: size of list,,,,"sorting network, suitable for VLSI",,,,,,,,,,,,,,,1,n ?,,,,also mentions lower bounds,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,Kunde,1986,https://link.springer.com/chapter/10.1007/3-540-16811-7_187,12,https://link.springer.com/chapter/10.1007/3-540-16811-7_187,,,,,,O(n^(1/3)),O(n^(1/3)),,,O(n^(4/3)) ?,,,,n: size of list,,,,sorting network,,,,,,,,,,,,,,,1,n ?,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,,,,,,"2-way sorter - Akl, Schmeck",1986,https://www.sciencedirect.com/science/article/pii/0167819186900037?via%3Dihub,,,,,,,,((ceiling(m/2)+1)n+k)t,,,,,,,,"n: length of each sequence
m: number of sequences
k: bits of each number in sequence
a: area of bit-level building block
t: time of bit-level building block",,,,hardware sorter; systolic architecture,,,,,,,,,,,,,,,,area=n(k+1)a/2,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,,,,,,"Alon, Azar, Vishkin",1986,https://ieeexplore.ieee.org/abstract/document/4568241,,,,,,,,k rounds,O(1) ?,,,,,O(n^(1+1/k)) expected,,"n: size of list
p: number of processors
k: number of rounds (k>=1)",,,,PRAM,,,,,,,,,,1,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Tsukennan, Gray, Stewart, Uren, Vaughan",1986,https://citeseerx.ist.psu.edu/viewdoc/download?repid=rep1&type=pdf&doi=10.1.1.588.7564,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison (integer) sorting,,,,,,,,,,Hagerup,1987,https://www.sciencedirect.com/science/article/pii/0890540187900629,,,,,,,,O(log n),O(log n),,,O(n loglog n),,,yes,n: size of list,,,,CRCW PRAM,130,,,,,,,,,,,,,,1,n loglog n/ log n,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Akl, Santoro",1987,https://ieeexplore.ieee.org/abstract/document/5009478,,,,,,,,O(log^2(p)+n/p log n),O(log^2(n)) ??,,,O(plog^2(p)+n log n),,,optimal when p<=n/log^2(n),"n: size of list
p: number of processors",,,,EREW PRAM,110,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,Noga,1987,https://link.springer.com/article/10.1007/BF01933729,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,Kunde,1988,https://link.springer.com/chapter/10.1007/BFb0040409,,,,,,,,rn+O(n^(1-1/r)),rn+O(n^(1-1/r)),,,rn^2+O(n^(2-1/r)),,,yes,"n: size of list
r: dimensions of processor mesh",,,,MIMD + describes comp model w/ assumptions,,,,,,,,,,,,,,,,n,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,1,1,O(logn),,,[https://epubs.siam.org/doi/abs/10.1137/0217049 Parallel Merge Sort - Cole (1) (1988)],Parallel Merge Sort - Cole (1),1988,https://epubs.siam.org/doi/abs/10.1137/0217049,5/2,,https://epubs.siam.org/doi/abs/10.1137/0217049,,,,,O(logn),$O(log n)$,,https://epubs.siam.org/doi/abs/10.1137/0217049,$O(n log n)$,,https://epubs.siam.org/doi/abs/10.1137/0217049,yes?,n: size of list,,,,CREW PRAM,120,words,,,,,,,,0,,0,,0,1,n,,0,0,"classified as ""merge based multi-step"" in https://dl.acm.org/doi/pdf/10.1145/181014.192329",A sorting algorithm is an algorithm that puts elements of a list in a certain order.,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting ,1,,,,,1,1,O(logn),,,[https://epubs.siam.org/doi/abs/10.1137/0217049 Parallel Merge Sort - Cole (2) (1988)],Parallel Merge Sort - Cole (2),1988,https://epubs.siam.org/doi/abs/10.1137/0217049,5,,https://epubs.siam.org/doi/abs/10.1137/0217049,,,,,O(logn),$O(log n)$,,https://epubs.siam.org/doi/abs/10.1137/0217049,$O(n log n)$,,https://epubs.siam.org/doi/abs/10.1137/0217049,yes?,n: size of list,,,,EREW PRAM,110,words,,,,,,,,0,,0,,0,1,n,,0,0,"classified as ""merge based multi-step"" in https://dl.acm.org/doi/pdf/10.1145/181014.192329",A sorting algorithm is an algorithm that puts elements of a list in a certain order.,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,,,,,,,,,,Francis and Mathieson,1988,https://ieeexplore.ieee.org/abstract/document/9738,,,,,,,,O(n log n/p + n log p/p),O(log n),,,O(n log n + n log p),,,yes,"n: size of list
p: number of processors",,,,MIMD,,,,,,,,,,,,,,,1,p,,,,space complexity = 2n,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,parallel shellsort - Quinn,1988,https://www.sciencedirect.com/science/article/pii/0167819188900750,,,,,,,,O(n^(3/2)),O(n^(3/2)),,,O(pn^(3/2)),,,,"n: size of list
p: number of processors",,,,"""tightly coupled multiprocessor model""",,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,Quicksort with quickmerge - Quinn,1988,https://www.sciencedirect.com/science/article/pii/0167819188900750,,,,,,,,O((n/p)^2+p log(n/p)+n log p + p),O(n log n),,,O(n^2/p+p^2 log(n/p)+np log p + p^2),,,,"n: size of list
p: number of processors",,,,"""tightly coupled multiprocessor model""",,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,,,,,,"Balanced bin sort - Won, Sahni",1988,https://link.springer.com/article/10.1007/BF00156678,,,,,,,,O((n/p)^2+p log p) ?,O(n log n) ?,,,O(n^2/p+p^2 log p) ?,,,,"n: size of list
p: number of processors",,,,"sorting network, hypercube multicomputer",,,,,,,,,,,,,,,1,p,,,,discusses space complexity,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,Jagadish,1988,https://www.computer.org/csdl/proceedings-article/iccd/1988/00025654/12OmNwdtwk0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison (integer) sorting,,,,,,O(log n),,,,"Rajesekaran, Reif",1989,https://epubs.siam.org/doi/abs/10.1137/0218041,,,,,,,,O(alpha log n) w/ high (1-n^(-alpha)) probability,O(log n) expected,,,O(n) expected,,,,"n: size of list
alpha>1",,,,CRCW PRAM,130,,,,,,,,,1,,,,,1,n/log n,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,O(log n /loglog n),,,,"Rajesekaran, Reif",1989,https://epubs.siam.org/doi/abs/10.1137/0218041,,,,,,,,O(alpha log n /loglog n) w/ high (1-n^(-alpha)) probability,O(log n/loglog n) expected,,,O (n(log n)^(1+epsilon)/loglog n) expected,,,,"n: size of list
epsilon>0
alpha>1",,,,CRCW PRAM,130,,,,,,,,,1,,,,,1,n(log n)^epsilon,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison (integer) sorting,,,,,,O(log n /loglog n),,,,"Rajesekaran, Reif",1989,https://epubs.siam.org/doi/abs/10.1137/0218041,,,,,,,,O(alpha log n /loglog n) w/ high (1-n^(-alpha)) probability,O(log n/loglog n) expected,,,O(n(loglog n)) expected,,,,"n: size of list
alpha>1",,,,CRCW PRAM,130,,,,,,,,,1,,,,,1,n(loglog n)^2/log n,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,,,,,,"shearsort - Scherson, Sen",1989,https://ieeexplore.ieee.org/abstract/document/16500,,,,,,,,,,,,,,,,,,,,"SIMD, MIMD",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,,,,,,,,,,"Hagerub, Rub",1989,https://www.sciencedirect.com/science/article/pii/0020019089901385,,,,,,,,O(log^2(n)),O(log^2(n)),,,n log n +O(n loglog n),,https://www.sciencedirect.com/science/article/pii/0020019089901385,yes,,,,,EREW PRAM,110,,,,,,,,,,,,,,1,O(n/log n),,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,17,,,1,1,O(log²n),,,"[https://epubs.siam.org/doi/abs/10.1137/0218014 Bitonic Merge Sort Parallel Implementation - Bilardi, Nicolau (1989)]","Bitonic Merge Sort Parallel Implementation - Bilardi, Nicolau",1989,https://epubs.siam.org/doi/abs/10.1137/0218014,2,,https://epubs.siam.org/doi/abs/10.1137/0218014,0,0,2,n: 2,$O((n log n)/p)$,$O(log^2 n)$,,https://epubs.siam.org/doi/abs/10.1137/0218014,$O(n log n)$,,https://epubs.siam.org/doi/abs/10.1137/0218014,no,"n: size of list
p: number of processors",n,,,PRAC (shared-memory multiprocessor of the EREW PRAM variety),,words,1,n: 1,O(1),"Paper claims ""logspace uniform"", so with O(log n) words, this is constant # of words",0,1,,0,,0,,0,1,"p, at most O(n/log n)",,0,0,-,A sorting algorithm is an algorithm that puts elements of a list in a certain order.,,1,n is the size of the array to be sorted.,,,,,,,,9965,100.3512293,,,,,,,,4,,,Combinatorics
1,Sorting,1,Non-comparison (integer) sorting,,,,,,,,,,Parallel iterated bucket sort - Chlebus,1989,https://www.sciencedirect.com/science/article/pii/0020019089901208,,,,,,,,O(log n),O(log n),,,O(n),,,,"n: size of list
(polynomial range integers ?)",,,,CRCW PRAM,130,,,,,,,,,1,,,,,1,n/log n,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,1,O(n/p log p +log^3(p) loxg(n/p)),,,,SmoothSort - Plaxton (adaptive),1989,https://www.proquest.com/docview/303808287?pq-origsite=gscholar&fromopenview=true,,,,,,,,O(n/p log^2(p)/loxg(n/p) + log^3(p)loxg(n/p)),O(log^3(n)) ?,,,O(n log^2(p)/loxg(n/p) + p log^3(p)loxg(n/p)),,,,"n: size of list
p: number of processors (upper bound n=pq ?)",,,,sorting network,,,,,,,,,,,,,,,1,p,,,,"classified as ""merge based multi-step"" in https://dl.acm.org/doi/pdf/10.1145/181014.192329",,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,SmoothSort - Plaxton (nonadaptive),1989,https://www.proquest.com/docview/303808287?pq-origsite=gscholar&fromopenview=true,,,,,,,,O(n/p log^2(p) / log(n/(p log p))),O(log^2(n)/loglog n) ?,,,O(n log^2(p) / log(n/(p log p))),,,,"n: size of list
p: number of processors",,,,sorting network,,,,,,,,,,,,,,,1,p,,,,"classified as ""merge based multi-step"" in https://dl.acm.org/doi/pdf/10.1145/181014.192329",,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,SquareSort - Plaxton,1989,https://www.proquest.com/docview/303808287?pq-origsite=gscholar&fromopenview=true,,,,,,,,O(log^2(n)),O(log^2(n)),,,O(n log^2(n)),,,,n: size of list,,,,sorting network,,,,,,,,,,,,,,,1,n,,,,"classified as ""merge based multi-step"" in https://dl.acm.org/doi/pdf/10.1145/181014.192329",,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,1,O(n/p log n + p^2 log^2(n)),,,,Balanced-partition sort - Abali (1),1989,https://www.proquest.com/docview/303734068?pq-origsite=gscholar&fromopenview=true,,,,,,,,,,,,O(n log n + p^3 log^2(n)) expected,,,,"n: size of list
p: number of processors",,,,"sorting network (hypercube), MIMD",,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,1,O(n/p log n + p^2 log n),,,,One-step-partition sort - Abali (2),1989,https://www.proquest.com/docview/303734068?pq-origsite=gscholar&fromopenview=true,,,,,,,,,,,,O(n log n + p^3 log n) expected,,,,"n: size of list
p: number of processors",,,,"sorting network (hypercube), MIMD",,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,1,O(n/p log n + p^(1+1/e) log^(1+e)(n)),,,,Recursive-partition sort - Abali (3),1989,https://www.proquest.com/docview/303734068?pq-origsite=gscholar&fromopenview=true,,,,,,,,,,,,O(n log n + p^(2+1/e) log^(1+e)(n)),,,,"n: size of list
p: number of processors
e: arbitrary positive int",,,,"sorting network (hypercube), MIMD",,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,O(n/p log(n/p) t_c +n/p t_s/r),,,,"parallel binsort 0 - Seidel, George (1)",1989,https://dl.acm.org/doi/abs/10.1145/63047.63102,,,,,,,,,O(1) expected ?,,,O(n log(n/p) t_c +n t_s/r) expected,,,yes,"n: size of list
p=2^d (d-dimensional): number of processors
t_c: unit of computational cost
t_s/r unit of simultaneuos send and recieve cost",,,,sorting network (hypercube),,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,O(n/p log n t_c +n/p t_s/r),,,,"parallel binsort 1 - Seidel, George (2)",1989,https://dl.acm.org/doi/abs/10.1145/63047.63102,,,,,,,,,O(log n) expected ?,,,O(n log n t_c +n t_s/r) expected,,,yes,"n: size of list
p=2^d (d-dimensional): number of processors
assumes sample size s<<m/n
t_c: unit of computational cost
t_s/r unit of simultaneuos send and recieve cost",,,,sorting network (hypercube),,,,,,,,,,1,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,O(n/p log n t_c +n/p t_s/r),,,,"parallel binsort 2 - Seidel, George (3)",1989,https://dl.acm.org/doi/abs/10.1145/63047.63102,,,,,,,,,O(log n) expected ?,,,O(n log n t_c +n t_s/r) expected,,,yes,"n: size of list
p=2^d (d-dimensional): number of processors
assumes sample size s<<m/n
t_c: unit of computational cost
t_s/r unit of simultaneuos send and recieve cost",,,,sorting network (hypercube),,,,,,,,,,1,,,,,1,p,,,,https://dl.acm.org/doi/abs/10.1145/800221.806719,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Periodic Balanced Sorting Network - Dowd, Perl, Rudolph, Saks",1989,https://dl.acm.org/doi/abs/10.1145/76359.76362,,,,,,,,O(log^2(n)),O(log^2(n)),,,O(n log^4(n)),,,,n: size of list,,,,sorting network,,,,,,,,,,,,,,,1,n/2 log^2(n),,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Aggarwal, Chandra, Snir",1989,https://dl.acm.org/doi/pdf/10.1145/72935.72937,,,,,,,,O(n log n/p + l log p),O(l log n),,https://dl.acm.org/doi/pdf/10.1145/72935.72937,O(np log n/p + lp log p),,,,"n: size of list
p: number of processors
l: number of elements in a block ?
",,,,Block PRAM,,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,O(log n),,,,"Martel, Gusfield",1989,https://www.sciencedirect.com/science/article/pii/0020019089901166,3 ?,,https://www.sciencedirect.com/science/article/pii/0020019089901166 (based on https://dl.acm.org/doi/abs/10.1145/5925.5930 ),,,,,O(log n) expected,O(log n) expected,,,O(n log n) expected,,,,n: size of list,,,,CRCW PRAM,130,,,,,,,,,1,,,,,1,n,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Horiguchi, Miranker",1989,https://www.sciencedirect.com/science/article/pii/0024379589904849,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Goodrich, Kosaraju",1989,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=88c772d8772499449809af592f765e35b28e124e,,,,,,,,O(log n),O(log n),,,O(n log n),,,,n: size of list,,,,EREW and CREW Parallel Pointer Machine (PPM),,,,,,,,,,,,,,,1,O(n),,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,,two-round sorting?,,,,,,,,"Takefuji, Lee",1990,https://ieeexplore.ieee.org/abstract/document/62417,,,,,,,,2,O(1),,,O(n^2),,,,,,,,neural network?,,,,,,,,,,,,,,,1,"O(n^2) - n^2 neurons, n(n-2)/2 comparators",,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,,,,,,"Takefuji, Lee, Tanaka",1990,https://ieeexplore.ieee.org/abstract/document/5726926?casa_token=oYObtFxF3TIAAAAA:HVNZphHaWr5qQTicDCBB5dqHgjub4CmipxOEJ8UwRUnzokUuFQl9x8GCkgTV0UFlAFCZFYuggw,,,,,,,,2,O(1),,,O(n^2),,,,n: size of list,,,,neural network,,,,,,,,,,,,,,,1,O(n^2) binary neurons,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison (integer) sorting,,,,,,,,,,"Hagerup, Shen",1990,https://www.sciencedirect.com/science/article/pii/002001909090097H,,,,,,,,O(log n),O(log n),,,O(n),,,,n: size of list,,,,EREW PRAM,110,,,,,,,,,,,,,,1,O(n/log n),,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,,O(log n/loglog n+loglog m),,,,Raman,1990,https://link.springer.com/chapter/10.1007/3-540-53487-3_42,,,,,,,,O(log n/loglog n+loglog m) w/ very high probability,O(log n/loglog n+loglog m) expected,,,O(n loglog m) expected,,,,"n: size of list
ints in range 0...m-1",,,,CRCW PRAM,130,,,,,,,,,1,,,,,1,,,,,O(n) space complexity,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,,,,,,,,,,"Sharesort - Cypher, Plaxton",1990,https://dl.acm.org/doi/pdf/10.1145/100216.100240,,,,,,,,O(log n (loglog n)^2),O(log n (loglog n)^2),,,O(n log n (loglog n)^2),,,,n: size of list,,,,"network sorter (hypercube, shuffle-exchange or CCC), ""SIMD fashion""",,,,,,,,,,,,,,,1,n,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,O(log n),,,,"Leighton, Plaxton",1990,https://ieeexplore.ieee.org/abstract/document/89545,,,,,,,,O(log n) w/ very high probability,O(log n) expected,,,O(n log n) expected,,,,n: size of list,,,,sorting network,,,,,,,,,,1,,,,,1,n,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,O(m + log n),,,,"Leighton, Plaxton",1990,https://ieeexplore.ieee.org/abstract/document/89545,,,,,,,,O(m + log n) w/ very high probability,O(m+log n) expected,,,O(mn log n + nlog^2(n)) expected,,,,"n: size of list
of m-bit records",,,,sorting network,,,,,,,,,,1,,,,,1,n log n,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,,,,,,Peterson,1990,https://link.springer.com/article/10.1007/BF01840378,,,,,,,,O(log n),O(log n),,,O(n log n),,,,n: size of list,,,,sorting network,,,,,,,,,,,,,,,1,n,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Abali, Ozguner, Bataineh",1990,https://ieeexplore.ieee.org/abstract/document/555388,,,,,,,,O(n log n/p + p log^2(n)),"O(n log n/p + p log^2(n)) ??
O(n log n) ???",,,O(n log n) ?? assuming n>>p,,,,"n: size of list
p=2^d: number of processors on a d-dimensional hypercube
n>>p",,,,sorting network,,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"AGGARWAL, CHANDRA, SNIR",1990,https://www.sciencedirect.com/science/article/pii/030439759090188N,,,,,,,,O(n log n /p),O(log n) ?,,,O(n log n/(p log(n/p))),,https://www.sciencedirect.com/science/article/pii/030439759090188N,,"n: size of list
p: number of processors
1<=p<=n",,,,LPRAM,,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Kruskal, Rudolph, Snir",1990,https://link.springer.com/article/10.1007/BF01840376,,,,,,,,O(n/p log n/log(n/p) +m/p),O(log n +m/n),,,O(n log n/log(n/p) +m),,,,"n: size of list
in range 0...m-1
p: number of processors
p<=n/2",,,,"EREW PRAM, MIMD machine",110,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Wang, Chen, Lin",1990,https://scholars.lib.ntu.edu.tw/bitstream/123456789/118003/1/09.pdf,,,,,,,,O(1),O(1),,,O(n^3),,,,n: size of list,,,,processor array (with reconfigurable bus system),,,,,,,,,,,,,,,1,n^3,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Dey, Srimani",1990,https://academic.oup.com/comjnl/article/33/3/241/365150,4,,https://academic.oup.com/comjnl/article/33/3/241/365150,,,,,O(log n),O(log n),,,O(n^2),,,,n: size of list,,,,SIMD,,,,,,,,,,,,,,,1,n^2/log n,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Parasort - Wheat, Evans",1990,https://www.sciencedirect.com/science/article/pii/016781919290114M,,,,,,,,O((n/p)^2 +(5n/(3p) + 2 log^2(n/p) +1)log(p+1) + 2 log^3(p+1)/3 + p),O(n),,,O(n^2/p +(5n/3 + 2p log^2(n/p) +p)log(p+1) + 2p log^3(p+1)/3 + p),,,,"n: size of list
p: number of processors",,,,MIMD,,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,Comparison sorting,,,,,,n log n/(k log k),,,,"Beigel, Gill",1990,https://ieeexplore.ieee.org/abstract/document/53587?casa_token=9GnOrfv-aycAAAAA:z4VGcYl6keco84NPIoAMrWx6_DhaQh7yoBV5KtnnkiTkrjeUeynas8o5FQxLC39YGfmHTSCNLA,,,,,,,,4n/k log_k(n),4n/k log_k(n),,,,,,,k-sorter: sorts k elements in constant time,,,,hardware sorter ?,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,Powers,1990,https://sites.cs.ucsb.edu/~gilbert/cs140/old/cs140Win2009/sortproject/ParallelQuicksort.pdf,,,,,,,,O(log n),O(log n),,,O(n log n),,,,n: size of list,,,,CRCW PRAM,130,,,,,,,,,,,,,,1,n,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,Paterson,1990,https://link.springer.com/article/10.1007/BF01840378,"""still too high to be practical""",,,,,,,O(log n),O(log n),,,O(n log n),,,,n: size of list,,,,sorting network,,,,,,,,,,,,,,,1,n,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,O(log n),,,,"Heidelberger, Norton, Robinson",1990,https://ieeexplore.ieee.org/abstract/document/46289?casa_token=EH1cXGJiDmcAAAAA:cWEfm3FxEXfMA9Q9165CWoFfbV9KAvcsrKzyFUgJAHIpKw7wzvzmSVzulfwDa5Dr0RbLMc1MKA,,,,,,,,O(log^2(n)),O(log n) expected,,,O(n log n) expected,,,,n: size of list,,,,CRCW PRAM (assuming O(1) time feth-and-add),,,,,,,,,,,,,,,1,n,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,Tang,1990,https://www.computer.org/csdl/proceedings-article/dmcc/1990/00555389/12OmNBZpH74,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,Chen,1990,https://link.springer.com/content/pdf/10.1007/3-540-53504-7_101.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Huang, Kleinrock",1990,https://www.sciencedirect.com/science/article/pii/016781919090098T,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison (integer) sorting,,,,,,,,,,"Bhatt, Diks, Hagerup, Prasad, Radzik, Saxena",1991,https://www.sciencedirect.com/science/article/pii/089054019190031V,,,,,,,,O(log n/loglog n + loglog m),O(log n/loglog n + loglog m),,,O(n loglog m),,https://www.sciencedirect.com/science/article/pii/089054019190031V,yes,"n: size of list - 
integers from {0,...,m-1}",,,,arbitrary CRCW PRAM,131,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,O(log n loglog m) expected,,,,"Matias, Vishkin (random)",1991,https://www.sciencedirect.com/science/article/pii/019667749190034V,,,,,,,,O(log n loglog m) expected,O(log n loglog m) expected,,,O(n loglog m) expected,,https://www.sciencedirect.com/science/article/pii/019667749190034V,"yes, ""slower but more efficient by a factor of O(log n/loglog m)""","n: size of list
integers in range 1..m",,,,arbitrary-CRCW PRAM,131,,,,,,,,,1,,,,,1,n/log n,,,,space complexity = O(n),,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Matias, Vishkin (deterministic)",1991,https://www.sciencedirect.com/science/article/pii/019667749190034V,,,,,,,,O(log n),O(log n),,,O(n loglog m),,,,"n: size of list
integers in range 1..m",,,,min-CRCW PRAM,130,,,,,,,,,,,,,,1,n loglog m / log n,,,,space complexity = O(nm^(1/c)) for fixed c>=1,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Nakano, Masuzawa, Takura",1991,https://search.ieice.org/bin/summary.php?id=e74-d_11_3894,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Guan, Langston",1991,https://www.computer.org/csdl/journal/tc/1991/05/t0596/13rRUx0geoZ,,,,,,,,,,,,,,,,,,,,EREW PRAM,110,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,,,,,,"Quick-Merge Sort (QMS) - Loots, Smith",1991,https://www.sciencedirect.com/science/article/pii/016781919290101C,,,,,,,,O(n/p log n) + O(n),O(n),,,O(n log n) + O(np),,https://www.sciencedirect.com/science/article/pii/016781919290101C,,"n: size of list
p: number of processors",,,,sorting network,,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Deo, Sarkar",1991,https://www.sciencedirect.com/science/article/pii/002002559190028S,,,,,,,,O(n/p log(n/p) + (n/p + log p log n)log(n/p),O(log^2(n)) ?,,,O(n log(n/p) + (n + p log p log n)log(n/p),,,,"n: size of list
p: number of processors",,,,EREW PRAM,110,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Parallel Quicksort - Chlebus, Vrt'o",1991,https://www.sciencedirect.com/science/article/pii/074373159190040G,,,,,,,,O(log n) w/ high probability,O(log n) expected,,,O(n log n) expected,,,,n: size of list,,,,CRCW PRAM,130,,,,,,,,,1,,,,,1,n,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Yen, Bastani, Leiss",1991,https://ieeexplore.ieee.org/abstract/document/153754,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,10,,,1,1,O(nlogn),,,"[https://www.sciencedirect.com/science/article/pii/0196677492900166?via%3Dihub Cube Sort Parallel Implementation - Cypher, Sanz (1992)]","Cube Sort Parallel Implementation - Cypher, Sanz",1992,https://www.sciencedirect.com/science/article/pii/0196677492900166?via%3Dihub,,,,0,0,4,n: 4,$O(n log^2 n / (p log (n/p))$,$O(n log^2 n / (p log (n/p))$,,https://www.sciencedirect.com/science/article/pii/0196677492900166?via%3Dihub,,,https://www.sciencedirect.com/science/article/pii/0196677492900166?via%3Dihub,,"n: size of list
p: number of processors",n,,,Parallel RAM,,words,3,n: 3,O(n),(can be easily derived),1,0,,0,,0,,0,1,p,,0,0,https://en.wikipedia.org/wiki/Cubesort,A sorting algorithm is an algorithm that puts elements of a list in a certain order.,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Varman, Doshi",1992,https://www.computer.org/csdl/journal/tc/1992/01/t0097/13rRUILLkD1,,,,,,,,O((n log n/p)+log/sup 2/ p),,,,,,,,"n: size of list
p: number of processors",,,,,,,,,,,,,,,,,,,,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Parallel sorting by regular sampling (PSRS) - Shi, Schaeffer",1992,https://www.sciencedirect.com/science/article/pii/074373159290075X,,,,,,,,O(n/p log n),0 (n/p log(n/p) + n/p log p + p log (n/p) + p^2 log p^2) = ??,,,O(n),,https://www.sciencedirect.com/science/article/pii/016781919390019H,assymptotically optimal when n>=p^3,"n: size of list
p: number of processors",,,,MIMD,,,,,,,,,,,,,,,1,p,,,,"classified as ""merge based single-step"" in https://dl.acm.org/doi/pdf/10.1145/181014.192329",,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"MeshSort (generalized Bitonic and Shear Sort) - Corbett, Scherson",1992,https://www.computer.org/csdl/journal/td/1992/05/l0626/13rRUxly9dj,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison (? integer) sorting,,,,,,,,,,"Rajesekaran, Sen",1992,https://www.cse.iitd.ac.in/~sSen/journals/acta.pdf,,,,,,,,O(n log n logloglog n / (p loglog n)),O(log n logloglog n),,,O(n log n logloglog n / loglog n),,,yes,"n: size of list
p: number of processors",,,,CRCW and EREW PRAM,,,,,,,,,,,,,,,1,p<=n/loglog(n),,,,"space complexity = O(n)
also gives another (randomized) algo ",,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,,,,,,O(log n / log k),,,,"Hagerup, Raman (comparsion)",1992,https://pure.mpg.de/pubman/faces/ViewItemOverviewPage.jsp?itemId=item_1834884,,,,,,,,O(log n / log k) w/ high probability,O(1) expected,,,O(kn log n /log k) expected,,,,"n: size of list
2<=k<=n",,,,arbitrary CRCW PRAM,131,,,,,,,,,1,,,,,1,kn,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison (? integer) sorting,,,,,,O(log*n),,,,"Hagerup, Raman (random ints)",1992,https://pure.mpg.de/pubman/faces/ViewItemOverviewPage.jsp?itemId=item_1834884,,,,,,,,O(log*n) w/ high probability,O(log*n) expected,,,O(n) expected,,https://pure.mpg.de/pubman/faces/ViewItemOverviewPage.jsp?itemId=item_1834884,,n: size of list,,,,OR CRCW PRAM,130,,,,,,,,,1,,,,,1,,,,,space complexity = O(n),,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison (? integer) sorting,,,,,,O(1),,,,"Hagerup, Raman (ints in range)",1992,https://pure.mpg.de/pubman/faces/ViewItemOverviewPage.jsp?itemId=item_1834884,,,,,,,,O(1) w/ high probability,O(1) expected,,,O(n) expected,,,,"n: size of list
integers in range 1..n",,,,OR CRCW PRAM,130,,,,,,,,,1,,,,,1,n,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison (? integer) sorting,,,,,,O(loglog n/log k),,,,"Hagerup, Raman (ints in range, stable)",1992,https://pure.mpg.de/pubman/faces/ViewItemOverviewPage.jsp?itemId=item_1834884,,,,,,,,O(loglog n/log k) w/ high probability,O(1) expected,,,O(kn loglog n/log k) expected,,,,"n: size of list
integers in range 1..n
2<=k<=log n",,,,OR CRCW PRAM,130,,,,,,,,,1,,,,,1,kn,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison (? integer) sorting,,,,,,,,,,"Chen, Das",1992,https://www.sciencedirect.com/science/article/pii/002001909290078A,,,,,,,,O(n/p +log n),O(log n),,https://www.sciencedirect.com/science/article/pii/002001909290078A,O(n),,,yes,"n: size of list
p: number of processors",,,,EREW PRAM,110,,,,,,,,,,,,,,1,O(p),,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,Parberry,1992,https://www.worldscientific.com/doi/abs/10.1142/S0129626492000337,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Padded-sort - Hagerup, Raman",1993,https://dl.acm.org/doi/pdf/10.1145/165231.157380,,,,,,,,n log n/log k (loglog k)^5(2^(O(log*n-log*k+1))),O(n (loglog n)^5) ?,,,kn^2 log n/log k (loglog k)^5(2^(O(log*n-log*k+1))),,,,"n: size of list
4<k<n",,,,"CRCW PRAM (TOLERANT PRAM submodel, also works on ARBITRARY and PRIORITY PRAMs)",130,,,,,,,,,,,,,,,kn,,,,also includes approximate and random algos,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,Comparison sorting,,,,,,,,,,"Kale, Krishnan",1993,https://ieeexplore.ieee.org/abstract/document/4134268,,,,,,,,local sort time + ceiling(log_k(p))O(log n)(time per histogram) + data movement and merging,,,,,,,,,,,,MIMD,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Vaidyanathan, Hartmann, Varshney",1993,https://ieeexplore.ieee.org/abstract/document/262880,,,,,,,,O(t(n) log m),O(t(n) log m),,,O(m t(n)p(n)/log n),,,,"n: size of list
m: size (in bits) of numbers (lower bounded by log(n) and upper bounded by poly of n)
p(n) and t(n): number of processors  and time needed for deterministic algo to sort n log(n)-bit numbers stably (integer sort) on the specific PRAM submodel",,,,PRAM,,,,,,,,,,,,,,,,mp(n)/(log n log m),,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,,,,,,"Snakesnort: Normal sort - Blackston, Ranade (best for cubes)",1993,https://ieeexplore.ieee.org/abstract/document/4134269,,,,,,,,O(k log k) + k(log N +1),,,,O(Nk log k),,,,"p=2^n: nodes
each node holds k keys
k lower bounded by N^2log N
=>kN: size of list",,,,sorting network (requires hamiltonian path),,,,,,,,,,,,,,,1,N,,,,"classified as ""merge based multi-step"" in https://dl.acm.org/doi/pdf/10.1145/181014.192329",,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,,,,,,"Snakesnort: Gray sort - Blackston, Ranade (best for meshes)",1993,https://ieeexplore.ieee.org/abstract/document/4134269,,,,,,,,O(k log k) + k(2 log N),,,,O(Nk log k),,,,"N=2^n: nodes
each node holds k keys
k lower bounded by Nlog N
=>kN: size of list",,,,sorting network (requires hamiltonian path),,,,,,,,,,,,,,,1,N,,,,"classified as ""merge based multi-step"" in https://dl.acm.org/doi/pdf/10.1145/181014.192329",,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,,O(k log k) +k(2 n^(1/2) + o(n^(1/2))),,,,"Snakesnort: Fast Shearsort - Blackston, Ranade",1993,https://ieeexplore.ieee.org/abstract/document/4134269,,,,,,,,O(k log k) +k(2 n^(1/2) + o(n^(1/2))) w/ high probability,,,,,,,,"N: nodes
each node holds k keys
k lower bounded by N^(1/2)logN
=>kN: size of list",,,,sorting network (requires hamiltonian path),,,,,,,,,,1,,,,,1,N,,,,"classified as ""merge based multi-step"" in https://dl.acm.org/doi/pdf/10.1145/181014.192329",,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,Comparison sorting,,,,,,,,,,"T&B sort - Tridgell, Brent",1993,https://openresearch-repository.anu.edu.au/handle/1885/40793,,,,,,,,,,,,,,,yes (experimentally),"n: size of list
p: number of processors",,,,MIMD,,,,,,,,,,,,,,,,p,,,,"classified as ""merge based multi-step"" in https://dl.acm.org/doi/pdf/10.1145/181014.192329",,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"generalized bitonic sort - Liszka, Batcher",1993,https://ieeexplore.ieee.org/abstract/document/4134122?casa_token=cM5nTlnQteIAAAAA:kjHWCIc38Nd4SBQs76oK3j-6jsAIXuIM-m_cT3J9kU5wa4Y55SqT--IrK7EOsder37jZYEWC_w,,,,,,,,O(log^2(n)),O(log^2(n)),,,O(n log^4(n),,,,n: size of list,,,,sorting network,,,,,,,,,,,,,,,1,O(n log^2(n)),,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Chen, Reif",1993,https://ieeexplore.ieee.org/abstract/document/366877,,,,,,,,O(log n) expected,O(log n) expected,,,O(n log (log n/H)),,,,"n: size of list
L: max length of each key (L<=n^O(1))
H: binary entropy",,,,CRCW PRAM,130,,,,,,,,,,,,,,1,O(n log (log n/H)/log n),,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Tianzhen, Zhou, Xiozhen",1993,https://ieeexplore.ieee.org/abstract/document/320089,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Abali, Ozguner, Bataineh",1993,https://ieeexplore.ieee.org/abstract/document/224220,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,"Comparison sorting, Non-comparison sorting",,,,,,,,,,"Parallel Sorting by OverPartitioning (PSOP) - Li, Sevcik (Quicksort / PQOP)",1994,https://dl.acm.org/doi/pdf/10.1145/181014.192329,,,,,,,,CQn log n /p+CQpsk log(psk)+CQpk log(pk) +2t_r psk/W +t_r n/(pW),,,,,,,,"C: constant factor in quicksort
Q: unit cost in quicksort
n: size of list
p: number of processors
s: oversampling ratio
k: overpartitioning ratio
t_r: mean time to access remote memory
W: number of integers per cache line",,,,,,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,"Comparison sorting, Non-comparison sorting",,,,,,,,,,"Parallel Sorting by OverPartitioning (PSOP) - Li, Sevcik (Radix sort / PROP)",1994,https://dl.acm.org/doi/pdf/10.1145/181014.192329,,,,,,,,R_b n/p +R_b ceilling((32-H)/B)n/p+CQ(H-1)2^(H-1)+2t_r ps/W+t_r n/(pW),,,,,,,,"R_b: unit cost in b-bit radix sort
n: size of list
p: number of processors
H: corresponds to first H bits, smaller than cache size ??
B: corresponds to the B bits radix sort performs on ??
C: constant factor in quicksort
Q: unit cost in quicksort
t_r: mean time to access remote memory
s: oversampling ratio
W: number of integers per cache line",,,,,,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,,,,,,"Chien, Oruc",1994,https://ieeexplore.ieee.org/abstract/document/285603,,,,,,,,,,,,,,,,,,,,"""new model"": adaptive sorting network",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,,,,,,"Gordillo, Luna",1994,https://ieeexplore.ieee.org/abstract/document/400129,,,,,,,,O(2n-3),O(2n-3),,,O(n^2) ?,,,,n: size of list,,,,Cellular automata (CA) machine,,,,,,,,,,,,,,,1,n,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Chen, Chen",1994,https://ieeexplore.ieee.org/document/286307/citations#citations,,,,,,,,O(1),O(1),,,O(n^(3/2)),,,,n: size of list,,,,3-d reconfigurable mesh; sorting network,,,,,,,,,,,,,,,1,O(n^(3/2)),,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Chen, Chen (generalized)",1994,https://ieeexplore.ieee.org/document/286307/citations#citations,,,,,,,,O(4^(k+1)),O(1),,,O(n^(1+1/(k-1))),,,,"n: size of list
k: mesh dimensions (k>=4)",,,,k-d reconfigurable mesh; sorting network,,,,,,,,,,,,,,,1,O(n^(1+1/(k-1))),,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,,,,,,"Gibbons, Matias, Ramachandran",1994,https://dl.acm.org/doi/abs/10.1145/181014.181382,,,,,,,,O(log^2(n)/loglog(n)),O(log^2(n)/loglog(n)),,,O(n log n),,https://dl.acm.org/doi/abs/10.1145/181014.181382,mentions improvement over EREW PRAM model algos,n: size of list,,,,queue-read queue write (QRQW) PRAM [CRCW PRAM but with additional cost in proportion to number of readers/writers to location],,,,,,,,,,1,,,,,1,?,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Gibbons, Matias, Ramachandran",1994,https://dl.acm.org/doi/abs/10.1145/181014.181382,,,,,,,,O(log n),O(log n),,,O(n log n),,https://dl.acm.org/doi/abs/10.1145/181014.181382,mentions improvement over EREW PRAM model algos,n: size of list,,,,CRQW PRAM,,,,,,,,,,1,,,,,1,O(n) ?,,,,,,claims to improve space bound to O(n) over CREW PRAM model algos,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Gibbons, Matias, Ramachandran",1994,https://dl.acm.org/doi/abs/10.1145/181014.181382,,,,,,,,O(log n),O(log n),,,O(n log n),,https://dl.acm.org/doi/abs/10.1145/181014.181382,mentions improvement over EREW PRAM model algos,n: size of list,,,,QRQW ASYNCRONOUS PRAM,,,,,,,,,,1,,,,,1,O(n) ?,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Nikolopoulos, Danielopoulos",1994,https://www.sciencedirect.com/science/article/pii/0165607494900124,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Gu, Gu",1994,https://ieeexplore.ieee.org/abstract/document/277787,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison (? integer) sorting,,,,,,,,,,Han and Shen,1995,https://link.springer.com/chapter/10.1007/BFb0030847,,,,,,,,"O(n log log min(m,n)/p + log n)",O(log n),,,"O(n min(log log n, log log m/log n))",,https://link.springer.com/chapter/10.1007/BFb0030847,yes,"n: size of list
p: number of processors
0<=ints<=m-1",,,,CRCW PRAM; arbitrary CRCW PRAM,131,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Bast, Hagerup",1995,https://www.infona.pl/resource/bwmeta1.element.elsevier-27dbeebf-1d67-3c08-a222-c630ae81af5c,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Das, Sinha",1995,https://ieeexplore.ieee.org/abstract/document/395908,,,,,,,,3n^(1/3) log(n^(1/3))+14n^(1/3)+O(n^(1/3)),3n^(1/3) log(n^(1/3))+14n^(1/3)+O(n^(1/3)),,,3n^(4/3) log(n^(1/3))+14n^(4/3)+O(n^(4/3)),,,,n: size of list,,,,"Multi-Mesh network, SIMD",,,,,,,,,,,,,,,1,n,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,Non-comparison (integer) sorting,,,,,,,,,,"Andersson, Hagerup, Nilsson, Raman (1)",1995,https://dl.acm.org/doi/pdf/10.1145/225058.225173,,,,,,,,O(log n),O(log n),,,O(n loglog n),,,,"n: number of integers in range 0...2^w-1
w: word length in bits (w>=log n)",,,,CRCW PRAM,130,,,,,,,,,,,,,,1,O(n log n /loglog n) ??,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,Non-comparison (integer) sorting,,,,,,,,,,"Andersson, Hagerup, Nilsson, Raman (2)",1995,https://dl.acm.org/doi/pdf/10.1145/225058.225173,,,,,,,,O(log n) expected,O(log n) expected,,,O(n) expected,,,,"n: number of integers in range 0...2^w-1
w: word length in bits (w>=(log n)^(2+epsilon))
for a fixed epsilon>0",,,,EREW PRAM,110,,,,,,,,,1,,,,,1,O(n/log n) ??,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"MM-sort - Zhang, Zheng",1995,https://ieeexplore.ieee.org/abstract/document/530744?casa_token=fWv_XUrk-IsAAAAA:VrU2_Uiu4y99b7ZD6KtQPQ4JDX6-zWPqwFlrtWs8pl3FDAd4YtsmHuOi4MQC9bURA7xhuf9g5g,,,,,,,,O(n/p log p),O(log n),,,O(n log p),,,,"n: size of list
p: number of local queues // number of processors equivalent",,,,fixed-size sorting network (inner sorter),,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,,,,,,"Louri, Hatch, Na",1995,https://opg.optica.org/ao/fulltext.cfm?uri=ao-34-17-3087&id=45402,,,,,,,,O(1),,,,,,,,n: size of list,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Jang, Prasanna",1995,https://www.sciencedirect.com/science/article/abs/pii/S0743731585710271,,,,,,,,O(1),O(1),,,O(n^2),,,,n: size of list,,,,sorting network (reconfigurable mesh),,,,,,,,,,,,,,,1,n^2,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"(padded sorting) Goldberg, Zwick",1995,https://ieeexplore.ieee.org/abstract/document/377028,,,,,,,,O(log n/(log k) loglog^3(k) 2^(O(log*n-log*k)),O(loglog^3(n)) ? (if k=n) ?,,,O(kn log n/(log k) loglog^3(k) 2^(O(log*n-log*k)),,,,n: size of list,,,,COMMON CRCW PRAM,132,,,,,,,,,,,,,,1,kn,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Tridgell, Brent",1995,https://www.worldscientific.com/doi/abs/10.1142/S0129053395000166,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Zhang, Zheng",1995,https://ieeexplore.ieee.org/abstract/document/530744,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,Min,1995,https://www.dbpia.co.kr/Journal/articleDetail?nodeId=NODE09537281,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison sorting,,,,,,,,,,Goodrich,1996,https://dl.acm.org/doi/pdf/10.1145/237814.237870,,,,,,,,O(n log(n)/p + (L+gn/p)(log(n)/(log(n/p))),O(log n) ?,,,O(n log(n) + (Lp+gn)(log(n)/(log(n/p))),,,yes ,"n: size of list
p: number of processors
g: time “gap” between consecutive messages received by a
processor in a communication round
L: worst-case time needed to send one processor-to-processor message (network latency)",,,,"Bulk-Synchronous Parallel (BSP)
[has section on comp model]",400,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Goodrich, Kosaraju (1)",1996,https://dl.acm.org/doi/abs/10.1145/226643.226670,,,,,,,,O(log n),O(log n),,,O(n log n),,,,n: size of list,,,,CREW Parallel Pointer Machine (PPM),,,,,,,,,,,,,,,1,O(n),,,,O(n) space complexity,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Goodrich, Kosaraju (2) (modified from CREW to EREW)",1996,https://dl.acm.org/doi/abs/10.1145/226643.226670,,,,,,,,O(log n),O(log n),,,O(n log n),,,,n: size of list,,,,EREW PPM,,,,,,,,,,,,,,,1,O(n),,,,O(n) space complexity,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Gerbessiotis, Siniolakis",1996,https://dl.acm.org/doi/pdf/10.1145/237502.237561,,,,,,,,(1+floor(e(1-e)^(-1))(e/2) +o(1))(T_seq/p) computation + O(gT_seq/(p log n)) communication = O(n log n/p) computation + O(g n/p) communication ?,O(log n)  computation + O(g) communication ?,,,O(n log n) computation + O(gn) communication,,,yes,"n: size of list
p: number of processors
0<e<1
g: ratio of the total throughput of the system
T_seq: time required by sequential computation",,,,BSP,400,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Olariu, Schwing",1996,https://www.sciencedirect.com/science/article/abs/pii/S0743731596900155,,,,,,,,O(1),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,Jianxian,1996,https://link.springer.com/article/10.1007/BF02900871,,,,,,,,O(n log n/p) + O(n),O(n),,,O(n log n),,,,"n: size of list
p: number of processors",,,,sorting network (hypercube),,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,,,,,,"JaJa, Ryu, Vishkin (1)",1996,https://www.sciencedirect.com/science/article/pii/0304397594002630,,,,,,,,O(log^2 n/loglog n),O(log^2 n/loglog n),,,O(n log n +m),,https://www.sciencedirect.com/science/article/pii/0304397594002630,,"n: size of list of strings
m: number of symbols in the alphabet",,,,COMMON CRCW PRAM,132,,,,,,,,,,,,,,1,O(n loglog n /log n) ??,,,,O(nlog n +m) space complexity,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,,,,,,"JaJa, Ryu, Vishkin (2)",1996,https://www.sciencedirect.com/science/article/pii/0304397594002630,,,,,,,,O(log n),O(log n),,,O(n log n +m),,https://www.sciencedirect.com/science/article/pii/0304397594002630,,"n: size of list of strings
m: number of symbols in the alphabet",,,,COMMON CRCW PRAM,132,,,,,,,,,,,,,,1,O(n) ??,,,,O(nlog n +m) space complexity,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Helman, JaJa, Bader",1996,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=1ff21105c4a94c83e227dd52fd1aca13091f14af,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Folwell, Guha, Suzuki",1996,https://www.tandfonline.com/doi/abs/10.1080/01495739708941425,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,,,,,,Shear-sort - De et al.,1997,https://ieeexplore.ieee.org/abstract/document/628397,58,,https://ieeexplore.ieee.org/abstract/document/628397,,,,,O(n^(1/4)),O(n^(1/4)),,,,,,,,,,,SIMD,,,,,,,,,,,,,,,1,sqrt(n) ??,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison (? integer) sorting,,,,,,,,,,"Albers, Hagerup (1)",1997,https://www.sciencedirect.com/science/article/pii/S0890540197926328,,,,,,,,"O(t)
t>=log n loglog n",O(log n loglog n),,,O(n sqrt(log n loglog n) + n log^2(n)/t),,https://www.sciencedirect.com/science/article/pii/S0890540197926328,,"n: size of list
t>=log n loglog n
0<=ints<=n",,,,EREW PRAM,110,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison (? integer) sorting,,,,,,,,,,"Albers, Hagerup (2)",1997,https://www.sciencedirect.com/science/article/pii/S0890540197926328,,,,,,,,"O(t)
t>=log n",O(log n),,,O(n sqrt(log n) + n log n/2^(t/log n)),,https://www.sciencedirect.com/science/article/pii/S0890540197926328,,"n: size of list
0<=ints<=n
t>=log n",,,,CREW PRAM,120,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison (? integer) sorting,,,,,,,,,,"Albers, Hagerup (3)",1997,https://www.sciencedirect.com/science/article/pii/S0890540197926328,,,,,,,,O(log^2(n)),O(log^2(n)),,,O(n),,https://www.sciencedirect.com/science/article/pii/S0890540197926328,,"n: size of list
0<=ints<=m",,,,"EREW PRAM
(nonstandard  word length of O(log n loglog n log m) bits",,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Jang, Kim",1997,https://ieeexplore.ieee.org/abstract/document/651519,,,,,,,,O(4^k),O(4^k),,,O(4^k n^(k+1)),,,,n^k: size of list,,,,sorting network,,,,,,,,,,,,,,,1,n^(k+1),,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Gao, Liu",1997,https://link.springer.com/article/10.1007/BF02916597,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,randomized,,,,,,,,,,"variation of sample sort - Helman, Bader, JaJa",1998,https://www.sciencedirect.com/science/article/abs/pii/S0743731598914629; https://api.drum.lib.umd.edu/server/api/core/bitstreams/2997ecff-e9a8-4d9f-8b87-b3706834bd51/content,,,,,,,,"O(n/p log(n)) ?
""with high probability""",O(tau) ? might be a constant?,,,O(nlog(n)),,,lots of experimental data,"n: size of list
p: number of processors
p^2<n/(3ln(n))",,,,,,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,,,,,,"Helman, Bader, JaJa",1998,https://dl.acm.org/doi/abs/10.1145/297096.297128,,,,,,,,O(n/p log(n/p) + tau +n/p sigma) for n>p^3 and p<=s<=n/p^3 WHP,,,,,,,,"n: size of list
p: number of processors
s: number of samples",,,,sorting network ?? Communication network,,,,,,,,,,,,,,,1,p,,,,,,lots of experimental evaluation,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,,,,,,"Load Balanced Parallel Radix Sort - Sohn, Kodama",1998,https://dl.acm.org/doi/pdf/10.1145/277830.277903,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,Libeskin-Hadas,1998,https://www.tandfonline.com/doi/abs/10.1080/00029890.1998.12004873,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Fix, Ladner",1998,https://ieeexplore.ieee.org/abstract/document/736441,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"ZZ-sort - Zheng, Calidas, Zhang",1999,https://link.springer.com/article/10.1023/A:1008173729055,,,,,,,,O(n/p log p (f(p)+log(n/p)),O(log n f(n)),,,O(n log p (f(p)+log(n/p)),,,,"n: size of list
p: number of processors
n>=p
f(p): time to sort p elements, one per processor",,,,"""distributed memory parallel computer""",700,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Zhang, Zheng",1999,https://downloads.hindawi.com/archive/2000/014617.pdf,,,,,,,,O(n/p log p),O(log n),,,O(n log p),,,,"n: size of list
p: number of queues =number of processors",,,,(fixed-size) sorting network,,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Davis, Bennet, Wren, Davis",1999,https://link.springer.com/chapter/10.1007/BFb0098017,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,Non-comparison sorting,,,,,,,,,,"partitioned parallel radix (PPR) sort - Lee, Jeon, Sohn, Kim",2000,https://link.springer.com/chapter/10.1007/3-540-39999-2_14 (page 176 of pdf),,,,,,,,ceilling(b/g) rounds,,,,ceilling(b/g)*p + communication,,,,"n: size of list
p: number of processors
b: number of bits in integer keys
g: group of bits used each round",,,,distributed-memory multiprocessors,700,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Olarlu, Pinotti, Zheng",2000,https://ieeexplore.ieee.org/abstract/document/895849,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Sinkha, Mukherjee",2000,https://www.sciencedirect.com/science/article/abs/pii/S0743731500916368,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,Non-comparison (integer) sorting,,,,,,,,,,Han,2001,https://www.sciencedirect.com/science/article/pii/S0890540101930536,,,,,,,,O(log^2(n)),O(log^2(n)),,,O(n(log log n)^2/log log log n),,https://www.sciencedirect.com/science/article/pii/S0890540101930536,,"n: number of integers in range {1...m-1}
m=Omega(log^2(n))",,,,EREW PRAM,110,,,,,,,,,,,,,,1,O(n(log log n)^2/(log^2(n) log log log n)) ??,,,,,,O(n) space,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Gerbessiotis, Siniolakis",2001,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=a867d950e57eacf0da9dd17cc80073f124d438ce,,,,,,,,,,,,,,,,"n: number of ints in range [0,...R-1]
p: number of processors
r=ceilling(lg R/ lg max{ceilling(n/p), t ceilling(log_t p)})
t: int; 2<=t<=p",,,,BSP,400,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,,,,,,Cerin,2002,https://ieeexplore.ieee.org/abstract/document/1015576,,,,,,,,,,,,,,,,,,,,"""parallel disk model (PDM)""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison (integer) sorting,,,,,,,,,,"Han, Shen",2002,https://epubs.siam.org/doi/abs/10.1137/S0097539799352449,,,,,,,,O(log n),O(log n),,,O(n sqrt((log n)/k)),,,,"n: number of ints in range {0,..,m-1}
word length=k log (m+n), 1<=k<l=log n",,,,EREW PRAM,110,,,,,,,,,,,,,,1,O(n sqrt(1/k log n)),,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,Canturk,2002,https://www.proquest.com/docview/2665127548?pq-origsite=gscholar&fromopenview=true,,,,,,,,O(n/p log(np)+tau+sigma n/p),O(log(n^2)) ?,,,O(n log(np)) ?,,,,"n: size of list
p: number of processors",,,,MIMD,,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,Mateescu,2002,https://ieeexplore.ieee.org/abstract/document/1019143,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"load balanced parallel merge sort - Jeon, Kim",2003,https://link.springer.com/article/10.1023/A:1021734202931,,,,,,,,k_1 n/p log p + k_2 (n/p + delta) log p,O(log n),,,k_1 n log p + k_2 (n + p delta) log p,,,,"n: size of list
p: number of processors
k_1: average time to transmit one key
k_2: average time per key to merge keys
delta: load imbalance / number of keys over n/p that a processor has to merge",,,,PRAM ?,,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Chen, Levcopoulos",2005,https://link.springer.com/chapter/10.1007/3-540-55895-0_452,,,,,,,,O(log n),O(log n),,,O(n log n),,https://link.springer.com/chapter/10.1007/3-540-55895-0_452,"yes, optimal in respect to Osc","n: size of list
Osc(x): number of oscillations in sequence x (the list)",,,,arbitrary CRCW PRAM,131,,,,,,,,,,,,,,1,O(n/log(n) log(Osc(x)/n)),,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Arefin, Hasan",2005,https://d1wqtxts1xzle7.cloudfront.net/62387187/497-263-libre.pdf?1584493306=&response-content-disposition=inline%3B+filename%3DAn_improvement_of_bitonic_sorting_for_pa.pdf&Expires=1697227017&Signature=Vvn~Pm~bDEr3CtevY~6HvLW1kn~GklUkg3rgPQKGUNQMiu4TQwovBAIX0OXYjLw21v6TeP~6iilbkYwXqjRgprdZsAlri7qQQJU-blV2-cPKxuwz5GFugIMqCJBz-riYUhrWpWh9Ot7E~oQNp8TM5zIi3zMN-AEJ8pGYx-3uwa1WYQEGHMn-KaD9k0DyFUF2GzzZo190xonEh01XK2nj4tZFK-QFy7DiZ3Nk1OhR5QrzYMCqHHN9hxvxZmP11YJI192Kfu8yLPio6JUfNLteY0ZZqkRY-ahx8qR7GYPlmx8IVAF--pis86dqeg6MsX5YyZK3PoqT01INvoQi1SjplA__&Key-Pair-Id=APKAJLOHF5GGSLRBV4ZA,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Cheng, Shah, Gilbert, Edelman",2007,https://sites.cs.ucsb.edu/~gilbert/cs140resources/old/cs140Win2011/slides/ViralParallelSort.pdf,,,,,,,,"O(n log n /p + gn/p +log n max(L,gp^2 log(n))","O(log n max(L,gp^2 log(n)) ?",,,"O(n log n + gn +log n max(Lp,gp^3 log(n))",,,yes,"n: size of list
p: number of processors
L: minimum amount of time between subsequent rounds of communication
g: measure of bandwidth in time per message size",,,,BSP,400,,,,,,,,,,,,,,1,p,,,,Space complexity: O(p^2 +n/p),,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"partition and concurrent merging (PCM) - Herruzo, Ruiz, Benavides, Plata",2007,https://ieeexplore.ieee.org/abstract/document/4135254,,,,,,,,O(n/p log (n/p)) + O(n),O(n),,,O(n log (n/p) +np),,,yes,"n: size of list
p: number of processors",,,,sorting network ?,,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,,,,,,"Aligned-access sort (AA-sort) - Inoue, Moriyama, Komatsu, Nakatani",2007,https://ieeexplore.ieee.org/abstract/document/4336211,,,,,,,,O(n log n /k),O(log n),,,O(n log n),,https://ieeexplore.ieee.org/abstract/document/4336211,,"n: size of list
b: number of blocks (constant)
k: number of parallel threads (=processors?)
k<=n/b",,,,SIMD,,,,,,,,,,,,,,,1,k,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Damrudi, Aval",2007,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=7a87c4f687886a0812dfdacc9660c00780065b02,,,,,,,,O(sqrt(n/4)),O(sqrt(n/4)),,,O(n/4 sqrt(n/4)),,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=7a87c4f687886a0812dfdacc9660c00780065b02,,n: size of list,,,,for ILLIAC architecture; processor array; EREW PRAM ?,,,,,,,,,,,,,,,1,n/4,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Herruzo, Ruiz, Benavides, Plata",2007,https://ieeexplore.ieee.org/abstract/document/4135254,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Wei, Xiao, Zhang",2008,https://ieeexplore.ieee.org/abstract/document/4529859,,,,,,,,sqrt(2n) + O(n^(3/4)),sqrt(2n) + O(n^(3/4)),,,(sqrt(2n) + O(n^(3/4)))n,,,,n: size of list,,,,Biswapped Network (BSN); BSN-mesh,,,,,,,,,,,,,,,1,n,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Hongwei, Yafeng",2008,https://ieeexplore.ieee.org/abstract/document/4736981,,,,,,,,log^2(n) + log n,log^2(n) + log n,,,(log^2(n) + log n)^2 n/4 ??,,,,n: size of list,,,,sorting network,,,,,,,,,,,,,,,1,(log^2(n) + log n)n/4,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,,,,,,"Shakeri, Foroughi, Deldari",2008,https://d1wqtxts1xzle7.cloudfront.net/49272337/final236_236-libre.pdf?1475347911=&response-content-disposition=inline%3B+filename%3DParallel_Sorting_On_Linear_Cellular_Auto.pdf&Expires=1690344628&Signature=HS5VfPZkCol0FbjPZguhxQmFz7XCutQ7EvcM1uCqd3eOe9HsWzaMXG4v7MFzavZJVDO31XEF0Ijl1Qg5oY-w9xV3u87-QXqxBn19vS4g4aDcIfszIMKMcONaoY3E-dpzOryfwkrK4rPSRa-0fHfEZjUXYCpzJEjaqCoMNnEj8n5fknRaEkpyWH8iLQ51ypFL2kLqjpvn27eWd0AbX~-aP5MSd41bXXLtE3XogJDUXrVDCDOZ-KFRvMwxgdAznqveBQQIMoNllWgoGYkUcGDWF5uPigtls9O~HoM~6t-OmmiyrOh9Q4qcmhhGBabGKZFlK3~OWQQUXcXbv7csvQAqVw__&Key-Pair-Id=APKAJLOHF5GGSLRBV4ZA,,,,,,,,O(3n/2 -2),O(3n/2 -2),,,O(n^2) ?,,,,n: size of list,,,,1-D (Linear) cellular automata,,,,,,,,,,,,,,,1,n,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Li, Peng, Chu",2009,https://link.springer.com/chapter/10.1007/978-3-642-03095-6_36 (page 389 of pdf),,,,,,,,O(2^k + m)^2 computational + O(2^k m(2k+1) +k)^2 communication,O(2^k + m)^2 computational + O(2^k m(2k+1) +k)^2 communication,,,O(2^k + m)^2 (2^(2^k m +k) + O(2^k m(2k+1) +k)^2,,,,"k: dimension of high level nodes (classes)
m: dimesnsion of low level nodes (clusters)
number of nodes=size of list=2^(2^k m +k)",,,,sorting network; metacube,,,,,,,,,,,,,,,1,2^(2^k m +k),,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Dynamic Communication-Efficient parallel Sorting (DCES) - Thanakulwarapas, Werapun",2009,https://ieeexplore.ieee.org/abstract/document/5166986,,,,,,,,O(n/p log (n/p) + n/p log p),O(log n),,,O(n log (n/p) + n log p),,,,"n: size of list
p: number of processors",,,,model? to be implemented on a Sympetric Multiprocessor (SMP),,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,Multi-sort - Rakesh,2010,https://link.springer.com/article/10.1007/s11227-010-0404-4,,,,,,,,O(n^(1/4)),O(n^(1/4)),,,O(n^(5/4)),,,,n: size of list,,,,"SIMD, multi-mesh of trees (MMT) architecture",,,,,,,,,,,,,,,,n ?,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Parallel Sorting by Approximate Selection (PSAS) - Wu, Wu, Shang, Fang",2010,https://ieeexplore.ieee.org/abstract/document/5533008,,,,,,,,O(n + n/p log(n/p)),O(n),,,O(np + n log(n/p)),,,,"n: size of list
p: number of processors",,,,PRAM,,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Li, Peng, Chu",2010,https://ieeexplore.ieee.org/abstract/document/5704410?casa_token=A6hsJa3ZVl4AAAAA:DOBWUTA6SbQNXTJyTP4P0DKDgGg4fsoyKlIXpqyFmlAXdaQPKxrP0-VaA1num5Kab4SOpEuoPg,,,,,,,,O((m2^k)^2) computation + O((km2^k)^2) communication,O((m2^k)^2) computation + O((km2^k)^2) communication,,,O((m2^k)^2)*2^(2^k m + 2^k -1) computation + O((km2^k)^2) communication,,,,"size of list=number of nodes (processors) = 2^(2^k m + 2^k -1)
m: dimension of base network (m-cube)
k: number of levels in network",,,,"Sorting Network, Recursive Dual-Net (RDN)",,,,,,,,,,,,,,,1,2^(2^k m + 2^k -1),,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Man, Ito, Nakano",2011,https://www.worldscientific.com/doi/abs/10.1142/S0129054111008568,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Siebert, Wolf",2011,https://link.springer.com/chapter/10.1007/978-3-642-24449-0_20 (page 184 of pdf),,,,,,,,O(log^2 (n)),O(log^2 (n)),,,O(n log^2 (n)),,,,n:size of list,,,,model? to be implemented on Message Passing Interface (MPI),,,,,,,,,,,,,,,1,n,,,,memory complexity = O(1) ?,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,Wanka,2011,https://link.springer.com/chapter/10.1007/978-3-642-15328-0_4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,Wang,2011,https://etd.ohiolink.edu/acprod/odb_etd/etd/r/1501/10?clear=10&p10_accession_num=wright1315525283,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Abhyankar, Ingle",2011,https://www.researchgate.net/profile/Maya-Ingle/publication/265893317_An_Efficient_Parallel_Sorting_Algorithm_for_Multicore_Machines/links/5b9a908c299bf13e602b876c/An-Efficient-Parallel-Sorting-Algorithm-for-Multicore-Machines.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,Zachmann,2011,https://media.suub.uni-bremen.de/handle/elib/7043,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,Maus,2011,https://www.duo.uio.no/handle/10852/9024,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Orhai, Black",2012,https://pdxscholar.library.pdx.edu/cgi/viewcontent.cgi?article=1094&context=compsci_fac,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,Bansal,2012,https://ieeexplore.ieee.org/abstract/document/6492330,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,,,,,,"Interval Based Rearrangement (IBR) bitonic sort - Peters, Schulz-Hildebrandt, Luttenberger",2012,https://ieeexplore.ieee.org/abstract/document/6267838,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Cache-efficient Parallel Sort - Odeh, Green, Mwassi, Shmueli, Birk",2012,https://ieeexplore.ieee.org/abstract/document/6270834,,,,,,,,O(n/p log n + n/c log p log c),O(log n),,,O(n log n + np/c log p log c),,,,"n: size of list
p: number of processors
c: cache size",,,,CREW PRAM,120,,,,,,,,,,,,,,1,p,,,,cache-afficient,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,Gerbessiotis,2012,https://www.sciencedirect.com/science/article/abs/pii/S0020019012002608,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Han, He",2012,https://link.springer.com/chapter/10.1007/978-3-642-29700-7_26,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Haglin, Adolf, Mackey",2013,https://ieeexplore.ieee.org/abstract/document/6651062,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,Hong,2014,https://www.sjsu.edu/people/robert.chun/courses/cs159/s3/N.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Bosakova-Ardenska, Vasilev, Kostadinova-Georgieva",2014,https://www.elibrary.ru/item.asp?id=25518905,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Axtmann, Bingmann, Sanders, Schulz",2015,https://dl.acm.org/doi/abs/10.1145/2755573.2755595,,,,,,,,O(alpha log p + beta n/sqrt(p) + n/p log (n/p)),O(alpha log n + beta sqrt(n)),,,O(p(alpha log p + beta n/sqrt(p)) + n log (n/p)) ?,,,,"n: size of list
p: number of processors
sending message of size l takes alpha+beta*l",,,,generalization of BSP,,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Blelloch, Fineman, Gibbons, Gu, Shun (1 - PRAM))",2015,https://dl.acm.org/doi/abs/10.1145/2755573.2755604,,,,,,,,O((n log n+ kn)/p +k log n),O(k log n),,,O(nlog n + kn),,https://dl.acm.org/doi/abs/10.1145/2755573.2755604,,"n: size of list
p: number of processors
k: cost of writes",,,,"CRCW PRAM w/ asymetric write costs (writes cost k, other instructions cost 1)",130,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Blelloch, Fineman, Gibbons, Gu, Shun (2.1 - EM: mergesort)",2015,https://dl.acm.org/doi/abs/10.1145/2755573.2755604,,,,,,,,,,,,,,,,,,,,asymetric External Memory (EM); writes cost k>1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Blelloch, Fineman, Gibbons, Gu, Shun (2.2 - EM: sample sort)",2015,https://dl.acm.org/doi/abs/10.1145/2755573.2755604,,,,,,,,,,,,,,,,,,,,asymetric External Memory (EM); writes cost k>1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Blelloch, Fineman, Gibbons, Gu, Shun (2.3 - EM: heapsort)",2015,https://dl.acm.org/doi/abs/10.1145/2755573.2755604,,,,,,,,,,,,,,,,,,,,asymetric External Memory (EM); writes cost k>1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Blelloch, Fineman, Gibbons, Gu, Shun (3 - Ideal-Cache)",2015,https://dl.acm.org/doi/abs/10.1145/2755573.2755604,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Dong, Byna, Wo",2016,https://escholarship.org/content/qt6hs966qk/qt6hs966qk.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"SPMS - Cole, Ramachandran",2017,https://dl.acm.org/doi/abs/10.1145/3040221,,,,,,,,O(log n loglog n),O(log n loglog n),,,O(n log n),,,,n: size of list,,,,,,,,,,,,,,,,,,,1,n/loglog n ?,,,,"considers cache efficiency. a LOT on caches, scheduling, work-stealing",,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,,,,,,"Siebert, Wolf",2017,https://www.researchgate.net/profile/Christian-Siebert-10/publication/48268999_A_scalable_parallel_sorting_algorithm_using_exact_splitting/links/5a37b64e458515919e70a258/A-scalable-parallel-sorting-algorithm-using-exact-splitting.pdf,,,,,,,,O(n/p log n + p log^2(n)),,,,O(n log n + p log^2(n)) ?,,,,"n: size of list
p: number of processors",,,,MIMD,,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,Parallel modified merge sort - Marszalek,2017,https://www.mdpi.com/2073-8994/9/9/176,,,,,,,,2n - log n -2,O(n),,,O(n^2),,,,n: size of list,,,,PRAM,,,,,,,,,,,,,,,1,n/2,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,,,,,,Saukas-Song Selection Algorithm - Boxer,2017,https://www.researchgate.net/profile/Laurence-Boxer/publication/321510698_The_Saukas-Song_Selection_Algorithm_and_Coarse_Grained_Parallel_Sorting/links/5a383e0ba6fdccdd41fdebfa/The-Saukas-Song-Selection-Algorithm-and-Coarse-Grained-Parallel-Sorting.pdf,,,,,,,,"O(n/p^(1/2) log p + n/p log n)
",,,,O(n p^(1/2) log p + n log n),,,,"n: size of list
p: number of processors",,,,coarse grained multicomputer model (CGM) [w/ a PRAM architecture?],,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Fully Flexible Parallel Merge Sort - Marszalek, Wozniak, Polap",2018,https://downloads.hindawi.com/journals/complexity/2018/8679579.pdf,,,,,,,,O(n/p log^2(n)),O(log^2(n)),,,O(n log^2(n)),,,,"n: size of list
p: number of processors",,,,CREW PRAM,120,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,,,,,,"Kim, Choi, Bae",2018,https://dl.acm.org/doi/pdf/10.1145/3229710.3229730,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"S-ARRAY - Sharma, Mishra, Mittal",2018,https://books.google.com/books?hl=lv&lr=&id=uMFVDwAAQBAJ&oi=fnd&pg=PA479&dq=%22parallel+sorting%22&ots=cqjzB_wJDz&sig=sbyzoHOHn3hX9ftj944Gf2lVZ30#v=onepage&q=%22parallel%20sorting%22&f=false,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,,,,,,"Maurya, Singh",2018,https://j.mecs-press.net/ijmecs/ijmecs-v10-n4/IJMECS-V10-N4-5.pdf,,,,,,,,O(n/p) + O(p log_3(n/p)),O(n) ?,,,O(n) + O(p^2 log_3(n/p)),,,,"n: size of list
p: number of processors",,,,shared memory multiprocessor (PRAM or similar?),,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,,,,,,"Bulk-sort - Ihirri, Errami, Khaldoun",2018,https://link.springer.com/chapter/10.1007/978-981-13-1165-9_66,,,,,,,,,,,,O(n),,,,,,,,hardware sorter?,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison sorting,,,,,,,,,,"Regions sort - Obeya, Kahssay, Fan, Shun",2019,https://dl.acm.org/doi/abs/10.1145/3323165.3323198,,,,,,,,O((n/K+log K)log r),O((n/K+log K)log r),,https://dl.acm.org/doi/abs/10.1145/3323165.3323198,O(n log r),,https://dl.acm.org/doi/abs/10.1145/3323165.3323198,,"n: size of list (integers)
r: range [0...r-1]
K: algorithm parameter",,,,sorting network ?,,,,,,,,,,,,,,,1,n ?,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Histogram Sort with Sampling (HSS) - Harsh, Kale, Solomonik",2019,https://dl.acm.org/doi/abs/10.1145/3323165.3323184?casa_token=OLHora1rGUwAAAAA:z0VGaR4DSjr1kzByhZhURzLjoje2SVXXD7YSGaQ7JiW6zeDLvp1Tis09aCFEuYcsEdJE1kK_xImXgg,,,,,,,,O(k) supersteps,O(1) supersteps ?,,,O(kp(log p/epsilon)^(1/k)log n) computational + O(kp(log p/epsilon)^(1/k)) communicstion,,https://dl.acm.org/doi/abs/10.1145/3323165.3323184?casa_token=OLHora1rGUwAAAAA:z0VGaR4DSjr1kzByhZhURzLjoje2SVXXD7YSGaQ7JiW6zeDLvp1Tis09aCFEuYcsEdJE1kK_xImXgg,,"n: size of list
p: number of processors
k: number of rounds
epsilon: ? ""epsilon-balanced"", normally O(1) ??",,,,BSP,400,,,,,,,,,1,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Han, Mishra, Sayed",2019,https://6login.easychair.org/publications/download/77zm,,,,,,,,O(log^(1+epsilon) n),O(log^(1+epsilon) n),,,O(n log n / sqrt(loglog n)),,https://6login.easychair.org/publications/download/77zm,,n: size of list (real numbers),,,,CREW PRAM,120,,,,,,,,,,,,,,1,O(n/(log^epsilon(n)*sqrt(loglog n)),,,,,,sorts real numbers,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"modified parallel merge sort - Marszalek, Capizzi",2019,https://link.springer.com/chapter/10.1007/978-3-030-30275-7_33,,,,,,,,n -1/3,O(n),,,O(n^2),,,,n: size of list,,,,CREW PRAM,120,,,,,,,,,,,,,,1,n,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Codish, Cruz-Filipe, Ehlers, Muller, Schneider-Kamp.",2019,https://www.sciencedirect.com/science/article/pii/S0022000016300162,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,,,,,,"MultiStack Parallel (MSP) - Kittitornkun, Rattanatranurak",2020,https://journals.riverpublishers.com/index.php/JMM/article/view/3131,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison (integer) sorting,,,,,,,,,,Goyal,2020,https://www.proquest.com/docview/2418759164?pq-origsite=gscholar&fromopenview=true,,,,,,,,O(1),O(1),,,O(n log m),,,,n: number of integers in range {0...m-1},,,,arbitrary CRCW PRAM,131,,,,,,,,,,,,,,1,O(n log m),,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison (integer) sorting,,,,,,,,,,Goyal,2020,https://www.proquest.com/docview/2418759164?pq-origsite=gscholar&fromopenview=true,,,,,,,,O(loglog m/ log t),O(1),,,O(nt loglog m/ log t),,,,"n: number of integers in range {0...m-1}
t: some number (?) =number of processors/n",,,,priority CRCW PRAM,133,,,,,,,,,,,,,,1,nt,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"An, Oruc",2020,https://arxiv.org/abs/2011.11144,,,,,,,,O(1),O(1),,,O(n^2),,,,n: size of list,,,,hardware sorter,520,,,,,,,,,,,,,,1,O(n^2),,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison (integer) sorting,,,,,,,,,,"Parallel Quick Sort Algorithm
(PQSA) and Merging Subarrays from Quick Sort Algorithm
(MSQSA) - Zeng",2021,https://ieeexplore.ieee.org/abstract/document/9498124,,,,,,,,O(n/p log(n/p)),O(1),,,O(n log(n/p)),,,,"n: size of list
p: number of threads (->procesors)",,,,shared memory (implements OpenMP),,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Moghaddam, Moghaddam",2021,https://www.researchsquare.com/article/rs-530919/v1,,,,,,,,O(n log p) + O(n log(log p /p)),O(n),,,O(np log p) + O(np log(log p /p)),,,,"n: size of list
p: number of processors",,,,CREW PRAM,120,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,,,,,,"In-place Parallel Super Scalar Radix Sort (IPS^2Ra) - Axtmann, Witt, Ferizovic, Sanders",2022,https://dl.acm.org/doi/full/10.1145/3505286,,,,,,,,,,,,,,,,,,,,parallel external memory (PEM) model,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,"Han, He",2022,https://www.worldscientific.com/doi/abs/10.1142/S0129054122500071,,,,,,,,O((log n)^(3/2)/ loglog n),O((log n)^(3/2)/ loglog n),,,O(n (log n/ loglog n)^(1/2)),,https://www.worldscientific.com/doi/abs/10.1142/S0129054122500071,,"n: number of integers in range {0,...n^(1/2)} or {0,...,n-1}",,,,CREW PRAM,120,,,,,,,,,,,,,,1,O(n (loglog n)^(1/2) / log n),,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,,,,,,,,,Kunapuli,2022,https://www.proquest.com/docview/2760564135?fromopenview=true&pq-origsite=gscholar&parentSessionId=fzYBUp1qawX4RG%2BojNv7T8nMX1f%2BPbvngyjuJvA6luc%3D,,,,,,,,O(c),O(1),,,O(n^2 log^c(n)),,,,"n: size of list (real numbers)
c: a constant",,,,Common CRCW PRAM,132,,,,,,,,,,,,,,1,O(n^2 log^c(n)),,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Alam, Najifi, Taherinejad",2022,https://dl.acm.org/doi/full/10.1145/3517181,,,,,,,,,,,,,,,,,,,,hardware sorter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Unified Column Merge Sort (UCMS) - Kent, Pattichis",2022,https://ieeexplore.ieee.org/abstract/document/9837930,,,,,,,,,,,,,,,,,,,,hardware sorter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"2mm - Mubarak, Iqbal, Naeem, Hussain",2022,https://www.sciencedirect.com/science/article/abs/pii/S0304397522000512,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Lenjani, Ahmed, Skadron",2022,https://ieeexplore.ieee.org/abstract/document/9896944,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,"Ganapathi, Chowdhury",2022,https://academic.oup.com/comjnl/article/65/10/2709/6334046,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,,,,,,,,,Kasani,2022,https://www.proquest.com/docview/2668922234?pq-origsite=gscholar&fromopenview=true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison sorting,,,,,,,,,,"Goodrich, Jacob",2023,https://dl.acm.org/doi/abs/10.1145/3558481.3591093,,,,,,,,O(log n) w/ high probability,O(log n) w/ high probability,,https://dl.acm.org/doi/abs/10.1145/3558481.3591093,O(nlog n) w/ high probability,,https://dl.acm.org/doi/abs/10.1145/3558481.3591093,,n: size of list,,,,CREW PRAM,120,,,,,,,,,1,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,,,,,,"Multi-Deque Partition DualDeque Merge Sorting algorithm (MPDMSort) - Ketchaya, Rattanatranurak",2023,https://www.nature.com/articles/s41598-023-33583-4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://www.emerald.com/insight/content/doi/10.1108/ACI-10-2021-0288/full/html,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,,,,,,,,,"Kuiper, Muhleisen",2023,https://hannes.muehleisen.org/publications/ICDE2023-sorting.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
2,kth Order Statistic,2,kth Order Statistic,,,,1,1,O(n^eps),,,[https://www.sciencedirect.com/science/article/pii/0020019084901285 Akl (1983)],Akl,1983,https://www.sciencedirect.com/science/article/pii/0020019084901285,,,,,,,,O(n^eps),O(n^eps),,https://www.sciencedirect.com/science/article/pii/0020019084901285,O(n),10,https://www.sciencedirect.com/science/article/pii/0020019084901285,yes,"n: size of list
eps: processor parameter",n,,,"SIMD (synch, CRCW)",220,words?,3,n: 3,$O(n)$,"Derived: solving the optimal triangulation problem of a convex polygon where there are $n+1$ vertices and $n+1$, so total $O(n)$ auxiliary space",1,0,,0,,0,,0,1,O(n^(1-eps)),,0,0,,the kth order statistic of a statistical sample is equal to its kth-smallest value.,,,,,,,,,,,9.965,Inf,,,,,,,,1,,,Combinatorics
2,kth Order Statistic,2,kth Order Statistic,,,,1,1,O(log n log log n),,,[https://archive.org/details/optimalparallela00vish/mode/2up Vishkin (1983)],Vishkin,1983,https://archive.org/details/optimalparallela00vish/mode/2up,,,,,,,,O(log n log log n),O(log n log log n),1.1,https://archive.org/details/optimalparallela00vish/mode/2up,O(n),10,,no,n: size of list,n,,,EREW PRAM,110,words?,3,n: 3,$O(n)$,"Derived: solving the optimal triangulation problem of a convex polygon where there are $n+1$ vertices and $n+1$, so total $O(n)$ auxiliary space",1,0,,0,,0,,0,1,O(n/(log n log log n)),,0,0,,the kth order statistic of a statistical sample is equal to its kth-smallest value.,,,,,,,,,,,9.965,Inf,,,,,,,,1,,,Combinatorics
2,kth Order Statistic,1,kth Order Statistic,,,,1,1,O((log log n)^2),,,"[https://www.sciencedirect.com/science/article/pii/0020019085900808 Cole, Yap (1985)]","Cole, Yap",1985,https://www.sciencedirect.com/science/article/pii/0020019085900808,,,,,,,,O((log log n)^2),O((log log n)^2),0.2,https://www.sciencedirect.com/science/article/pii/0020019085900808,O(n (log log n)^2),10.2,,no,n: size of list,n,,,"""Valiant's Comparison Model""",,words?,3,n: 3,$O(n)$,"Derived: solving the optimal triangulation problem of a convex polygon where there are $n+1$ vertices and $n+1$, so total $O(n)$ auxiliary space",1,0,,0,,0,,0,1,O(n),10,0,0,,the kth order statistic of a statistical sample is equal to its kth-smallest value.,,,,,,,,,,,9.965,Inf,,,,,,,,1,,,Combinatorics
2,kth Order Statistic,2,kth Order Statistic,,,,1,1,O(log n log* n),,,"[https://dl.acm.org/doi/10.1145/12130.12151 Cole, Vishkin (1986)]","Cole, Vishkin",1986,https://dl.acm.org/doi/10.1145/12130.12151,,,,,,,,O(log n log* n),O(log n log* n),1.001,https://dl.acm.org/doi/10.1145/12130.12151,O(n),10,https://dl.acm.org/doi/10.1145/12130.12151,yes,n: size of list,n,,,EREW PRAM,110,words?,3,n: 3,$O(n)$,"Derived: solving the optimal triangulation problem of a convex polygon where there are $n+1$ vertices and $n+1$, so total $O(n)$ auxiliary space",1,0,,0,,0,,0,1,O(n/(log n log* n)),,0,0,,the kth order statistic of a statistical sample is equal to its kth-smallest value.,,,,,,,,,,,9.965,Inf,,,,,,,,1,,,Combinatorics
2,kth Order Statistic,0.001,kth Order Statistic,,,,1,1,,,,"[https://journal.mcast.edu.mt/api/files/view/1411627.pdf Cortis, Inguanez, Farrugia (2020)]","Cortis, Inguanez, Farrugia",2020,https://journal.mcast.edu.mt/api/files/view/1411627.pdf,,,,,,,,,,,,,,,no,n: size of list,n,,,,,words?,3,n: 3,$O(n)$,"Derived: solving the optimal triangulation problem of a convex polygon where there are $n+1$ vertices and $n+1$, so total $O(n)$ auxiliary space",1,0,,0,,0,,0,1,,,0,0,,the kth order statistic of a statistical sample is equal to its kth-smallest value.,,,,,,,,,,,9.965,Inf,,,,,,,,1,,,Combinatorics
3,Matrix Chain Multiplication,1,Approximate MCOP,,,,1,1,O(log^2 n),,,"[https://epubs.siam.org/doi/10.1137/0212043 Valiant, Skyum, Berkowitz, Rackoff [implicit] (1983)]","Valiant, Skyum, Berkowitz, Rackoff [implicit]",1983,https://epubs.siam.org/doi/10.1137/0212043,,,,0,0,2,n: 2,O(log^2 n),O(log^2 n),2,,O(n^9 log^2 n)?,92,,no,n: number of matrices in chain,n,,,CRCW PRAM?,130,words?,3,n: 3,$O(n)$,"Derived: solving the optimal triangulation problem of a convex polygon where there are $n+1$ vertices and $n+1$, so total $O(n)$ auxiliary space",1,0,,0,,0,,0,1,O(n^9),,0,0,,"Matrix chain multiplication (or Matrix Chain Ordering Problem; MCOP) is an
 optimization problem that can be solved using dynamic programming.
 Given a sequence of matrices; the goal is to find the most efficient
 way to multiply these matrices.",,,,,,,,,,,9.965,Inf,,,,,,,,1,,,Combinatorics
3,Matrix Chain Multiplication,1,Approximate MCOP,,,,1,1,O(log^2 n),,,[https://www.sciencedirect.com/science/article/pii/0304397588901478 Rytter (1988)],Rytter,1988,https://www.sciencedirect.com/science/article/pii/0304397588901478,,,,0,0,2,n: 2,O(log^2 n),O(log^2 n),2,https://www.sciencedirect.com/science/article/pii/0304397588901478,O(n^6 log n)?,61,,no,n: number of matrices in chain,n,,,CREW PRAM,120,words?,3,n: 3,$O(n)$,"Derived: solving the optimal triangulation problem of a convex polygon where there are $n+1$ vertices and $n+1$, so total $O(n)$ auxiliary space",1,0,,0,,0,,0,1,O(n^6/log n),,0,0,,"Matrix chain multiplication (or Matrix Chain Ordering Problem; MCOP) is an
 optimization problem that can be solved using dynamic programming.
 Given a sequence of matrices; the goal is to find the most efficient
 way to multiply these matrices.",,,,,,,,,,,9.965,Inf,,,,,,,,1,,,Combinatorics
3,Matrix Chain Multiplication,0.001,Approximate MCOP,,,,1,1,O(log^2 n),,,"[https://www.computer.org/csdl/journal/td/1994/03/l0326/13rRUwbaqUh Huang, Liu, Viswanathan (1990)]","Huang, Liu, Viswanathan",1990,https://www.computer.org/csdl/journal/td/1994/03/l0326/13rRUwbaqUh,,,,0,0,2,n: 2,O(log^2 n),O(log^2 n),2,https://www.computer.org/csdl/journal/td/1994/03/l0326/13rRUwbaqUh,O(n^6/log^3 n),57,,no,n: number of matrices in chain,n,,,CREW PRAM,120,words?,3,n: 3,$O(n)$,"Derived: solving the optimal triangulation problem of a convex polygon where there are $n+1$ vertices and $n+1$, so total $O(n)$ auxiliary space",1,0,,0,,0,,0,1,O(n^6/log^5 n),,0,0,https://cse.hkust.edu.hk/mjg_lib/bibs/DPSu/DPSu.Files/00288295.pdf,"Matrix chain multiplication (or Matrix Chain Ordering Problem; MCOP) is an
 optimization problem that can be solved using dynamic programming.
 Given a sequence of matrices; the goal is to find the most efficient
 way to multiply these matrices.",,,,,,,,,,,9.965,Inf,,,,,,,,1,,,Combinatorics
3,Matrix Chain Multiplication,0.001,Approximate MCOP,,,,1,1,O(log^2 n),,,"[ Galil, Park (1992)]","Galil, Park",1992,,,,,0,0,2,n: 2,O(log^2 n),O(log^2 n),2,,O(n^6/log^4 n)?,56,,no,n: number of matrices in chain,n,,,CREW PRAM?,,words?,3,n: 3,$O(n)$,"Derived: solving the optimal triangulation problem of a convex polygon where there are $n+1$ vertices and $n+1$, so total $O(n)$ auxiliary space",1,0,,0,,0,,0,1,O(n^6/log^6 n),,0,0,https://cse.hkust.edu.hk/mjg_lib/bibs/DPSu/DPSu.Files/00288295.pdf,"Matrix chain multiplication (or Matrix Chain Ordering Problem; MCOP) is an
 optimization problem that can be solved using dynamic programming.
 Given a sequence of matrices; the goal is to find the most efficient
 way to multiply these matrices.",,,,,,,,,,,9.965,Inf,,,,,,,,1,,,Combinatorics
3,Matrix Chain Multiplication,1,Approximate MCOP,,,,1,1,O(log^4 n),,,"[https://www.academia.edu/9377391/Matrix_Chain_Ordering_in_Polylog_Time_with_n_lg_n_Processors Bradford, Rawlins, Shannon (1992)]","Bradford, Rawlins, Shannon",1992,https://www.academia.edu/9377391/Matrix_Chain_Ordering_in_Polylog_Time_with_n_lg_n_Processors,,,,0,0,2,n: 2,$O(\log^4 n)$,$O(\log^4 n)$,4,https://www.academia.edu/9377391/Matrix_Chain_Ordering_in_Polylog_Time_with_n_lg_n_Processors,O(n log^3 n),13,,no,n: number of matrices in chain,n,,,COMMON CRCW PRAM,132,words?,3,n: 3,$O(n)$,"Derived: solving the optimal triangulation problem of a convex polygon where there are $n+1$ vertices and $n+1$, so total $O(n)$ auxiliary space",1,0,,0,,0,,0,1,$n / \log n$,,0,0,,"Matrix chain multiplication (or Matrix Chain Ordering Problem; MCOP) is an
 optimization problem that can be solved using dynamic programming.
 Given a sequence of matrices; the goal is to find the most efficient
 way to multiply these matrices.",,,,,,,,,,,9.965,Inf,,,,,,,,1,,,Combinatorics
3,Matrix Chain Multiplication,1,Approximate MCOP,35,,,1,0,O(\log n),,,[https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.218.8168&rep=rep1&type=pdf Czumaj (1996)],Czumaj,1996,https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.218.8168&rep=rep1&type=pdf,,,,0,0,2,n: 2,$O(\log n)$,$O(log n)$,1,https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.218.8168&rep=rep1&type=pdf,$O(n)$,10,https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.218.8168&rep=rep1&type=pdf,yes (page 2),n: number of matrices in chain,n,,,CREW PRAM,120,words?,3,n: 3,$O(n)$,"Derived: solving the optimal triangulation problem of a convex polygon where there are $n+1$ vertices and $n+1$, so total $O(n)$ auxiliary space",1,0,,0,,1,1.1547,0,1,$n / \log n$,,0,0,,"Matrix chain multiplication (or Matrix Chain Ordering Problem; MCOP) is an
 optimization problem that can be solved using dynamic programming.
 Given a sequence of matrices; the goal is to find the most efficient
 way to multiply these matrices.",,,,,,,,,,,9.965,Inf,,,,,,,,1,,,Combinatorics
3,Matrix Chain Multiplication,1,Approximate MCOP,35.1,,,1,0,O(\log \log n),,,[https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.218.8168&rep=rep1&type=pdf Czumaj (1996)],Czumaj,1996,https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.218.8168&rep=rep1&type=pdf,,,,0,0,1.99,n: 1.99,$O(\log \log n)$,$O(log log n)$,0.1,https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.218.8168&rep=rep1&type=pdf,$O(n)$,10,https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.218.8168&rep=rep1&type=pdf,yes (page 2),n: number of matrices in chain,n,,,COMMON CRCW PRAM,132,words?,3,n: 3,$O(n)$,"Derived: solving the optimal triangulation problem of a convex polygon where there are $n+1$ vertices and $n+1$, so total $O(n)$ auxiliary space",1,0,,0,,1,1.1547,0,1,$n / \log \log n$,,0,0,,"Matrix chain multiplication (or Matrix Chain Ordering Problem; MCOP) is an
 optimization problem that can be solved using dynamic programming.
 Given a sequence of matrices; the goal is to find the most efficient
 way to multiply these matrices.",,,,,,,,,,,9.965,Inf,,,,,,,,1,,,Combinatorics
3,Matrix Chain Multiplication,1,Approximate MCOP,33,,,1,1,O(log^4 n),,,[https://epubs.siam.org/doi/abs/10.1137/0225039 Prakesh Ramanan (1996)],Prakesh Ramanan,1996,https://epubs.siam.org/doi/abs/10.1137/0225039,,,,0,0,2.03,n: 2.03,$O(\log^4 n)$,$O(\log^4 n)$,4,https://epubs.siam.org/doi/abs/10.1137/0225039,$O(n\log^4 n)$?,14,https://epubs.siam.org/doi/abs/10.1137/0225039,no,$n$: number of matrices,n,,,CREW PRAM,120,words,3,n: 3,$O(n)$?,Derived: $n$ subtrees and each one has a $O(1)$ size trunk,1,0,,0,,0,,0,1,$n$,,0,0,,"Matrix chain multiplication (or Matrix Chain Ordering Problem; MCOP) is an
 optimization problem that can be solved using dynamic programming.
 Given a sequence of matrices; the goal is to find the most efficient
 way to multiply these matrices.",,,,,,,,,,,99,Inf,,,,,,,,1,,,Combinatorics
3,Matrix Chain Multiplication,1,Approximate MCOP,,,,1,1,$O(\log^3 n)$,,,"[https://cse.hkust.edu.hk/mjg_lib/bibs/DPSu/DPSu.Files/00288295.pdf Bradford, Rawlins, Shannon (1998)]","Bradford, Rawlins, Shannon",1998,https://cse.hkust.edu.hk/mjg_lib/bibs/DPSu/DPSu.Files/00288295.pdf,,,,0,0,2.03,n: 2.03,$O(\log^3 n)$,$O(\log^3 n)$,3,https://cse.hkust.edu.hk/mjg_lib/bibs/DPSu/DPSu.Files/00288295.pdf,$O(n\log^2 n)$,12,,no,$n$: number of matrices,n,,,COMMON CRCW PRAM,132,words,3,n: 3,$O(n)$?,Derived: $n$ subtrees and each one has a $O(1)$ size trunk,1,0,,0,,0,,0,1,$n / \log n$,,0,0,,"Matrix chain multiplication (or Matrix Chain Ordering Problem; MCOP) is an
 optimization problem that can be solved using dynamic programming.
 Given a sequence of matrices; the goal is to find the most efficient
 way to multiply these matrices.",,,,,,,,,,,99,Inf,,,,,,,,1,,,Combinatorics
3,Matrix Chain Multiplication,1,Approximate MCOP,,,,1,1,O(log^2 n log log n),,,"[https://cse.hkust.edu.hk/mjg_lib/bibs/DPSu/DPSu.Files/00288295.pdf Bradford, Rawlins, Shannon (1998)]","Bradford, Rawlins, Shannon",1998,https://cse.hkust.edu.hk/mjg_lib/bibs/DPSu/DPSu.Files/00288295.pdf,,,,0,0,2.03,n: 2.03,O(log^2 n log log n),O(log^2 n log log n),2.1,https://cse.hkust.edu.hk/mjg_lib/bibs/DPSu/DPSu.Files/00288295.pdf,$O(n\log^2 n)$,12,,no,$n$: number of matrices,n,,,CRCW PRAM,130,words,3,n: 3,$O(n)$?,Derived: $n$ subtrees and each one has a $O(1)$ size trunk,1,0,,0,,0,,0,1,$n / \log \log n$,,0,0,,"Matrix chain multiplication (or Matrix Chain Ordering Problem; MCOP) is an
 optimization problem that can be solved using dynamic programming.
 Given a sequence of matrices; the goal is to find the most efficient
 way to multiply these matrices.",,,,,,,,,,,99,Inf,,,,,,,,1,,,Combinatorics
3,Matrix Chain Multiplication,1,Approximate MCOP,,,,1,1,O(log^2 n),,,"[https://cse.hkust.edu.hk/mjg_lib/bibs/DPSu/DPSu.Files/00288295.pdf Bradford, Rawlins, Shannon (1998)]","Bradford, Rawlins, Shannon",1998,https://cse.hkust.edu.hk/mjg_lib/bibs/DPSu/DPSu.Files/00288295.pdf,,,,0,0,2.03,n: 2.03,O(log^2 n),O(log^2 n),2,https://cse.hkust.edu.hk/mjg_lib/bibs/DPSu/DPSu.Files/00288295.pdf,$O(n\log^2 n)$,12,,no,$n$: number of matrices,n,,,EREW PRAM,110,words,3,n: 3,$O(n)$?,Derived: $n$ subtrees and each one has a $O(1)$ size trunk,1,0,,0,,0,,0,1,$n$,,0,0,,"Matrix chain multiplication (or Matrix Chain Ordering Problem; MCOP) is an
 optimization problem that can be solved using dynamic programming.
 Given a sequence of matrices; the goal is to find the most efficient
 way to multiply these matrices.",,,,,,,,,,,99,Inf,,,,,,,,1,,,Combinatorics
3,Matrix Chain Multiplication,1,Matrix Chain Scheduling Problem,34,,,1,1,O (log^3 n),,,[https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.54.9426&rep=rep1&type=pdf Czumaj (1993)],Czumaj,1993,https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.54.9426&rep=rep1&type=pdf,,,,0,0,2.02,n: 2.02,O(log^3 n),$O(log^3 n)$,3,https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.54.9426&rep=rep1&type=pdf,$O(n^2)$,20,https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.54.9426&rep=rep1&type=pdf,no?,$n$: number of matrices,n,,,CREW PRAM,120,words,5,n: 5,$O(n^2)$?,Derived: uses two arrays ($D$ and $c$) both of size $O(n^2)$,1,0,,0,,0,,0,1,$O(n^2 / \log^3 n)$,,0,0,,"Matrix chain multiplication (or Matrix Chain Ordering Problem; MCOP) is an
 optimization problem that can be solved using dynamic programming.
 Given a sequence of matrices; the goal is to find the most efficient
 way to multiply these matrices.",,,,,,,,,,,989,Inf,,,,,,,,1,,,Combinatorics
4,Longest Common Subsequence,1,LCS,,,,,,,,,[https://ieeexplore.ieee.org/document/21966 Aggarwal & Park (1988)],Aggarwal & Park,1988,https://ieeexplore.ieee.org/document/21966,,,,,,,,O(log m log n),O(log m log n),,https://ieeexplore.ieee.org/document/21966,O(mn log n),,https://ieeexplore.ieee.org/document/21966,no?,"m: length of shorter string
n: length of longer string",,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(mn/log m),,0,0,,The longest common subsequence (LCS) problem is the problem of finding the longest subsequence common to all sequences in a set of sequences (often just two sequences).,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,all-substrings longest common subsequence; LCS,,,,,,,,,,"Alves, Cáceres, Song",2003,https://ieeexplore.ieee.org/iel5/8608/27277/01213150.pdf,,,,,,,,O(mn/p + log p),O(mn/p + log p),,,O(mn),,,,"n, m: lengths of strings",,,,BSP/CGM,400,,,,,,,,,0,,0,,0,1,p < sqrt(m),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,,,,,,,,,,"Alves, Marzulo, Franca",2013,https://www.researchgate.net/profile/Leandro-Marzulo/publication/260087497_Unleashing_Parallelism_in_Longest_Common_Subsequence_Using_Dataflow/data/0deec52f7cec036fcb000000/WAMCA-2013-1.pdf,,,,,,,,O(mn/p),O(mn/p),,,O(mn),,,,"n, m: lengths of strings",,,,dataflow model,600,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,,,,,,,,,"[https://www.proquest.com/openview/efa7264fa824ce7768c53ccdcc6d1458/1?pq-origsite=gscholar&cbl=666313 Apostolico, Atallah, Larmore, McFaddin (1990)]","Apostolico, Atallah, Larmore, McFaddin",1990,https://www.proquest.com/openview/efa7264fa824ce7768c53ccdcc6d1458/1?pq-origsite=gscholar&cbl=666313,,,,,,,,O(log m log n),O(log m log n),,https://www.proquest.com/openview/efa7264fa824ce7768c53ccdcc6d1458/1?pq-origsite=gscholar&cbl=666313,O(mn log n),,https://www.proquest.com/openview/efa7264fa824ce7768c53ccdcc6d1458/1?pq-origsite=gscholar&cbl=666313,no?,"m: length of shorter string
n: length of longer string",,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(mn/log m),,0,0,,The longest common subsequence (LCS) problem is the problem of finding the longest subsequence common to all sequences in a set of sequences (often just two sequences).,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,,,,,,,,,"[https://www.proquest.com/openview/efa7264fa824ce7768c53ccdcc6d1458/1?pq-origsite=gscholar&cbl=666313 Apostolico, Atallah, Larmore, McFaddin (1990)]","Apostolico, Atallah, Larmore, McFaddin",1990,https://www.proquest.com/openview/efa7264fa824ce7768c53ccdcc6d1458/1?pq-origsite=gscholar&cbl=666313,,,,,,,,O(log n (log log m)^2),O(log n (log log m)^2),,https://www.proquest.com/openview/efa7264fa824ce7768c53ccdcc6d1458/1?pq-origsite=gscholar&cbl=666313,O(mn log n log log m),,https://www.proquest.com/openview/efa7264fa824ce7768c53ccdcc6d1458/1?pq-origsite=gscholar&cbl=666313,no?,"m: length of shorter string
n: length of longer string",,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(mn/log log m),,0,0,,The longest common subsequence (LCS) problem is the problem of finding the longest subsequence common to all sequences in a set of sequences (often just two sequences).,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,,,,,,,,,,"Babu, Saxena",1997,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=634481,,,,,,,,O(log m),O(log m),,,O(mn log m),,,,"m: length of shorter string
n: length of longer string",,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(mn),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,,,,,,,,,,"Babu, Saxena",1997,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=634481,,,,,,,,O(log^2 n),O(log^2 n),,,O(mn),,,,"m: length of shorter string
n: length of longer string",,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,mn/ logn,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,,,,,,,,,,"Bakhouya, Serres, El-Ghazawi",2008,https://link.springer.com/chapter/10.1007/978-3-540-85451-7_70,,,,,,,,O(alpha n/T + m) + O((m+n)/T),O(m),,,O(m+n),,,,"m: length of shorter string
n: length of longer string
alpha: adjustment factor
T: number of threads",,,,Partitioned Global Address Space programming model (PGAS),600,,,,,,,,,0,,0,,0,1,T,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,,,,,,,,,,,Bohara,2014,https://elibrary.tucl.edu.np/bitstream/123456789/7492/1/Thesis_069MSCS670.pdf,,,,,,,,O(n),O(n),,,O(n),,,,n: length of both strings,,,,MapReduce,600,,,,,,,,,0,,0,,0,1,O(1)?,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,0.001,,,,,,,,,,,"Chang, Ibarra, Palis",1987,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5009449,,,,,,,,,,,,,,,,,,,,one-way two-dimensional iterative array of finite-state machines (2-DIA),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,,,,,,,,,,"Chen, Wan, Liu",2006,https://link.springer.com/content/pdf/10.1186/1471-2105-7-S4-S4.pdf,,,,,,,,"O(|LCS(X,Y)|)","O(|LCS(X,Y)|)",,,O(L),,,,"m: length of shorter string
n: length of longer string
L: number of identical char pairs",,,,MPP,,,,,,,,,,0,,0,,0,1,"O(L/|LCS(X,Y)|)",,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,0.001,,,,,,,,,,,"Eswaran, RajaGopalan",2010,http://www.anale-informatica.tibiscus.ro/download/lucrari/8-1-11-Sumathy.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,,,,,,,,,,"Franklin, Seidel",2010,https://dl.acm.org/doi/pdf/10.1145/1878537.1878634,,,,,,,,O(n^3/T),O(n^3/T),,,O(n^3),,,,"m: length of shorter string
n: length of longer string
alpha: adjustment factor
T: number of threads",,,,UPC (Unified Parallel C),,,,,,,,,,0,,0,,0,1,T,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,,,,,,,,,,,"Freschi, Bogliolo",2004,https://www.sciencedirect.com/science/article/pii/S0020019004000602,,,,,,,,O(m + n) ,O(m + n) ,,,O(mN + Mn − mn),,,,"M, N: lengths of original strings
m, n: number of runs in their RLE representation",,,,systolic array,,,,,,,,,,0,,0,,0,1,M + N,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,,,,,,,,,,,"Galper, Brutlag (synchronous Row Wavefront approach)",1990,https://wayback.stanford.edu/was/20180312101809mp_/http://cmgm.stanford.edu/~brutlag/Papers/galper90.pdf,,,,,,,,O(ceil(m/p)*(n+p)),O(m)?,,,O(mn),,,,,,,,shared memory,,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,,,,,,,,,,,"Galper, Brutlag (asynchronous Row Wavefront approach) (also asynch DWF)",1990,https://wayback.stanford.edu/was/20180312101809mp_/http://cmgm.stanford.edu/~brutlag/Papers/galper90.pdf,,,,,,,,O(ceil(mn/p + p)),O(ceil(mn/p + p)),,,O(mn+p^2),,,,,,,,shared memory,,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,,,,,,,,,,,"Galper, Brutlag (synchronous Diagonal Wavefront approach)",1990,https://wayback.stanford.edu/was/20180312101809mp_/http://cmgm.stanford.edu/~brutlag/Papers/galper90.pdf,,,,,,,,O(\sum_i^{m-1} ceil(i/p) + (n-m+1)ceil(m/p) ),O(m+n),,,O(mn),,,,,,,,shared memory,,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,,,,,,,,,,"Hsu, Du",1984,https://www.sciencedirect.com/science/article/pii/0022000084900254/pdf,,,,,,,,O(m log(n/m) + m),O(m log(n/m) + m),,,O(n log s + pm log(n/m) + pm),,,,"n,m: lengths of strings m<=n
p: length of the LCS
s: number of distinct symbols",,,,unlisted,,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,MLCS (multiple strings),,,,,,,,,,Korkin,2023,https://unbscholar.lib.unb.ca/bitstreams/0979d487-ab0a-4557-94ef-7e35be0c7b24/download,,,,,,,,O(sD/P),O(sD/P),,,O(sD),,,,"d sequences of length n_i
s: size of the alphabet
D: set of all dominant positions
P: number of processors",,,,MPI,,,,,,,,,,0,,0,,0,1,P,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,SS-LCS (string-substring LCS),,,,,,,,,,Tiskin,2005,https://core.ac.uk/download/pdf/35010175.pdf,,,,,,,,O(mn/p) computation + O(n log p) communication + O(log p) barrier synchronization + O(n) memory per processor,O(mn/p + n log p),,,O(mn + pn log p),,,,assumes m ≥ n^{1/2} p log p,,,,BSP,400,,,,,,,,,0,,0,,0,1,p,,0,0,,SS_LCS consists in computing the length of the longest common subsequence of a and every substring of b,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LLCS;LCS,,,,,,,,,,"Krusche, Tiskin (dynamic programming)",2006,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=dd15623d9907870e7e7094a1570f40f6286a0891,,,,,,,,O(n^2/p · ( f + g/b + l/b^2)),O(n^2/p · ( f + g/b + l/b^2)),,,O(n^2 · ( f + g/b + l/b^2)),,,,"n: length of both strings
f: primitive operation time
g: communication gap
l: communication latency
b: memory block size",,,,BSP,400,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,,,,,,,,,,"Krusche, Tiskin",2010,https://dl.acm.org/doi/pdf/10.1145/1810479.1810521,,,,,,,,O(n^2/p),O(n^2/p),,,O(n^2),,,,"n: length of both strings
p: number of processors",,,,BSP,400,,,,,,,,,0,,0,,0,1,p < n^{1/3},,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,,,,,,,,,,"Lecroq, Luce, Myoupo",1997,https://www.sciencedirect.com/science/article/abs/pii/S0020019097000112,,,,,,,,O(n+m),O(n+m),,,O(nm),,,,"m: length of shorter string
n: length of longer string",,,,systolic array,,,,,,,,,,0,,0,,0,1,m,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,,,,,,,,,,"Luce, Myoupo",1998,https://www.sciencedirect.com/science/article/pii/S0167926098000030,,,,,,,,n+3m+p,O(n),,,O(nm^2),,,,"m: length of shorter string
n: length of longer string
p: length of an LCS",,,,"unidirectional, fault tolerant and modular semi- mesh architecture (systolic array)",,,,,,,,,,0,,0,,0,1,1/2m(m+1),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,SLCS (find the set of all LCSes),,,,,,,,,,"Luce, Myoupo",1998,https://www.sciencedirect.com/science/article/pii/S0167926098000030,,,,,,,,n+3m+p+l(m+2p-1),O(n+lm),,,O((n+lm)m^2),,,,"m: length of shorter string
n: length of longer string
p: length of an LCS
l: the number of input sequences C_l (|C_l|=p) needed to output a sequence empty of \Psi_k information",,,,"unidirectional, fault tolerant and modular semi- mesh architecture (systolic array)",,,,,,,,,,0,,0,,0,1,1/2m(m+1),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,0.001,MLCS,,DP,,,,,,,,"Li, Li, Duan, Wang, Wang",2016,https://dl.acm.org/doi/pdf/10.1145/2939672.2939842,,,,,,,,1/N_p*O(|V|) + T_com,1/N_p*O(|V|) + T_com,,,O(d|Σ|n + |E| + |V|),,,,"d: number of sequences
Σ: alphabet
n: length of each sequence
E: set of edges in NCSG
V: set of vertices in NCSG",,,,"None listed
""problem-solving model"" is Non-redundant
Common Subsequence Graph (NCSG)",,,,,,,,,,0,,0,,0,1,N_p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,,,,,,,,,,"Lin, Chen",1998,https://link.springer.com/content/pdf/10.1023/A:1008087824437.pdf,,,,,,,,O(m+n),O(m+n),,,O(mn),,,,"m: length of shorter string
n: length of longer string",,,,systolic array,,,,,,,,,,0,,0,,0,1,m,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,,,,,,,,,,"Lin, Lu, Fang",1991,https://ieeexplore.ieee.org/iel5/373/5730/00218203.pdf,,,,,,,,"max(log^2 m log log m, log n)","max(log^2 m log log m, log n)",,,O(mn),,,,"m: length of shorter string
n: length of longer string",,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,"mn/max(log^2 m log log m, log n)",,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,,,,,,,,,,"Lin, Yeh",2002,https://www.tandfonline.com/doi/abs/10.1080/10637190208941431,improves constants by factor of 2,,,,,,,O(m+n),O(m+n),,,O(mn),,,,"m: length of shorter string
n: length of longer string",,,,systolic array,,,,,,,,,,0,,0,,0,1,O(m),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,,,,,,,,,,"Liu, Chen",2008,https://link.springer.com/chapter/10.1007/978-0-387-77251-6_8,,,,,,,,"O(|LCS(X,Y)|)","O(|LCS(X,Y)|)",,,O(L),,,,L: number of identical character pairs,,,,Shenteng 1800 using MPI,,,,,,,,,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,,,,,,,,,,"Liu, Chen, Chen, Qin",2006,https://ieeexplore.ieee.org/iel5/10901/4673510/04673521.pdf,,,,,,,,"O(|LCS(X,Y)|)","O(|LCS(X,Y)|)",,,O(L),,,,L: number of identical character pairs,,,,Shenteng 1800 using MPI,,,,,,,,,,0,,0,,0,1,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,,,,,,,,,,Lu,1990,https://link.springer.com/chapter/10.1007/3-540-53504-7_96,,,,,,,,O(log{\rho} log^2{n}) + O(log m + log n),O(log{\rho} log^2{n}) + O(log m + log n),,,O(r log{\rho} log^2{n}) + O((m+n)(log m + log n)),,,,"\rho: length of LCS
r: number of pairs of positions at which two symbols match",,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,"max(r,m+n)",,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,,,,,,,,,[https://ieeexplore.ieee.org/document/298210 Lu & Lin (1994)],Lu & Lin,1994,https://ieeexplore.ieee.org/document/298210,,,,,,,,O(log^2 m + log n),O(log^2 m + log n),,https://ieeexplore.ieee.org/document/298210,O(mn (log m + log n/log m)),,https://ieeexplore.ieee.org/document/298210,no?,c,,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(mn/log m),,0,0,,The longest common subsequence (LCS) problem is the problem of finding the longest subsequence common to all sequences in a set of sequences (often just two sequences).,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,,,,,,,,,[https://ieeexplore.ieee.org/document/298210 Lu & Lin (1994)],Lu & Lin,1994,https://ieeexplore.ieee.org/document/298210,,,,,,,,"O(log^2 m log log m) if 
log^2 m log log m > log n else
O(log n)","O(log^2 m log log m) 
if log^2 m log log m 
> log n else O(log n)",,https://ieeexplore.ieee.org/document/298210,O(mn),,https://ieeexplore.ieee.org/document/298210,no?,"m: length of shorter string
n: length of longer string",,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,"O(mn/(log^2 m 
log log m)) if
log^2 m log log m
< log n else
O(mn/log n)",,0,0,,The longest common subsequence (LCS) problem is the problem of finding the longest subsequence common to all sequences in a set of sequences (often just two sequences).,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,,,,,,,,,[https://kilthub.cmu.edu/articles/journal_contribution/A_fast_parallel_algorithm_to_determine_edit_distance/6587387/1 Mathies (1988)],Mathies,1988,https://kilthub.cmu.edu/articles/journal_contribution/A_fast_parallel_algorithm_to_determine_edit_distance/6587387/1,,,,,,,,O(log m log n),O(log m log n),,https://kilthub.cmu.edu/articles/journal_contribution/A_fast_parallel_algorithm_to_determine_edit_distance/6587387/1,O(mn log m log n),,https://kilthub.cmu.edu/articles/journal_contribution/A_fast_parallel_algorithm_to_determine_edit_distance/6587387/1,no?,"m: length of shorter string
n: length of longer string",,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(mn),,0,0,,The longest common subsequence (LCS) problem is the problem of finding the longest subsequence common to all sequences in a set of sequences (often just two sequences).,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,,,,,,,,,,"Myoupo, Seme",1999,https://www.sciencedirect.com/science/article/pii/S0743731599915344,,,,,,,,O(1),O(1),,,O(mn),,,,"m: length of shorter string
n: length of longer string",,,,BSR with multiplecriteria,,,,,,,,,,0,,0,,0,1,nm,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,0.001,,,,,,,,,,,"Needleman, Wunsch",1970,https://www.gersteinlab.org/courses/452/05-fall/readings/needleman-wunsch-orig-dyn-prog-paper.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LLCS;LCS,,,,,,,,,,"Robert, Tchuente",1985,https://www.sciencedirect.com/science/article/pii/0020019085900584,,,,,,,,O(m+n),O(m+n),,,O((m+n)m),,,,"m: length of shorter string
n: length of longer string",,,,systolic array,,,,,,,,,,0,,0,,0,1,m,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,,,,,,,,,,"Singh, Wang, Walker",2006,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=d7d95e406696a569ef6c2d48a10f73dda5a12574,,,,,,,,O(1),O(1),,,O(nm),,,,"m: length of shorter string
n: length of longer string",,,,Associative SIMD Array with PE Interconnection Network,,,,,,,,,,0,,0,,0,1,nm,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,0.001,,,,,,,,,,,"Tchendji, Tepiele, Onabid, Myoupo",2022,https://www.sciencedirect.com/science/article/pii/S016781912200028X,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,0.001,MLCS,,,,,,,,,,"Wang, Korkin, Shang",2008,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5530316,,,,,,,,"T(N,d)/m",O(dn log^{d-2} n),,,"T(N,d) =O(dN log^{d-2} N)",,,,"d: number of sequences
n: length of sequences
N: number of dominant points?",,,,Not listed,,,,,,,,,,0,,0,,0,1,m <= N/n,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,,,,,,,,,,"Xu, Chen, Pan, He",2005,https://www.researchgate.net/profile/Xiaohua-Xu-2/publication/226204069_Fast_Parallel_Algorithms_for_the_Longest_Common_Subsequence_Problem_Using_an_Optical_Bus/links/543fba6c0cf2be1758cf79ee/Fast-Parallel-Algorithms-for-the-Longest-Common-Subsequence-Problem-Using-an-Optical-Bus.pdf,,,,,,,,O(mn/p),O(mn/p),,,O(mn),,,,"m: length of shorter string
n: length of longer string",,,,LARPBS,,,,,,,,,,0,,0,,0,1,p <= n,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,,,,,,,,,,"Yang, Lee",1987,https://www.tandfonline.com/doi/abs/10.1080/02533839.1987.9677028,,,,,,,,n+2m-1,n+2m-1,,,(n+2m-1)m,,,,"m: length of shorter string
n: length of longer string",,,,systolic array,,,,,,,,,,0,,0,,0,1,m,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,0.001,MLCS,,,,,,,,,,"Yang, Xu, Sun, Shang (DPro-MLCS)",2012,https://ieeexplore.ieee.org/iel5/71/4359390/06226388.pdf,,,,,,,,,,,,,,,,,,,,distributed memory,700,,,,,,,,,,,,,,,m,,,,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,0.001,MLCS,,,,,,,,,,"Yang, Xu, Sun, Shang ( DSDPro-MLCS)",2012,https://ieeexplore.ieee.org/iel5/71/4359390/06226388.pdf,,,,,,,,,,,,,,,,,,,,hierarchical distributed shared memory,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
5,Maximum Flow,1,,,,,1,1,O(V^3*log(V)/p),(see max flow in sheet1),,"[http://users.umiacs.umd.edu/~vishkin/TEACHING/4CLASS/SV82-maxflow.pdf Shiloach, Vishkin (1981)]","Shiloach, Vishkin",1981,http://users.umiacs.umd.edu/~vishkin/TEACHING/4CLASS/SV82-maxflow.pdf,,,,,0,,,O(V^3*log(V)/p),$O(V^3*log(V)/p)$,21,http://users.umiacs.umd.edu/~vishkin/TEACHING/4CLASS/SV82-maxflow.pdf,$O(V^3*log(V))$,31,http://users.umiacs.umd.edu/~vishkin/TEACHING/4CLASS/SV82-maxflow.pdf,yes relative to sequential algorithm described in paper,"V: number of vertices
E: number of edges
U: maximum edge capacity
p: number of processors",,,,CRCW PRAM,130,words,O(E),"V: 5,
E: 3",can be derived?,,,,,0,,0,,0,1,p,,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,,2,,,Combinatorics
5,Maximum Flow,1,,,,,1,1,O(V^2 log(V)),,,"[https://epubs.siam.org/doi/abs/10.1137/0218003 Gallo, Grigoriadis, Tarjan (1989)]","Gallo, Grigoriadis, Tarjan",1989,https://epubs.siam.org/doi/abs/10.1137/0218003,,,,,0,,,O(V^2 log(V)),$O(V^2 log(V))$,21,https://epubs.siam.org/doi/abs/10.1137/0218003,$O(V^3*log(V))$,31,,,"V: number of vertices
E: number of edges
U: maximum edge capacity",,,,CRCW PRAM?,,words,O(E),"V: 5,
E: 3",can be derived?,,,,,0,,0,,0,1,V,,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,,2,,,Combinatorics
5,Maximum Flow,1,,,,,1,1,O(V^2 log(V)),,,[https://dl.acm.org/doi/10.5555/520668 Vollmer (1999)],Vollmer,1999,https://dl.acm.org/doi/10.5555/520668,,,,,0,,,O(V^2 log(V)),$O(V^2 log(V))$,21,https://www.sciencedirect.com/science/article/abs/pii/S0743731522001691,$O(V^3*log(V))$,31,https://www.sciencedirect.com/science/article/abs/pii/S0743731522001691,,"V: number of vertices
E: number of edges
U: maximum edge capacity",,,,CREW PRAM,120,words,O(E),"V: 5,
E: 3",can be derived?,,,,,0,,0,,0,1,V,,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,,2,,,Combinatorics
5,Maximum Flow,1,Directed Acyclic Network,,,,1,1,O(V log V),,,"[https://apps.dtic.mil/sti/pdfs/ADA215113.pdf Goldberg, Tarjan (a) (1988)]","Goldberg, Tarjan (a)",1988,https://apps.dtic.mil/sti/pdfs/ADA215113.pdf,,,,,0,,,O(V log V),$O(V log(V))$,11,https://apps.dtic.mil/sti/pdfs/ADA215113.pdf,$O(VE log(V))$,31,https://apps.dtic.mil/sti/pdfs/ADA215113.pdf,,"V: number of vertices
E: number of edges
U: maximum edge capacity",,,,EREW PRAM,110,words,O(E),"V: 5,
E: 3",can be derived?,,,,,0,,0,,0,1,E,,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,,2,,,Combinatorics
5,Maximum Flow,1,Directed Acyclic Network,,,,1,1,O(V^2 log(V)),,,"[https://dl.acm.org/doi/abs/10.1145/48014.61051 Goldberg, Tarjan (b) (1988)]","Goldberg, Tarjan (b)",1988,https://dl.acm.org/doi/abs/10.1145/48014.61051,,,,,0,,,O(V^2 log(V)),$O(V^2 log(V))$,21,https://dl.acm.org/doi/abs/10.1145/48014.61051,$O(V^3*log(V))$,31,,,"V: number of vertices
E: number of edges
U: maximum edge capacity",,,,EREW PRAM,110,words,O(E),"V: 5,
E: 3",can be derived?,,,,,0,,0,,0,1,V,,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,,2,,,Combinatorics
5,Maximum Flow,1,,,,,1,1,O(V^2 log(V)),,,[https://dspace.mit.edu/handle/1721.1/149100 Goldberg (1985)],Goldberg,1985,https://dspace.mit.edu/handle/1721.1/149100,,,,,0,,,O(V^2 log(V)),$O(V^2 log(V))$,21,https://dspace.mit.edu/handle/1721.1/149100,$O(V^3*log(V))$,31,https://dspace.mit.edu/handle/1721.1/149100,,"V: number of vertices
E: number of edges
U: maximum edge capacity",,,,CREW PRAM,120,words,O(E),"V: 5,
E: 3",can be derived?,,,,,0,,0,,0,1,V,,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,,2,,,Combinatorics
5,Maximum Flow,1,Directed Acyclic Network,,,,1,1,O(V log(V)),,,[https://www.sciencedirect.com/science/article/pii/019667749290051D Vishkin (1992)],Vishkin,1992,https://www.sciencedirect.com/science/article/pii/019667749290051D,,,,,0,,,O(V log(V)),$O(V log(V))$,11,https://www.sciencedirect.com/science/article/pii/019667749290051D,$O(V^2 log(V))$,21,,,"V: number of vertices
E: number of edges
U: maximum edge capacity",,,,EREW PRAM,110,words,O(E),"V: 5,
E: 3",can be derived?,,,,,0,,0,,0,1,V,,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,,2,,,Combinatorics
5,Maximum Flow,1,Integer Maximum Flow,,,,1,1,O(V^2 log(U) log(E/V)),,,"[https://pubsonline.informs.org/doi/abs/10.1287/opre.37.5.748 Ahuja, Orlin (1989)]","Ahuja, Orlin",1989,https://pubsonline.informs.org/doi/abs/10.1287/opre.37.5.748,,,,,0,,,O(V^2 log(U) log(E/V)),O(V^2 log(U) log(E/V)),,https://pubsonline.informs.org/doi/abs/10.1287/opre.37.5.748,O(VE log(U) log(E/V)),,,,"V: number of vertices
E: number of edges
U: maximum edge capacity",,,,EREW PRAM,110,words,O(E),"V: 5,
E: 3",can be derived?,,,,,0,,0,,0,1,O(E/V),,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,,2,,,Combinatorics
5,Maximum Flow,1,Integer Maximum Flow,,,,1,1,O(V^1.66 log(V) log(U)),(see max flow in sheet1),,[https://dl.acm.org/citation.cfm?id=290181 Goldberg & Rao (Parallel) (1997)],Goldberg & Rao (Parallel),1997,https://dl.acm.org/citation.cfm?id=290181,,,,,0,4.66,,O(V^1.66 log(V) log(U)),$O(V^1.66 log(V) log(U))$,,https://dl.acm.org/citation.cfm?id=290181,$O(V^2.66 log(V) log(U))$?,,Derived,,"V: number of vertices
E: number of edges
U: maximum edge capacity",,,,PRAM,,words,O(V^2),V: 5,https://dl.acm.org/citation.cfm?id=290181,,,,,0,,0,,0,1,O(V),,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,,2,,,Combinatorics
5,Maximum Flow,1,Integer Maximum Flow,,,,1,1,O(E^0.5 V log(V) log(U)),(see max flow in sheet1),,[https://dl.acm.org/citation.cfm?id=290181 Goldberg & Rao (Parallel) (1997)],Goldberg & Rao (Parallel),1997,https://dl.acm.org/citation.cfm?id=290181,,,,,0,5,,O(E^0.5 V log(V) log(U)),$O(E^0.5 V log(V) log(U))$,,https://dl.acm.org/citation.cfm?id=290181,$O(E^0.5 V^2 log(V) log(U))$?,,Derived,,"V: number of vertices
E: number of edges
U: maximum edge capacity",,,,PRAM,,words,O(V^2),V: 5,https://dl.acm.org/citation.cfm?id=290181,,,,,0,,0,,0,1,O(V),,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,,2,,,Combinatorics
5,Maximum Flow,1,,,,,1,1,O(V log V),,,"[https://dl.acm.org/doi/abs/10.1016/j.jpdc.2022.07.003 Peretz, Fischler (2022)]","Peretz, Fischler",2022,https://dl.acm.org/doi/abs/10.1016/j.jpdc.2022.07.003,,,,,0,4.66,,O(V log V),O(V log V),11,https://dl.acm.org/doi/abs/10.1016/j.jpdc.2022.07.003,O(V^3 log V),31,https://dl.acm.org/doi/abs/10.1016/j.jpdc.2022.07.003,,"V: number of vertices
E: number of edges
U: maximum edge capacity",,,,CREW PRAM,120,words,O(V^2),V: 5,https://dl.acm.org/citation.cfm?id=290181,,,,,0,,0,,0,1,O(V^3),,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,,2,,,Combinatorics
5,Maximum Flow,1,Planar Directed Network,,,,1,1,O(log^2 V),,,[https://dl.acm.org/doi/pdf/10.1145/31846.31849 Johnson [DIRECTED-MIN-CUT 1] (1987)],Johnson [DIRECTED-MIN-CUT 1],1987,https://dl.acm.org/doi/pdf/10.1145/31846.31849,,,,,,,,O(log^2 V),O(log^2 V),2,https://dl.acm.org/doi/pdf/10.1145/31846.31849,O(V^6 log^2 V),62,,,"V: number of vertices
E: number of edges
U: maximum edge capacity",,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(V^6),,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,,,,,
5,Maximum Flow,1,Planar Directed Network,,,,1,1,O(log^3 V),,,[https://dl.acm.org/doi/pdf/10.1145/31846.31849 Johnson [DIRECTED-MIN-CUT 2] (1987)],Johnson [DIRECTED-MIN-CUT 2],1987,https://dl.acm.org/doi/pdf/10.1145/31846.31849,,,,,,,,O(log^3 V),O(log^3 V),3,https://dl.acm.org/doi/pdf/10.1145/31846.31849,O(V^4 log^3 V),43,,,"V: number of vertices
E: number of edges
U: maximum edge capacity",,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(V^4),,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,,,,,
5,Maximum Flow,1,Planar Undirected Network,,,,1,1,O(log^2 V),,,[https://dl.acm.org/doi/pdf/10.1145/31846.31849 Johnson (1987)],Johnson,1987,https://dl.acm.org/doi/pdf/10.1145/31846.31849,,,,,,,,O(log^2 V),O(log^2 V),2,https://dl.acm.org/doi/pdf/10.1145/31846.31849,O(V^3 log^2 V),32,,,"V: number of vertices
E: number of edges
U: maximum edge capacity",,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(V^3),,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,,,,,
5,Maximum Flow,0.001,Planar Network,,,,1,1,,,,"[https://www.sciencedirect.com/science/article/pii/S0022000097914938/pdf Henzinger, Klein, Rao, Subramanian (1997)]","Henzinger, Klein, Rao, Subramanian",1997,https://www.sciencedirect.com/science/article/pii/S0022000097914938/pdf,,,,,,,,,,,,,,,,"V: number of vertices
E: number of edges
U: maximum edge capacity",,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,,,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,0.001,,,Strassen,,,,,,,,Chandra,1976,https://cir.nii.ac.jp/crid/1573105974323147776,,,,,,,,O(n^{log 7}/p),O(n^{log 7}/p),,,O(n^{log 7}),27.5,,,,,,,,,,,,,,,,,,,,,,,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,0.001,,,Transitive closure method,,,,,,,,Chandra,1976,https://cir.nii.ac.jp/crid/1573105974323147776,,,,,,,,O(log^2(n)),O(log^2(n)),2,,n^(log7)*log(n),28,,,,,,,SIMD-SM-R (CREW PRAM?),210,,,,,,,,,,,0,,0,1,n^(log7)/log(n),27,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,0.001,Boolean Matrix Multiplication,,,,,,,,,,"Agerwala, Lint",1978,"T. Agerwala and B. Lint, ""Communication in parallel algorithms for Boolean matrix multiplication,""-Proc. 1978 Inter. Conf. on Parallel Processing, 1978.",,,,,,,,O(log n),O(log n),1,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=810488,O(n^3/log log n),,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=810488,,,,,,interconnected network,700,,,,,,,,,,,,,,1,O(n^3/(log n log log n)),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,0.001,Boolean Matrix Multiplication,,,,,,,,,,"Agerwala, Lint",1978,"T. Agerwala and B. Lint, ""Communication in parallel algorithms for Boolean matrix multiplication,""-Proc. 1978 Inter. Conf. on Parallel Processing, 1978.",,,,,,,,O(log n),O(log n),1,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=810488,O(n^3 log n/log log n),,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=810488,,,,,,interconnected network,700,,,,,,,,,,,,,,1,O(n^3/log log n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,,,,,,,,,,Dekel; Nassimi & Sahni,1981,https://epubs.siam.org/doi/abs/10.1137/0210049,,,,,,,,O(log n),O(log n),1,,O(n^3*log n),31,,,,,,,SIMD-CC,700,,,,,,,,,0,,0,,0,1,n^3,,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,,,,,,,,,,Dekel; Nassimi & Sahni,1981,https://epubs.siam.org/doi/abs/10.1137/0210049,,,,,,,,O(n),O(n),10,,O(n^3),30,,,,,,,SIMD-CC,700,,,,,,,,,0,,0,,0,1,n^2,,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,,,,,,,,,,Dekel; Nassimi & Sahni,1981,https://epubs.siam.org/doi/abs/10.1137/0210049,,,,,,,,O(n/m + log m),O(n/m + log m),,,O(n^3 + n^2*m*log m),,,,"nxn matrix multiplication
1 <= m <= n",,,,SIMD-CC,700,,,,,,,,,0,,0,,0,1,n^2*m,,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,,,,,,,,,,Dekel; Nassimi & Sahni,1981,https://epubs.siam.org/doi/abs/10.1137/0210049,,,,,,,,O(n^2/m-n^2.61/m^1.61),O(n^2/m-n^2.61/m^1.61),,,O(n^2*m-n^2.61*m^0.39),,,,,,,,SIMD-CC,700,,,,,,,,,0,,0,,0,1,m^2,,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,,,,,,,,,,Dekel; Nassimi & Sahni,1981,https://epubs.siam.org/doi/abs/10.1137/0210049,,,,,,,,O(log n),O(log n),1,,O(n^3*log n),31,,,,,,,SIMD-PS,700,,,,,,,,,0,,0,,0,1,n^3,,,,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,,,,,,,,,,Dekel; Nassimi & Sahni,1981,https://epubs.siam.org/doi/abs/10.1137/0210049,,,,,,,,O(n/m + log n),O(n/m + log n),,,O(n^3 + n^2*m*log m),,,,,,,,SIMD-PS,700,,,,,,,,,0,,0,,0,1,n^2*m,,,,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,,,,,,,,,,Dekel; Nassimi & Sahni,1981,https://epubs.siam.org/doi/abs/10.1137/0210049,,,,,,,,O(n^2/m-n^2.61/m^1.61),O(n^2/m-n^2.61/m^1.61),,,O(n^2*m-n^2.61*m^0.39),,,,,,,,SIMD-PS,700,,,,,,,,,0,,0,,0,1,m^2,,,,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,,,,,,"O(1)
Work: O(n^3)","""Edge lengths are independent identically distributed nonnegative random variables. Each edge length has a distribution function F with F(0)=0 and that F is differentiable at zero.""",,,Frieze & Rudolph,1984,http://math.cmu.edu/~af1p/Texfiles/PARALLELALG.pdf,,,,,,,,,,,,,,,,,,,,CRCW PRAM,130,,,,,,,,,,,,,,1,n^3,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,,,,,,,,,,"AGGARWAL, CHANDRA, SNIR",1990,https://www.sciencedirect.com/science/article/pii/030439759090188N,,,,,,,,O(log^{3/2}(n)),O(n^3/p + n^2/p^{2/3})),,,O(n^3+n^2*p^{1/3}) = O(n^3),,,,,,,,LPRAM,120,,,,,,,,,0,,0,,0,1,p=O(n^3/log^{3/2}(n)),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,,,,,,,,,,"Agarwal, Gustavson, Zubair",1994,https://ieeexplore.ieee.org/abstract/document/5389494,,,,,,,,O(n^3/p),O(n^3/p),,,O(n^3),30,,,,,,,MIMD-like machine,700,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,,,,,,,,,,"Agarwal, Bale, Gustavson, Joshi, Palkar (P_GEMM, Classical 3D)",1995,https://people.cs.vt.edu/~asandu/Public/Qual2005/Q2005_agarwal.pdf,,,,,,,,O(n^3/p),O(n^3/p),,,O(n^3),30,,,,,,,"unlisted, assume MIMD",700,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,,,,,,,,,,"Solomonik, Demmel (Classical 2.5D)",2011,https://www2.eecs.berkeley.edu/Pubs/TechRpts/2011/EECS-2011-10.pdf,,,,,,,,O(n^3/p),O(n^3/p),,,O(n^3),30,,,,,,,synchronous communication,700,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,,,,,,,,,,"Ballard, Demmel, Holtz, Lipshitz, Schwartz (CAPS)",2012,https://dl.acm.org/doi/pdf/10.1145/2312005.2312044,,,,,,,,O(n^{log 7}/P),O(n^{log 7}/P),,,O(n^{log 7}),27.5,,,"P: number of processors
ω0 = log_2 7
M: size of each processor's local memory",,,,message-passing network - BSP without the bulk-synchrony requirement,400,,,,,,,,,0,,0,,0,1,P,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,,,,,,,,,,"Luo, Drake (2D-Strassen)",1995,https://dl.acm.org/doi/pdf/10.1145/315891.315965,,,,,,,,O(n^{log 7}/P^{(log 7−1)/2}),O(n^{log 7}/P^{(log 7−1)/2}),,,O(n^{log 7}*P^{(3-log 7)/2}),,,,,,,,"distributed memory, message passing",700,,,,,,,,,0,,0,,0,1,P,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,,,,,,,,,,"Luo, Drake (Strassen-2D)",1995,https://dl.acm.org/doi/pdf/10.1145/315891.315965,,,,,,,,(7/8)^l*n^3/P,(7/8)^l*n^3/P,,,(7/8)^l*n^3,,,,"nxn: size of matrices being multiplied
l: the number of Strassen steps taken",,,,"distributed memory, message passing",700,,,,,,,,,0,,0,,0,1,P,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,,,,,,,,,,"Kumar, Huang, Johnson, Sadayappan",1993,https://downloads.hindawi.com/journals/sp/1995/636457.pdf,,,,,,,,O(n^{log 7}/P),O(n^{log 7}/P),,,O(n^{log 7}),27.5,,,,,,,shared memory vector processors like Cray Y-MP,,,,,,,,,,0,,0,,0,1,P,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,,,,,,,,,,"Hunold, Rauber, Rünger",2008,https://www.sciencedirect.com/science/article/pii/S0167819108000355,,,,,,,,O(n^3/p),O(n^3/p),,,O(n^3),,,,,,,,multiprocessor task programming model (uses distributed memory),700,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,,,,,,,,,,Ballard (CAPS) (same as 2012 paper),2013,https://www.proquest.com/docview/1526399338?pq-origsite=gscholar&fromopenview=true,,,,,,,,O(n^{log 7}/P),O(n^{log 7}/P),,,O(n^{log 7}),,,,,,,,"distributed memory, message passing",700,,,,,,,,,0,,0,,0,1,P,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,,,,,,,,,,Ballard (2.5D-Strassen),2013,https://www.proquest.com/docview/1526399338?pq-origsite=gscholar&fromopenview=true,,,,,,,,"max {n^3/(PM^{3/2−(log 7)/2}), n^{log 7}/P^{(log 7)/3} } + n^2/P^{2/3} + log P","max {n^3/(PM^{3/2−(log 7)/2}), n^{log 7}/P^{(log 7)/3} } + n^2/P^{2/3} + log P",,,"max {n^3/M^{3/2−(log 7)/2}, n^{log 7}/P^{(log 7)/3 - 1} } + n^2 P^{1/3} + P log P",,,,,,,,"distributed memory, message passing",700,,,,,,,,,0,,0,,0,1,P,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,,,,,,,,,,Ballard (Strassen-2.5D),2013,https://www.proquest.com/docview/1526399338?pq-origsite=gscholar&fromopenview=true,,,,,,,,(7/8)^l n^3/P,(7/8)^l n^3/P,,,(7/8)^l n^3,,,,,,,,"distributed memory, message passing",700,,,,,,,,,0,,0,,0,1,P,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,,,,,,,,,,"Bae, Shinn, Takaoka",2014,https://www.sciencedirect.com/science/article/pii/S1877050914003858,,,,,,,,O(n),O(n),,,O(n^3),,,,"nxn: size of matrices
t_s: message startup time
t_w: per-word comm time",,,,mesh array,700,,,,,,,,,0,,0,,0,1,n^2,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,,,,,,,,,,"Gazit, Miller (parallel Coppersmith & Winograd 1987)",1988,http://www.cs.cmu.edu/~glmiller/Publications/GaMi88.pdf,,,,,,,,O(log n),O(log n),1,,O(n^{2.376} log n),,,,,,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(n^{2.376}),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,,,,,,,,,,"Gupta, Kumar (variant of DNS81)",1993,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4134256,,,,,,,,n^3/p + 5/3 t_s log(p) + 5/3 t_w n^2/p^{2/3} log(p),n^3/p + 5/3 t_s log(p) + 5/3 t_w n^2/p^{2/3} log(p),,,n^3 + 5/3 t_s p log(p) + 5/3 t_w n^2 p^{1/3} log(p),,,,"nxn: size of matrices
t_s: message startup time
t_w: per-word comm time",,,,2D mesh,700,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,,,,,,,,,,"Dumitrescu, Roch, Trystram",1994,https://www.tandfonline.com/doi/pdf/10.1080/10637199408915454,,,,,,,,O(n^log 7),O(n^log 7),,,O(n^log 7),,,,,,,,distributed MIMD w/ ring network,700,,,,,,,,,0,,0,,0,1,7,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,,,,,,,,,,"Dumitrescu, Roch, Trystram",1994,https://www.tandfonline.com/doi/pdf/10.1080/10637199408915454,,,,,,,,O((n/2^k)^log 7),O((n/2^k)^log 7),,,O((n/2^k)^log 7*7^k),,,,,,,,distributed MIMD w/ k hyper-torus network,700,,,,,,,,,0,,0,,0,1,7^k,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,,,,,,,,,,Berntsen (Classical 3D),1989,https://www.sciencedirect.com/science/article/pii/0167819189900914,,,,,,,,n^3/p + 2 t_s p^{1/3} + 1/3 t_s log(p) + 3 t_w n^2/p^{2/3},n^3/p + 2 t_s p^{1/3} + 1/3 t_s log(p) + 3 t_w n^2/p^{2/3},,,n^3 + 2 t_s p^{4/3} + 1/3 t_s p log(p) + 3 t_w n^2 p^{1/3},,,,"nxn: size of matrices
t_s: message startup time
t_w: per-word comm time",,,,2D mesh,700,,,,,,,,,0,,0,,0,1,p,,0,0,Info from this paper: https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4134256,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,0.001,,,,,,,,,,,"Fox, Johnson, Lyzenga, Otto, Salmon, Walker",1988,"G. Fox, M. Johnson, G. Lyzenga, S. Otto, J. Salmon, and D. Walker, Solving Problems on Concurrent Processors. Vol. 1 1988",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,,,,,,,,,,Cannon (Classical 2D),1969,"L. E. Cannon, A Cellular Computer to Implement the Kalman Filter Algorithm, Ph.D. thesis, Montana State University, Bozeman, MT, 1969",,,,,,,,n^3/p + 2sqrt(p) * (t_s + n^2/p t_w),n^3/p + 2sqrt(p) * (t_s + n^2/p t_w),,,n^3 + 2sqrt(p) * (p*t_s + n^2*t_w),,,,"nxn: size of matrices
t_s: message startup time
t_w: per-word comm time",,,,2D mesh,700,,,,,,,,,0,,0,,0,1,p,,0,0,Info from this paper: https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4134256,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,,,,,,,,,,"Fox, Otto, Hey (aka broadcast-multiply-roll)",1987,https://www.sciencedirect.com/science/article/pii/0167819187900603,,,,,,,,2M^3/N*t_flop + 2M^2/sqrt(N)*t_comm + sqrt(N)(sqrt(N)-1)*t_start,2M^3/N*t_flop + 2M^2/sqrt(N)*t_comm + sqrt(N)(sqrt(N)-1)*t_start,,,2M^3*t_flop + 2M^2*sqrt(N)*t_comm + N^1.5(sqrt(N)-1)*t_start,,,,"MxM: size of matrix
N: number of processing nodes",,,,"distributed memory MIMD, w/ at least a 2D mesh topology",700,,,,,,,,,0,,0,,0,1,N,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,,,,,,,,,,"Choi, Walker, Dongarra (PUMMA)",1994,https://onlinelibrary.wiley.com/doi/pdf/10.1002/cpe.4330060702,,,,,,,,O(n^3/p),O(n^3/p),,,O(n^3),,,,,,,,"Distributed memory MIMD, like the Intel Touchstone Delta",700,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,,,,,,,,,,"Van De Geijn, Watts (SUMMA, Classical 2D)",1997,https://onlinelibrary.wiley.com/doi/pdf/10.1002/(SICI)1096-9128(199704)9:4%3C255::AID-CPE250%3E3.0.CO;2-2,,,,,,,,O(n^3/p),O(n^3/p),,,O(n^3),,,,,,,,"an r x c mesh of processors, message passing",700,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,,,,,,,,,,"Lin, Snyder",1992,https://www.computer.org/csdl/proceedings-article/shpcc/1992/00232648/12OmNAFWOPr,,,,,,,,O(n^3/p),O(n^3/p),,,O(n^3),,,,,,,,MIMD hypercubes,700,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,,,,,,,,,,"Lee, Robertson, Fortes (Cannon generalized for block-cyclic distributed matrices)",1997,https://dl.acm.org/doi/pdf/10.1145/263580.263591,,,,,,,,O(n^3/p),O(n^3/p),,,O(n^3),,,,,,,,2D mesh,700,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,,,,,,,,,,Choi (DIMMA),1997,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=580916,,,,,,,,O(n^3/p),O(n^3/p),,,O(n^3),,,,,,,,distributed memory concurrent computers,700,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,rectangular matrices,,,,,,,,,,"Demmel, Eliahu, Fox, Kamil, Lipshitz, Schwartz, Spillinger (CARMA)",2013,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6569817,,,,,,,,O(mnk/p),O(mnk/p),,,O(mnk),,,,m x k and k x n matrices,,,,distributed-memory; also shared-memory system with non-uniform access,,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,,,,,,,,,,"Frigo, Leiserson, Prokop, Ramachandran",1999,https://ieeexplore.ieee.org/iel5/6604/17631/00814600.pdf,,,,,,,,O(mnk/p),O(mnk/p),,,O(mnk),,,,m x k and k x n matrices,,,,unlisted,,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,sparse matrix-sparse vector,,,,,,,,,,"Azad, Buluc",2017,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7967159,,,,,,,,O(fd/t),O(fd/t),,,O(fd),,,,"f: number of nonzero elements in the vector
d: the expected number of nonzero elements in a column of the matrix
t: number of threads",,,,"shared memory, using a 24-core Intel Ivy Bridge processor and a 64-core Intel KNL manycore processor",,,,,,,,,,1,"using a Erdos-Renyi graph G(n, d/n)",0,,0,1,t,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,dense matrix multiplication,,,,,,,,,,"Krishnan, Nieplocha (SRUMMA)",2004,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1303000,,,,,,,,O(n^3/p),O(n^3/p),,,O(n^3),,,,,,,,shared memory and remote memory access (RMA) communication,,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,,,,,,,,,,"Mathur, Johnsson (multiple algorithms)",1994,https://dash.harvard.edu/bitstream/handle/1/23017262/tr-01-92.pdf,,,,,,,,O(PQR/N),O(PQR/N),,,O(PQR),,,,"PxQ, QxR: sizes of matrices being multiplied
N: number of processors",,,,"data parallel, hypercube (CM-200)",700,,,,,,,,,0,,0,,0,1,N,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,,1D/2D/3D column partitioning,,,,,,,,"Johnsson, Ho (multiple algorithms)",1987,http://www.cs.yale.edu/publications/techreports/tr569.pdf,,,,,,,,O(PQR/N),O(PQR/N),,,O(PQR),,,,"PxQ, QxR: sizes of matrices being multiplied
N: number of processors
n = log N",,,,boolean cube (MIMD and SIMD),700,,,,,,,,,0,,0,,0,1,N,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,,,,,,,,,,"Ho, Johnsson, Edelman",1991,https://dash.harvard.edu/bitstream/handle/1/25811001/tr-19-91.pdf?sequence=1,,,,,,,,O(n^3/p),O(n^3/p),,,O(n^3),,,,"nxn: size of matrices being multiplied
p: processors",,,,hypercube,700,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,,,,,,,,,,"Grayson, Shah, Van De Geijn (Strassen-2D)",1996,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=a3a1977cf65e833bf55da4a2e11f074607ee0e21,,,,,,,,(7/8)^l*n^3/P,(7/8)^l*n^3/P,,,(7/8)^l*n^3,,,,"nxn: size of matrices being multiplied
l: the number of Strassen steps taken",,,,distributed memory MIMD (like Intel Paragon),700,,,,,,,,,0,,0,,0,1,P,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,,,,,,,,,,"Bjørstad, Manne, Sørevik, Vajteršic (Winograd's algorithm)",1992,https://epubs.siam.org/doi/pdf/10.1137/0613026,,,,,,,,O(n^3/p),O(n^3/p),,,O(n^3),,,,,,,,SIMD with distributed memory,700,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,,,,,,,,,,,"Lee, Aboelaze (Winograd's algorithm)",1991,http://www.cse.yorku.ca/~aboelaze/publication/LeA91.pdf,,,,,,,,O(n^2),O(n^2),,,O(n^3),,,,nxn: size of matrices being multiplied,,,,array processor (distributed memory SIMD),700,,,,,,,,,0,,0,,0,1,n,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
9,Linear System,0,,,,,,,,,,,"Evans, Deren",1990,https://www.sciencedirect.com/science/article/pii/S0167819105801036,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
10,Linear Programming,0.001,General Linear Programming,,,,,,,,,[https://dl.acm.org/doi/10.1145/1111278.1111280 Kamdoum (1982)],Kamdoum,1982,https://dl.acm.org/doi/10.1145/1111278.1111280,,,,,,,,"$O(2^n*poly(n, m)/p)$?","$O(2^n*poly(n, m)/p)$?",,https://dl.acm.org/doi/10.1145/1111278.1111280,"$O(2^n*poly(n, m))$?",,,no,"n: number of constraints
d: number of dimensions
p: number of processors, p≤d",,,,?,,,,,,,,,,0,,0,,0,1,p,,0,0,,Linear programming (LP; also called linear optimization) is a method to achieve the best outcome (such as maximum profit or lowest cost) in a mathematical model whose requirements are represented by linear relationships. Linear programming is a special case of mathematical programming (also known as mathematical optimization).,,,,,,,,,,,,,,,,,,,,,,,
10,Linear Programming,0.001,General Linear Programming,,,,,,,,,[https://theory.stanford.edu/~megiddo/pdf/flying.pdf Megiddo (1982)],Megiddo,1982,https://theory.stanford.edu/~megiddo/pdf/flying.pdf,,,,,,,,O(log n(log log n)^(d-2)),O(log n(log log n)^(d-2)),,https://theory.stanford.edu/~megiddo/pdf/flying.pdf,O((n log n)(log log n)^(d-1)),,Derived,no,"n: number of constraints
d: number of dimensions",,,,WRAM,,,,,,,,,,1,Las Vegas?,0,,0,1,O(n),,0,0,,Linear programming (LP; also called linear optimization) is a method to achieve the best outcome (such as maximum profit or lowest cost) in a mathematical model whose requirements are represented by linear relationships. Linear programming is a special case of mathematical programming (also known as mathematical optimization).,,,,,,,,,,,,,,,,,,,,,,,
10,Linear Programming,0.001,General Linear Programming,,,,,,,,,[https://theory.stanford.edu/~megiddo/pdf/flying.pdf Megiddo (1982)],Megiddo,1982,https://theory.stanford.edu/~megiddo/pdf/flying.pdf,,,,,,,,O((log n)^(d-1)(log log n)),O((log n)^(d-1)(log log n)),,https://theory.stanford.edu/~megiddo/pdf/flying.pdf,O(n(log n)^(d-1)(log log n)),,Derived,no,"n: number of constraints
d: number of dimensions",,,,WRAM,,,,,,,,,,0,,0,,0,1,O(n),,0,0,,Linear programming (LP; also called linear optimization) is a method to achieve the best outcome (such as maximum profit or lowest cost) in a mathematical model whose requirements are represented by linear relationships. Linear programming is a special case of mathematical programming (also known as mathematical optimization).,,,,,,,,,,,,,,,,,,,,,,,
10,Linear Programming,1,General Linear Programming,,,,,,,,,[https://epubs.siam.org/doi/pdf/10.1137/S0097539792234858 Ajtai & Megiddo (1996)],Ajtai & Megiddo,1996,https://epubs.siam.org/doi/pdf/10.1137/S0097539792234858,,,,,,,,O((log log n)^d),O((log log n)^d),,https://epubs.siam.org/doi/pdf/10.1137/S0097539792234858,O(n(log log n)^d),,Derived,no,"n: number of constraints
d: number of dimensions",,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(n),,0,0,,Linear programming (LP; also called linear optimization) is a method to achieve the best outcome (such as maximum profit or lowest cost) in a mathematical model whose requirements are represented by linear relationships. Linear programming is a special case of mathematical programming (also known as mathematical optimization).,,,,,,,,,,,,,,,,,,,,,,,
10,Linear Programming,1,General Linear Programming,,,,,,,,,"[https://dl.acm.org/doi/pdf/10.1145/167088.167211 Luby, Nisan (1993)]","Luby, Nisan",1993,https://dl.acm.org/doi/pdf/10.1145/167088.167211,,,,,,,,O(log(nd)log(d)log(n/eps)/eps^4),O(d log(nd)log(d)log(n/eps)/eps^4),,https://dl.acm.org/doi/pdf/10.1145/167088.167211,O(d log(nd)log(d)log(n/eps)/eps^4),,Derived,no,"n: number of constraints
d: number of dimensions
eps: error parameter",,,,EREW PRAM,110,,,,,,,,,0,,1,1+eps,0,1,O(nd),,0,0,,Linear programming (LP; also called linear optimization) is a method to achieve the best outcome (such as maximum profit or lowest cost) in a mathematical model whose requirements are represented by linear relationships. Linear programming is a special case of mathematical programming (also known as mathematical optimization).,,,,,,,,,,,,,,,,,,,,,,,
10,Linear Programming,1,General Linear Programming,,,,,,,,,[https://dl.acm.org/doi/pdf/10.1145/220279.220316 Dyer (1993)],Dyer,1993,https://dl.acm.org/doi/pdf/10.1145/220279.220316,,,,,,,,O(log n(log log n)^(d-1)),O(log n(log log n)^(d-1)),,https://dl.acm.org/doi/pdf/10.1145/220279.220316,O((n log n)(log log n)^(d-1)),,Derived,no,"n: number of constraints
d: number of dimensions",,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,O(n),,0,0,,Linear programming (LP; also called linear optimization) is a method to achieve the best outcome (such as maximum profit or lowest cost) in a mathematical model whose requirements are represented by linear relationships. Linear programming is a special case of mathematical programming (also known as mathematical optimization).,,,,,,,,,,,,,,,,,,,,,,,
10,Linear Programming,1,General Linear Programming,,,,,,,,,[https://ieeexplore.ieee.org/abstract/document/89579 Vaidya (1990)],Vaidya,1990,https://ieeexplore.ieee.org/abstract/document/89579,,,,,,,,O((nd)^(1/4)(log n)^3 L),O((nd)^(1/4)(log n)^3 L),,https://ieeexplore.ieee.org/abstract/document/89579,O(((nd)^(1/4)(log n)^3 L)(n^3 + d^(omega-1)n)),,,no,"n: number of constraints
d: number of dimensions
L: log(det_max) + log(n+d) + log(c^T c + b^T b)
omega: exponent on matrix multiplication",,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(n^3 + d^(omega-1)n),,0,0,,Linear programming (LP; also called linear optimization) is a method to achieve the best outcome (such as maximum profit or lowest cost) in a mathematical model whose requirements are represented by linear relationships. Linear programming is a special case of mathematical programming (also known as mathematical optimization).,,,,,,,,,,,,,,,,,,,,,,,
10,Linear Programming,1,"General Linear Programming 
",,,,,,,,,[https://ieeexplore.ieee.org/document/89578 Alon & Megiddo (1990)],Alon & Megiddo,1990,https://ieeexplore.ieee.org/document/89578,,,,,,,,O(d^2 log^2 d) with probability approaching 1,O(d^2 log^2 d) with probability approaching 1,,https://ieeexplore.ieee.org/document/89578,O(d^3 n),,https://ieeexplore.ieee.org/document/89578,yes,"n: number of constraints
d: number of dimensions",,,,CRCW PRAM,130,,,,,,,,,1,Las Vegas,0,,0,1,O(nd/log^2 d),,0,0,,Linear programming (LP; also called linear optimization) is a method to achieve the best outcome (such as maximum profit or lowest cost) in a mathematical model whose requirements are represented by linear relationships. Linear programming is a special case of mathematical programming (also known as mathematical optimization).,,,,,,,,,,,,,,,,,,,,,,,
10,Linear Programming,1,"General Linear Programming 
(only 2 -dimensional)",,,,,,,,,[https://www.sciencedirect.com/science/article/pii/002001909090026T?ref=pdf_download&fr=RR-2&rr=7d29f5c94c8e2249 Deng (1990)],Deng,1990,https://www.sciencedirect.com/science/article/pii/002001909090026T?ref=pdf_download&fr=RR-2&rr=7d29f5c94c8e2249,,,,,,,,O(log n),O(log n),1,https://www.sciencedirect.com/science/article/pii/002001909090026T?ref=pdf_download&fr=RR-2&rr=7d29f5c94c8e2249,O(n),10,https://www.sciencedirect.com/science/article/pii/002001909090026T?ref=pdf_download&fr=RR-2&rr=7d29f5c94c8e2249,yes,n: number of constraints,,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(n/log n),,0,0,,Linear programming (LP; also called linear optimization) is a method to achieve the best outcome (such as maximum profit or lowest cost) in a mathematical model whose requirements are represented by linear relationships. Linear programming is a special case of mathematical programming (also known as mathematical optimization).,,,,,,,,,,,,,,,,,,,,,,,
10,Linear Programming,0.001,"General Linear Programming 
(no negative coefficients)",,,,,,,,,[https://ieeexplore.ieee.org/abstract/document/959930 Young (2001)],Young,2001,https://ieeexplore.ieee.org/abstract/document/959930,,,,,,,,O(log(n)^2 log(d log(n)/eps)/eps^4),O(log(n)^2 log(d log(n)/eps)/eps^4),,https://ieeexplore.ieee.org/abstract/document/959930,O(nd log(n)^2 log(d log(n)/eps)/eps^4),,,yes,"n: number of constraints
d: number of dimensions
eps: error parameter",,,,CRCW PRAM?,,,,,,,,,,0,,0,,0,1,O(nd)?,,0,0,,Linear programming (LP; also called linear optimization) is a method to achieve the best outcome (such as maximum profit or lowest cost) in a mathematical model whose requirements are represented by linear relationships. Linear programming is a special case of mathematical programming (also known as mathematical optimization).,,,,,,,,,,,,,,,,,,,,,,,
11,Line segment intersection,1,"Reporting all intersection points, line segments",126,,,1,1,O(log^2(n)),,,[https://dl.acm.org/citation.cfm?id=72950 Goodrich (1989)],Goodrich,1989,https://dl.acm.org/citation.cfm?id=72950,,,,0,0,2,n: 2,$O(\log^2(n))$,$O(\log^2(n))$,2,https://dl.acm.org/citation.cfm?id=72950,$O(n\log^2(n) + k\log(n))$,,https://dl.acm.org/citation.cfm?id=72950,yes (but algo is not optimal),"n: number of line segments
k: number of points of intersection",n,,,CREW PRAM,120,words,3,"n: 3,
k: 3",O(n+k) total?,"Seems to require creating/storing an O(n)-sized data structure (""segment tree""), and then computing the O(k) intersections using the data structure",1,0,,0,,0,,0,1,O(n + k/log n),,0,0,,"The line segment intersection problem supplies a list of line segments in the Euclidean plane and asks about the points where they intersect (cross), if any.",,,,,,,,,,,99.3,10070.49345,,,,,,,,4,,,Image Processing
11,Line segment intersection,1,"Reporting all intersection points, line segments",,,,1,1,O(1),,,"[https://link.springer.com/content/pdf/10.1007/BF01758753.pdf Reif, Sen (implicit) (1992)]","Reif, Sen (implicit)",1992,https://link.springer.com/content/pdf/10.1007/BF01758753.pdf,,,,0,0,2,n: 2,O(1),O(1),0,https://link.springer.com/content/pdf/10.1007/BF01758753.pdf,O(n^2),20,,no,"n: number of line segments
k: number of points of intersection",n,,,CREW PRAM,120,words,3,"n: 3,
k: 3",O(n+k) total?,"Seems to require creating/storing an O(n)-sized data structure (""segment tree""), and then computing the O(k) intersections using the data structure",1,0,,0,,0,,0,1,O(n^2),,0,0,,"The line segment intersection problem supplies a list of line segments in the Euclidean plane and asks about the points where they intersect (cross), if any.",,,,,,,,,,,99.3,10070.49345,,,,,,,,4,,,Image Processing
11,Line segment intersection,1,"Reporting all intersection points, line segments",,,,1,1,O(((n+k) log n log log n)/p),,,[https://link.springer.com/article/10.1007/BF01758839 Rüb (1992)],Rüb,1992,https://link.springer.com/article/10.1007/BF01758839,,,,0,0,2,n: 2,O(((n+k) log n log log n)/p),O(log n log log n),1.1,https://link.springer.com/article/10.1007/BF01758839,O((n+k) log n log log n),,https://link.springer.com/article/10.1007/BF01758839,no,"n: number of line segments
k: number of points of intersection
p: number of processors; p ≤ n+k",n,,,CREW PRAM,120,words,3,"n: 3,
k: 3",O(n+k) total?,"Seems to require creating/storing an O(n)-sized data structure (""segment tree""), and then computing the O(k) intersections using the data structure",1,0,,0,,0,,0,1,p,,0,0,,"The line segment intersection problem supplies a list of line segments in the Euclidean plane and asks about the points where they intersect (cross), if any.",,,,,,,,,,,99.3,10070.49345,,,,,,,,4,,,Image Processing
11,Line segment intersection,1,"Reporting red-blue intersection points, red-blue curve segments",,,,1,1,O(log n),,,[https://pure.mpg.de/pubman/faces/ViewItemOverviewPage.jsp?itemId=item_1834902 Rüb (1992)],Rüb,1992,https://pure.mpg.de/pubman/faces/ViewItemOverviewPage.jsp?itemId=item_1834902,,,,0,0,2,n: 2,O(log n),O(log n),1,https://pure.mpg.de/pubman/faces/ViewItemOverviewPage.jsp?itemId=item_1834902,O(n log n + k),,,no,"n: number of curve segments
k: number of points of intersection",n,,,CREW PRAM,120,words,3,"n: 3,
k: 3",O(n+k) total?,"Seems to require creating/storing an O(n)-sized data structure (""segment tree""), and then computing the O(k) intersections using the data structure",1,0,,0,,0,,0,1,O(n + k/log n),,0,0,https://pure.mpg.de/rest/items/item_1834902/component/file_1887384/content,"The line segment intersection problem supplies a list of line segments in the Euclidean plane and asks about the points where they intersect (cross), if any.",,,,,,,,,,,99.3,10070.49345,,,,,,,,4,,,Image Processing
11,Line segment intersection,0.001,"Reporting red-blue intersection points, red-blue curve segments",,,,1,1,"O((n log n log p + k)/p + T(n log p, p))",,,"[https://www.worldscientific.com/doi/abs/10.1142/S0218195996000307 Fabri, Devillers (1996)]","Fabri, Devillers",1996,https://www.worldscientific.com/doi/abs/10.1142/S0218195996000307,,,,0,0,2,n: 2,"O((n log n log p + k)/p + T(n log p, p))","O((n(log n)^2 + k)/sqrt(n) + T(n log n, sqrt(n)))",,https://www.worldscientific.com/doi/abs/10.1142/S0218195996000307,O(n log n log p + k)?,,,no,"n: number of line segments
k: number of points of intersection
p: number of processors; n≥p^2
T(m, p): time used to sort m items on a p-processor machine",n,,,"""coarse grained multicomputer""",,words,3,"n: 3,
k: 3",O(n+k) total?,"Seems to require creating/storing an O(n)-sized data structure (""segment tree""), and then computing the O(k) intersections using the data structure",1,0,,0,,0,,0,1,p,,0,0,https://inria.hal.science/file/index/docid/74791/filename/RR-1882.pdf,"The line segment intersection problem supplies a list of line segments in the Euclidean plane and asks about the points where they intersect (cross), if any.",,,,,,,,,,,99.3,10070.49345,,,,,,,,4,,,Image Processing
11,Line segment intersection,1,Intersection detection (whether there exists an intersection),,,,1,1,O(log n),,,"[https://link.springer.com/content/pdf/10.1007/BF01762120.pdf Aggarwal, Chazelle, Guibas, Ó'Dúnlaing, Yap (1988)]","Aggarwal, Chazelle, Guibas, Ó'Dúnlaing, Yap",1988,https://link.springer.com/content/pdf/10.1007/BF01762120.pdf,,,,0,0,2,n: 2,O(log n),O(log n),1,https://link.springer.com/content/pdf/10.1007/BF01762120.pdf,O(n(log n)^2),22,,no,n: number of line segments,n,,,CREW PRAM,120,words,3,"n: 3,
k: 3",O(n+k) total?,"Seems to require creating/storing an O(n)-sized data structure (""segment tree""), and then computing the O(k) intersections using the data structure",1,0,,0,,0,,0,1,O(n log n),,0,0,,"The line segment intersection problem supplies a list of line segments in the Euclidean plane and asks about the points where they intersect (cross), if any.",,,,,,,,,,,99.3,10070.49345,,,,,,,,4,,,Image Processing
11,Line segment intersection,1,Intersection detection (whether there exists an intersection),,,,1,1,O(log^2 n),,,"[https://dl.acm.org/doi/10.1145/10515.10539 Atallah, Goodrich (1986)]","Atallah, Goodrich",1986,https://dl.acm.org/doi/10.1145/10515.10539,,,,0,0,2,n: 2,O(log^2 n),O(log^2 n),2,https://dl.acm.org/doi/10.1145/10515.10539,O(n(log n)^2),22,,no,n: number of line segments,n,,,CREW PRAM,120,words,3,"n: 3,
k: 3",O(n+k) total?,"Seems to require creating/storing an O(n)-sized data structure (""segment tree""), and then computing the O(k) intersections using the data structure",1,0,,0,,0,,0,1,O(n),,0,0,,"The line segment intersection problem supplies a list of line segments in the Euclidean plane and asks about the points where they intersect (cross), if any.",,,,,,,,,,,99.3,10070.49345,,,,,,,,4,,,Image Processing
11,Line segment intersection,1,Intersection detection (whether there exists an intersection),,,,1,1,O(log n log log n),,,"[https://dl.acm.org/doi/10.1145/10515.10539 Atallah, Goodrich (1986)]","Atallah, Goodrich",1986,https://dl.acm.org/doi/10.1145/10515.10539,,,,0,0,2,n: 2,O(log n log log n),O(log n log log n),1.1,https://dl.acm.org/doi/10.1145/10515.10539,O(n log n log log n),11.1,,no,n: number of line segments,n,,,CRCW PRAM,130,words,3,"n: 3,
k: 3",O(n+k) total?,"Seems to require creating/storing an O(n)-sized data structure (""segment tree""), and then computing the O(k) intersections using the data structure",1,0,,0,,0,,0,1,O(n),,0,0,,"The line segment intersection problem supplies a list of line segments in the Euclidean plane and asks about the points where they intersect (cross), if any.",,,,,,,,,,,99.3,10070.49345,,,,,,,,4,,,Image Processing
11,Line segment intersection,1,Intersection detection (whether there exists an intersection),,,,1,1,O(log n),,,"[https://epubs.siam.org/doi/abs/10.1137/0218035 Atallah, Cole, Goodrich (1989)]","Atallah, Cole, Goodrich",1989,https://epubs.siam.org/doi/abs/10.1137/0218035,,,,0,0,2,n: 2,O(log n),O(log n),1,https://epubs.siam.org/doi/abs/10.1137/0218035,O(n log n),11,,no,n: number of line segments,n,,,CREW PRAM,120,words,3,"n: 3,
k: 3",O(n+k) total?,"Seems to require creating/storing an O(n)-sized data structure (""segment tree""), and then computing the O(k) intersections using the data structure",1,0,,0,,0,,0,1,O(n),,0,0,,"The line segment intersection problem supplies a list of line segments in the Euclidean plane and asks about the points where they intersect (cross), if any.",,,,,,,,,,,99.3,10070.49345,,,,,,,,4,,,Image Processing
12,Convex Hull,1,2-dimensional,,,,1,1,O(log^2(n)),,,[https://dl.acm.org/doi/10.5555/909732 Chow (1980)],Chow,1980,https://dl.acm.org/doi/10.5555/909732,,,,,,,,O(log^2(n)),O(log^2(n)),2,https://dl.acm.org/doi/10.5555/909732,O(n log^2(n)),12,,no,"n: number of line segments
h: number of points on the convex hull",n,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(n),,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,2-dimensional,,,,1,1,O(n/k log n + log k log n),,,"[https://link.springer.com/chapter/10.1007/BFb0105130 Nath, Maheshwari, Bhatt [modified CONVEXHULL-4] (1981)]","Nath, Maheshwari, Bhatt [modified CONVEXHULL-4]",1981,https://link.springer.com/chapter/10.1007/BFb0105130,,,,,,,,O(n/k log n + log k log n),O(log^2(n)),2,https://link.springer.com/chapter/10.1007/BFb0105130,O(n log n + k log k log n),,,no,"n: number of line segments
h: number of points on the convex hull
k: processor parameter, 1≤k≤n",n,,,SIMD-SM-R,210,,,,,,,,,0,,0,,0,1,k,,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,2-dimensional,,,,1,1,O(k log n),,,"[https://link.springer.com/chapter/10.1007/BFb0105130 Nath, Maheshwari, Bhatt (1981)]","Nath, Maheshwari, Bhatt [CONVEXHULL-5]",1981,https://link.springer.com/chapter/10.1007/BFb0105130,,,,,,,,O(k log n),O(log^2(n)),2,https://link.springer.com/chapter/10.1007/BFb0105130,O(n log^2(n)),12,,no,"n: number of line segments
h: number of points on the convex hull
k: processor parameter, 1≤k≤log n",n,,,SIMD-SM-R,210,,,,,,,,,0,,0,,0,1,n^(1+1/k),,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,2-dimensional,,,,1,1,O(1),,,[https://link.springer.com/article/10.1007/BF01944471 Akl (1982)],Akl,1982,https://link.springer.com/article/10.1007/BF01944471,,,,,,,,O(1),O(1),0,https://link.springer.com/article/10.1007/BF01944471,O(n^3),30,,no,"n: number of line segments
h: number of points on the convex hull",n,,,SIMD with unbounded fan-in?/CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(n^3),,0,0,https://link.springer.com/content/pdf/10.1007/BF01762120.pdf,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,2-dimensional,,,,1,1,O(n^eps log h),,,[https://link.springer.com/article/10.1007/BF02243071 Akl (1984)],Akl,1984,https://link.springer.com/article/10.1007/BF02243071,,,,,,,,O(n^eps log h),O(log h)?,,https://link.springer.com/article/10.1007/BF02243071,O(n log h),,https://link.springer.com/article/10.1007/BF02243071,"yes, implicitly (can't do better than sorting)","n: number of line segments
h: number of points on the convex hull
eps: processor parameter, 0<eps<1",n,,,"SIMD (synchronous, CRCW)",220,,,,,,,,,0,,0,,0,1,O(n^(1-eps)),,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,2-dimensional,,,,1,1,O(log n),,,"[https://docs.lib.purdue.edu/cgi/viewcontent.cgi?article=1424&context=cstech Atallah, Goodrich (1986)]","Atallah, Goodrich",1986,https://docs.lib.purdue.edu/cgi/viewcontent.cgi?article=1424&context=cstech,,,,,,,,O(log n),O(log n),1,https://docs.lib.purdue.edu/cgi/viewcontent.cgi?article=1424&context=cstech,O(n log n),11,,"yes, implicitly (can't do better than sorting)","n: number of line segments
h: number of points on the convex hull",n,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(n),,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,2-dimensional,,,,1,1,O(1),Points chosen uniformly at random from a unit square,https://web.eecs.umich.edu/~qstout/pap/ICPP88geo.pdf,[https://web.eecs.umich.edu/~qstout/pap/ICPP88geo.pdf Stout (1986)],Stout,1986,https://web.eecs.umich.edu/~qstout/pap/ICPP88geo.pdf,,,,,,,,O(log n),O(log n),1,https://web.eecs.umich.edu/~qstout/pap/ICPP88geo.pdf,O(n log n)?,11,,no,"n: number of line segments
h: number of points on the convex hull",n,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(n),,0,0,https://repository.lsu.edu/cgi/viewcontent.cgi?article=7028&context=gradschool_disstheses,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,2-dimensional,136,,,1,1,$O(\log n)$,,,[https://cse.buffalo.edu/faculty/miller/Papers/IEEETC88a.pdf Miller; Stout (1988)],Miller; Stout,1988,https://cse.buffalo.edu/faculty/miller/Papers/IEEETC88a.pdf,,,,1,5->7,#VALUE!,,$O(\log n)$,$O(\log n)$,1,https://cse.buffalo.edu/faculty/miller/Papers/IEEETC88a.pdf,$O(n \log n)$,11,https://cse.buffalo.edu/faculty/miller/Papers/IEEETC88a.pdf,"yes, implicitly (can't do better than sorting)","n: number of line segments
h: number of points on the convex hull",n,,,"EREW PRAM, possibly others (see paper)",110,words,3,n: 3,O(n) total?,Divide and conquer can be done in linear space total as space can be reused after conquer steps,1,0,,0,,0,,0,1,O(n),,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,h = n^0.5,,,,,,,9.965,100351229.3,,,,,,,,3,,,Image Processing
12,Convex Hull,1,2-dimensional,,,,1,1,O(log n),,,"[https://link.springer.com/content/pdf/10.1007/BF01762120.pdf Aggarwal, Chazelle, Guibas, Ó'Dúnlaing, Yap (1988)]","Aggarwal, Chazelle, Guibas, Ó'Dúnlaing, Yap",1988,https://link.springer.com/content/pdf/10.1007/BF01762120.pdf,,,,,,,,O(log n),O(log n),1,https://link.springer.com/content/pdf/10.1007/BF01762120.pdf,O(n log n),11,,"yes, implicitly (can't do better than sorting)","n: number of line segments
h: number of points on the convex hull",n,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(n),,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ","""Shamos (1977)"" gave reductions from Voronoi diagrams to other geometric proximity problems, including closest pair",,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,2-dimensional,,,,1,1,O(log n),,,"[https://dl.acm.org/doi/pdf/10.1145/73393.73414 Cole, Goodrich (1988)]","Cole, Goodrich",1988,https://dl.acm.org/doi/pdf/10.1145/73393.73414,,,,1,5->7,#VALUE!,,O(log n),O(log n),1,https://dl.acm.org/doi/pdf/10.1145/73393.73414,O(n log n),11,https://dl.acm.org/doi/pdf/10.1145/73393.73414,yes,"n: number of line segments
h: number of points on the convex hull",n,,,CREW PRAM,120,words,3,n: 3,O(n) total?,Divide and conquer can be done in linear space total as space can be reused after conquer steps,1,0,,0,,0,,0,1,O(n),,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,h = n^0.5,,,,,,,9.965,100351229.3,,,,,,,,3,,,Image Processing
12,Convex Hull,1,2-dimensional,,,,1,1,O(n^eps log n),,,[https://research.iaun.ac.ir/pd/saeed-nasri/pdfs/UploadFile_9325.pdf Akl (1989)],Akl,1989,https://research.iaun.ac.ir/pd/saeed-nasri/pdfs/UploadFile_9325.pdf,,,,,,,,O(n^eps log n),O(n^eps log n),,https://research.iaun.ac.ir/pd/saeed-nasri/pdfs/UploadFile_9325.pdf,O(n log n),11,https://research.iaun.ac.ir/pd/saeed-nasri/pdfs/UploadFile_9325.pdf,yes,"n: number of line segments
h: number of points on the convex hull
eps: processor parameter, 0<eps<1",n,,,EREW SM SIMD computer,200,,,,,,,,,0,,0,,0,1,O(n^(1-eps)),,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,0.001,2-dimensional,,,,1,1,O(log^2 n),,,"[https://dl.acm.org/doi/pdf/10.1145/113379.113397 Ghouse, Goodrich (following [Kirkpatrick, Seidel (1986)]) (1991)]","Ghouse, Goodrich (following [Kirkpatrick, Seidel (1986)])",1991,https://dl.acm.org/doi/pdf/10.1145/113379.113397,,,,,,,,O(log^2 n),O(log^2 n),2,https://dl.acm.org/doi/pdf/10.1145/113379.113397,O(n log h),,https://dl.acm.org/doi/pdf/10.1145/113379.113397,no,"n: number of line segments
h: number of points on the convex hull",n,,,CREW PRAM?,,,,,,,,,,0,,0,,0,1,O(n)?,,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,2-dimensional,,,,1,1,O(log n),,,"[https://dl.acm.org/doi/pdf/10.1145/113379.113397 Ghouse, Goodrich [Theorem 5] (1991)]","Ghouse, Goodrich [Theorem 5]",1991,https://dl.acm.org/doi/pdf/10.1145/113379.113397,,,,,,,,O(log n),O(log n),1,https://dl.acm.org/doi/pdf/10.1145/113379.113397,O(n log h),,https://dl.acm.org/doi/pdf/10.1145/113379.113397,no,"n: number of line segments
h: number of points on the convex hull",n,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(n),,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,2-dimensional,,,,1,1,O(log h log log n),,,"[https://www.sciencedirect.com/science/article/pii/S0925772197000096 Gupta, Sen (1997)]","Gupta, Sen",1997,https://www.sciencedirect.com/science/article/pii/S0925772197000096,,,,,,,,O(log h log log n),O(log h log log n),,https://www.sciencedirect.com/science/article/pii/S0925772197000096,O(n log h),,https://www.sciencedirect.com/science/article/pii/S0925772197000096,no,"n: number of line segments
h: number of points on the convex hull",n,,,CRCW PRAM,130,,,,,,,,,1,Las Vegas,0,,0,1,O(n),,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,2-dimensional,,,,,,O(log n),,,"[https://dl.acm.org/doi/abs/10.5555/1882723.1882748 Blelloch, Maggs [Parallel MergeHull] (2010)]","Blelloch, Maggs [Parallel MergeHull]",2010,https://dl.acm.org/doi/abs/10.5555/1882723.1882748,,,,,,,,O(log n),O(log n),1,https://dl.acm.org/doi/abs/10.5555/1882723.1882748,O(n log n),11,https://dl.acm.org/doi/abs/10.5555/1882723.1882748,yes,"n: number of line segments
h: number of points on the convex hull",n,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(n),,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,3-dimensional,,,,1,1,O(log^3 n),,,[https://dl.acm.org/doi/10.5555/909732 Chow (1980)],Chow,1980,https://dl.acm.org/doi/10.5555/909732,,,,,,,,O(log^3 n),O(log^3 n),3,https://dl.acm.org/doi/10.5555/909732,O(n log^3 n),13,,no,"n: number of line segments
h: number of points on the convex hull",n,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(n),,0,0,https://www.sciencedirect.com/science/article/pii/S0743731503000352,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,3-dimensional,,,,1,1,O(log^2 n),,,"[https://dl.acm.org/doi/10.1145/41958.41980 Dadoun, Kirkpatrick [randomized] (1987)]","Dadoun, Kirkpatrick [randomized]",1987,https://dl.acm.org/doi/10.1145/41958.41980,,,,,,,,O(log^2 n),O(log^2 n),2,https://dl.acm.org/doi/10.1145/41958.41980,O(n log^2 n),12,,no,n: number of points,n,,,CREW PRAM,120,,,,,,,,,1,Las Vegas?,0,,0,1,O(n),,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,3-dimensional,,,,1,1,O(log^2 n log* n),,,"[https://dl.acm.org/doi/10.1145/41958.41980 Dadoun, Kirkpatrick [deterministic] (1987)]","Dadoun, Kirkpatrick [deterministic]",1987,https://dl.acm.org/doi/10.1145/41958.41980,,,,,,,,O(log^2 n log* n),O(log^2 n log* n),2.001,https://dl.acm.org/doi/10.1145/41958.41980,O(n log^2 n log* n),12.001,,no,n: number of points,n,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(n),,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,3-dimensional,,,,1,1,O(log^3 n),,,"[https://link.springer.com/content/pdf/10.1007/BF01762120.pdf Aggarwal, Chazelle, Guibas, Ó'Dúnlaing, Yap (1988)]","Aggarwal, Chazelle, Guibas, Ó'Dúnlaing, Yap",1988,https://link.springer.com/content/pdf/10.1007/BF01762120.pdf,,,,,,,,O(log^3 n),O(log^3 n),3,https://link.springer.com/content/pdf/10.1007/BF01762120.pdf,O(n log^3 n),13,,no,"n: number of line segments
h: number of points on the convex hull",n,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(n),,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,0.001,3-dimensional,,,,1,1,O(log^3 n),,,"[https://dl.acm.org/doi/pdf/10.1145/113379.113397 Ghouse, Goodrich (following [Edelsbrunner, Shi (1991)]) (1991)]","Ghouse, Goodrich (following [Edelsbrunner, Shi (1991)])",1991,https://dl.acm.org/doi/pdf/10.1145/113379.113397,,,,,,,,O(log^3 n),O(log^3 n),3,https://dl.acm.org/doi/pdf/10.1145/113379.113397,O(n log^2 h),,https://dl.acm.org/doi/pdf/10.1145/113379.113397,no,"n: number of line segments
h: number of points on the convex hull",n,,,CREW PRAM?,,,,,,,,,,0,,0,,0,1,O(n)?,,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,3-dimensional,,,,1,1,O(log^2 n),,,"[https://dl.acm.org/doi/pdf/10.1145/113379.113397 Ghouse, Goodrich [Theorem 6] (1991)]","Ghouse, Goodrich [Theorem 6]",1991,https://dl.acm.org/doi/pdf/10.1145/113379.113397,,,,,,,,O(log^2 n),O(log^2 n),2,https://dl.acm.org/doi/pdf/10.1145/113379.113397,"O(n*min(log n, log^2 h))",,https://dl.acm.org/doi/pdf/10.1145/113379.113397,no,"n: number of line segments
h: number of points on the convex hull",n,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(n)?,,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,3-dimensional,,,,1,1,O(log^2 n),,,"[https://core.ac.uk/download/pdf/158319587.pdf Amato, Preparata (1992)]","Amato, Preparata",1992,https://core.ac.uk/download/pdf/158319587.pdf,,,,,,,,O(log^2 n),O(log^2 n),2,https://core.ac.uk/download/pdf/158319587.pdf,O(n log^2 n),12,,no,"n: number of line segments
h: number of points on the convex hull",n,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(n),,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,3-dimensional,,,,1,1,O(log n),,,"[https://epubs.siam.org/doi/pdf/10.1137/0221031 Reif, Sen (1992)]","Reif, Sen",1992,https://epubs.siam.org/doi/pdf/10.1137/0221031,,,,,,,,O(log n),O(log n),1,https://epubs.siam.org/doi/pdf/10.1137/0221031,O(n log n),11,,"yes, implicitly (can't do better than sorting)","n: number of line segments
h: number of points on the convex hull",n,,,CREW PRAM,120,,,,,,,,,1,Las Vegas?,0,,0,1,O(n),,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,3-dimensional,,,,1,1,O(log^2 n),,,[https://dl.acm.org/doi/abs/10.1145/160985.161002 Goodrich (1993)],Goodrich,1993,https://dl.acm.org/doi/abs/10.1145/160985.161002,,,,,,,,O(log^2 n),O(log^2 n),2,https://dl.acm.org/doi/abs/10.1145/160985.161002,O(n log n),11,https://dl.acm.org/doi/abs/10.1145/160985.161002,yes,"n: number of line segments
h: number of points on the convex hull",n,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,O(n),,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,3-dimensional,,,,1,1,O(log^3 n),,,"[https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=365724 Amato, Goodrich, Ramos [output-sensitive] (1994)]","Amato, Goodrich, Ramos [output-sensitive]",1994,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=365724,,,,,,,,O(log^3 n),O(log^3 n),3,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=365724,O(n log h),,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=365724,yes,"n: number of line segments
h: number of points on the convex hull
d: number of dimensions",n,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,O(n),,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,3-dimensional,,,,1,1,O((log log n)^2 log h),,,"[https://www.sciencedirect.com/science/article/pii/S0743731503000352 Gupta, Sen (2003)]","Gupta, Sen",2003,https://www.sciencedirect.com/science/article/pii/S0743731503000352,,,,,,,,O((log log n)^2 log h),O((log log n)^2 log h),,https://www.sciencedirect.com/science/article/pii/S0743731503000352,O(n log h),,https://www.sciencedirect.com/science/article/pii/S0743731503000352,yes,"n: number of line segments
h: number of points on the convex hull",n,,,CRCW PRAM,130,,,,,,,,,1,Las Vegas,0,,0,1,O(n)?,,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,d-dimensional,,,,1,1,O(log n),,,"[https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=365724 Amato, Goodrich, Ramos [randomized] (1994)]","Amato, Goodrich, Ramos [randomized]",1994,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=365724,,,,,,,,O(log n),O(log n),1,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=365724,O(n^(floor(d/2))+n log n),,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=365724,yes,"n: number of line segments
h: number of points on the convex hull
d: number of dimensions",n,,,EREW PRAM,110,,,,,,,,,1,Las Vegas,0,,0,1,O(n^(floor(d/2)))?,,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,d-dimensional,,,,1,1,O(log n),,,"[https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=365724 Amato, Goodrich, Ramos [deterministic] (1994)]","Amato, Goodrich, Ramos [deterministic]",1994,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=365724,,,,,,,,O(log n),O(log n),1,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=365724,O(n^(floor(d/2))log^(c(ceil(d/2)-floor(d/2))) n),,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=365724,yes,"n: number of line segments
h: number of points on the convex hull
d: number of dimensions; d≥4",n,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,O(n^(floor(d/2)))?,,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,d-dimensional,,,,1,1,O(log n log* n),,,"[https://dl.acm.org/doi/10.1145/3350755.3400255 Blelloch, Gu, Shun, Sun (2020)]","Blelloch, Gu, Shun, Sun",2020,https://dl.acm.org/doi/10.1145/3350755.3400255,,,,,,,,O(log n log* n),O(log n log* n),1.001,https://dl.acm.org/doi/10.1145/3350755.3400255,O(n^(floor(d/2))+n log n),,https://dl.acm.org/doi/10.1145/3350755.3400255,no,"n: number of line segments
h: number of points on the convex hull
d: number of dimensions",n,,,CRCW PRAM,130,,,,,,,,,1,Las Vegas,0,,0,1,O(n^(floor(d/2)))?,,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,2-dimensional with pre-sorted points,,,,1,1,O(log n),,,[https://docs.lib.purdue.edu/cgi/viewcontent.cgi?article=1566&context=cstech Goodrich (1987)],Goodrich,1987,https://docs.lib.purdue.edu/cgi/viewcontent.cgi?article=1566&context=cstech,,,,,,,,O(log n),O(log n),1,https://docs.lib.purdue.edu/cgi/viewcontent.cgi?article=1566&context=cstech,O(n),10,https://docs.lib.purdue.edu/cgi/viewcontent.cgi?article=1566&context=cstech,yes,"n: number of line segments
h: number of points on the convex hull",n,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(n/log n),,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,2-dimensional with pre-sorted points,,,,1,1,O(log log n),,,[https://dl.acm.org/doi/10.1145/73007.73036 Berkman et. al. (1989)],Berkman et. al.,1989,https://dl.acm.org/doi/10.1145/73007.73036,,,,,,,,O(log log n),O(log log n),0.1,https://dl.acm.org/doi/10.1145/73007.73036,O(n),10,https://dl.acm.org/doi/pdf/10.1145/113379.113397,no?,"n: number of line segments
h: number of points on the convex hull",n,,,common CRCW PRAM,132,,,,,,,,,0,,0,,0,1,O(n/log log n)?,,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,2-dimensional with pre-sorted points,,,,1,1,O(1),,,"[https://dl.acm.org/doi/pdf/10.1145/113379.113397 Ghouse, Goodrich [Lemma 2.5] (1991)]","Ghouse, Goodrich [Lemma 2.5]",1991,https://dl.acm.org/doi/pdf/10.1145/113379.113397,,,,,,,,O(1),O(1),0,https://dl.acm.org/doi/pdf/10.1145/113379.113397,O(n log n),11,,yes,"n: number of line segments
h: number of points on the convex hull",n,,,CRCW PRAM,130,,,,,,,,,1,Monte Carlo,0,,0,1,O(n log n),,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,2-dimensional with pre-sorted points,,,,1,1,O(log* n),,,"[https://dl.acm.org/doi/pdf/10.1145/113379.113397 Ghouse, Goodrich [Theorem 2] (1991)]","Ghouse, Goodrich [Theorem 2]",1991,https://dl.acm.org/doi/pdf/10.1145/113379.113397,,,,,,,,O(log* n),O(log* n),0.001,https://dl.acm.org/doi/pdf/10.1145/113379.113397,O(n),10,https://dl.acm.org/doi/pdf/10.1145/113379.113397,yes,"n: number of line segments
h: number of points on the convex hull",n,,,CRCW PRAM,130,,,,,,,,,1,Monte Carlo,0,,0,1,O(n/(log* n)),,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,,,Transitive closure method,,,,,,,,Chandra,1976,https://cir.nii.ac.jp/crid/1573105974323147776,,,,,,,,O(log^2(n)),O(log^2(n)),2,,n^(log7)*log(n),28,,,,,,,SIMD-SM-R (CREW PRAM?),210,,,,,,,,,,,0,,0,1,n^(log7)/log(n),27,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,Transitive Closure,,Vertex collapse method,,,,,,,,Hirschberg,1976,https://dl.acm.org/doi/abs/10.1145/800113.803631,,,,,,,,O(log^2(n)),O(log^2(n)),2,,O(n^3 log^2(n)),32,,,,,,,SIMD-SM-R (CREW PRAM?),210,,,,,,,,,,,,,,1,n^3,,,,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,SCCs,,Vertex collapse method,,,,,,,,Hirschberg,1976,https://dl.acm.org/doi/abs/10.1145/800113.803631,,,,,,,,O(log^2(n)),O(log^2(n)),2,,O(n^2 log^2(n)),22,,,n: number of vertices,,,,SIMD-SM-R (CREW PRAM?),210,,,,,,,,,,,,,,1,n^2,,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,SCCs,,BFS method,,,,,,,,Reghbati (Arjomandi) and Corneil,1978,https://epubs.siam.org/doi/abs/10.1137/0207020,,,,,,,,T/p+L log(p)+2n,O(n),10,,O(n+m) ?,,,"yes - compares to sequential BFS search algorithm; ""superior to sequential algorithm for h-dense graphs where h>=ceiling(log k)+7 (h-dense: #edges>=h*n/2)""","n: number of vertices
m: number of edges
p: number of processors
d: diameter of graph
L: distance of node farhest from start node
T: complexity of optimal sequantial BFS algo",,,,SIMD-SM-R (CREW PRAM?),210,,,,,,,,,,,,,,1,p,,,,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,SCCs; Transitive Closure,,Transitive closure method,,,,,,,,Reghbati (Arjomandi) and Corneil,1978,https://epubs.siam.org/doi/abs/10.1137/0207020,,,,,,,,O(log^2(n)),O(log^2(n)),2,,O(n^3 log^2(n)),32,,,n: number of vertices,,,,SIMD-SM-R (CREW PRAM?),210,,,,,,,,,,,,,,1,n^3,,,,"promised to have ""proof of correctness and details of timing"": https://dl.acm.org/doi/book/10.5555/908319; originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515",,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,transitive closure; strong components; undirected,,,,,,O(log n log log n) average time,,,,Ja'Ja',1978,"J. Ja'Ja', ""Graph Connectivity Problems on Parallel Computers,"" TR GS-78-05, Dept. of Computer Science, Penn. State Univ., PA, 1978.",,,,,,,,O(log n log d),O(log n log d),,,O(n^3 log d),,,,"n: number of vertices
d: depth of the graph",,,,PRAM,100,,,,,,,,,0,,0,,0,1,O(n^3/log n),29.5,0,0,All info gathered from here: https://apps.dtic.mil/sti/pdfs/ADA114875.pdf,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,biconnected components,,,,,,,,,,Ja'Ja',1978,"J. Ja'Ja', ""Graph Connectivity Problems on Parallel Computers,"" TR GS-78-05, Dept. of Computer Science, Penn. State Univ., PA, 1978.",,,,,,,,O(log n log d log k),O(log n log d log k),,,O(n^3 log d log k),,,,"n: number of vertices
d: depth of the graph
k: number of biconnected components",,,,PRAM,100,,,,,,,,,0,,0,,0,1,O(n^3/log n),29.5,0,0,All info gathered from here: https://apps.dtic.mil/sti/pdfs/ADA114875.pdf,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,SCCs; Transitive Closure,,Vertex collapse method,,,,,,,,Hirschberg et al.,1979,https://dl.acm.org/doi/abs/10.1145/359138.359141,,,,,,,,O(log^2(n)),O(log^2(n)),2,https://dl.acm.org/doi/abs/10.1145/359138.359141,O(n^2 log^2(n)) ,22,,,n: number of vertices,,,,SIMD-SM-R (CREW PRAM?),210,,,,,,,,,,,,,,1,n ceilling(n/log(n)),,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,undirected,,Vertex collapse method,,,,,,,,Wyllie,1979,https://hdl.handle.net/1813/7502,,,,,,,,O(log^2(n)),O(log^2(n)),2,,O(log^2(n)*(n+m)),22,,,"n: number of nodes
m: number of edges",,,,MIMD-TC-R,320,,,,,,,,,0,,0,,0,1,n+m,,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,undirected graph; also transitive closure of a symmetric Boolean matrix,,,,,,,,,,"Hirschberg, Chandra, Sarwate",1979,https://dl.acm.org/doi/pdf/10.1145/359138.359141,,,,,,,,O(log^2(n)),O(log^2(n)),2,,O(n^2*log(n)),21,,,n: number of vertices,,,,SIMD-SM CREW,210,,,,,,,,,0,,0,,0,1,n ceilling(n/log^2(n)),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,"undirected, vertex degree at most d",,Vertex collapse method,,,,,,,,Nassimi and Sahni,1980,https://epubs.siam.org/doi/abs/10.1137/0209058,,,,,,,,O(n^0.5 log(n)),O(n^0.5 log(n)),6.1,,O(n^1.5 log(n)),16.1,,,n: number of vertices,,,,SIMD-SM-R (mesh-connected parallel computer),700,,,,,,,,,0,,0,,0,1,n,,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,dense undirected graph (with small diameter),,Vertex collapse method,,,,,,,,Savage and Ja'Ja',1981,https://epubs.siam.org/doi/abs/10.1137/0210051,,,,,,,,O(log(n)log(d)),O(log(n)log(d)),,,O(n^3*log(d)),,,,"n: number of nodes
d: diameter of the the graph",,,,SIMD-SM-R (CREW PRAM?),210,,,,,,,,,0,,0,,0,1,O(n^3/log(n)),,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,undirected graph - sparse,,Vertex collapse method,,,,,,,,Savage and Ja'Ja',1981,https://epubs.siam.org/doi/abs/10.1137/0210051,,,,,,,,O(log^2(n)),O(log^2(n)),2,,O((m+n log(n))*log^2(n)),-,,,"n: number of nodes
m: number of edges",,,,SIMD-SM-R (CREW PRAM?),210,,,,,,,,,0,,0,,0,1,O(m+n log(n)),,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,,,Vertex collapse method,,,,,,,,Savage,1981,https://link.springer.com/chapter/10.1007/978-3-642-68402-9_32,,,,,,,,O(n+m),O(n+m),20,,O(n(n+m)),30,,,"n: number of nodes
m: number of edges",,,,Systolic array,,,,,,,,,,0,,0,,0,1,n+1,,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,SCCs; Transitive Closure,,,,,,,,,,Chin et al.,1982,https://dl.acm.org/doi/pdf/10.1145/358628.358650,,,,,,,,O(log^2(n)),O(log^2(n)),2,,O(n^2),20,,,,,,,SIMD-SM-R (CREW PRAM?),210,,,,,,,,,,,,,,1,n ceilling(n/log^2(n)),,,,"originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515
refrenced this https://hub.hku.hk/handle/10722/151778 ? don't have access to it but same authors, maybe same content?",,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,undirected graph,,Vertex collapse method,,,,,,,,Nath and Maheshwari,1982,https://www.sciencedirect.com/science/article/pii/0020019082901314,,,,,,,,O(log^2(n)),O(log^2(n)),2,,O(n^2*log(n)),21,,,n: number of nodes,,,,SIMD-SM (EREW PRAM?),110,,,,,,,,,0,,0,,0,1,n^2/log n,,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,,,Vertex collapse method,,,,,,,,Shiloach and Vishkin,1982,https://www.sciencedirect.com/science/article/pii/0196677482900086,,,,,,,,O(log(n)),O(log(n)),1,,O(m*log(n)),21,,,"n: number of nodes
m: number of edges",,,,SIMD-SM-RW (arbitrary-CRCW PRAM),131,,,,,,,,,0,,0,,0,1,n+2m,,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,undirected,,,,,,,,,,Vishkin,1982,https://www.sciencedirect.com/science/article/pii/0166218X84900192,,,,,,,,O(n^2/p),O(log^2(n)),2,,O(n^2),20,,,n: number of nodes,,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,p (<=n^2/log^2 n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,,,Transitive closure method,,,,,,,,Kucera,1982,https://www.sciencedirect.com/science/article/pii/002001908290093X,,,,,,,,O(log(n)),O(log(n)),1,,O(n^4*log(n)),41,,,n: number of nodes,,,,SIMD-SM-RW (CRCW PRAM?),,,,,,,,,,0,,0,,0,1,n^4,,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,biconnected components,,Vertex collapse method,,,,"Expected span: O((log log n )^2)
Expected work: O(n^3 (log log n )^2 / log n)",,,,Reif and Spirakis,1982,https://apps.dtic.mil/sti/citations/ADA114875,,,,,,,,,,,,,,,,n: number of nodes,,,,RP-RAM (Arbitrary CRCW),,,,,,,,,,1,"time w/ probability 1-exp(-kn^a) for some k,a >0",0,,0,1,O(n^3/log n) (expected),,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,biconnected components,,Vertex collapse method,,,,"Expected span: O(log n *(log log n)^2)
Expected work: O(n^3 (log log n)^2)",,,,Reif and Spirakis,1982,https://apps.dtic.mil/sti/citations/ADA114875,,,,,,,,,,,,,,,,n: number of nodes,,,,PRAM CREW,,,,,,,,,,1,"time w/ probability 1-exp(-kn^a) for some k,a >1",0,,0,1,O(n^3/log n) (expected),,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,transitive closure,,Vertex collapse method,,,,"Expected span: O(log log n)
Expected work: O(n^3 * log log n / log n)",,,,Reif and Spirakis,1982,https://apps.dtic.mil/sti/citations/ADA114875,,,,,,,,,,,,,,,,n: number of nodes,,,,RP-RAM (Arbitrary CRCW),,,,,,,,,,1,"time w/ probability 1-exp(-kn^a) for some k,a >0",0,,0,1,O(n^3/log n) (expected),,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,transitive closure,,Vertex collapse method,,,,"Expected span: O(log n * log log n)
Expected work: O(n^3 * log log n)",,,,Reif and Spirakis,1982,https://apps.dtic.mil/sti/citations/ADA114875,,,,,,,,,,,,,,,,n: number of nodes,,,,PRAM CREW,,,,,,,,,,1,"time w/ probability 1-exp(-kn^a) for some k,a >1",0,,0,1,O(n^3/log n) (expected),,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,SCC,,Vertex collapse method,,,,"Expected span: O(log log n)
Expected work: O(n^3 * log log n / log n)",,,,Reif and Spirakis,1982,https://apps.dtic.mil/sti/citations/ADA114875,,,,,,,,,,,,,,,,n: number of nodes,,,,RP-RAM (Arbitrary CRCW),,,,,,,,,,1,"time w/ probability 1-exp(-kn^a) for some k,a >0",0,,0,1,O(n^3/log n) (expected),,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,SCC,,Vertex collapse method,,,,"Expected span: O(log n * log log n)
Expected work: O(n^2 * log log n)",,,,Reif and Spirakis,1982,https://apps.dtic.mil/sti/citations/ADA114875,,,,,,,,,,,,,,,,n: number of nodes,,,,PRAM CREW,,,,,,,,,,1,"time w/ probability 1-exp(-kn^a) for some k,a >1",0,,0,1,O(n^2/log n) (expected),,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,undirected graph,,,,,,,,,,"Koubek, Kršňáková",1985,https://link.springer.com/content/pdf/10.1007/BFb0028804.pdf,,,,,,,,O(log(n)),O(log(n)),1,,O((m+n)*log(n)),21,,,"n: number of vertices
m: number of edges",,,,PRAM-CRCW,130,,,,,,,,,0,,0,,0,1,O(m+n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,undirected graph,,,,,,,,,,"Koubek, Kršňáková",1985,https://link.springer.com/content/pdf/10.1007/BFb0028804.pdf,,,,,,,,O(log^2(n)),O(log^2(n)),2,,O((m+n)*log(n)),21,,,"n: number of vertices
m: number of edges",,,,PRAM-CREW and PRAM-EREW,110,,,,,,,,,0,,0,,0,1,O((m+n)/log(n)),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,undirected graph,,,,,,,,,,Reif,1985,https://apps.dtic.mil/sti/tr/pdf/ADA161791.pdf,,,,,,,,O(log n),O(log n),1,,O(m+n),20,,,"n: number of vertices
m: number of edges",,,,CRCW PRAM,130,,,,,,,,,1,"\exists c \any \alpha> 1, \any sufficiently large n, span <=c\alpha*log(n) holds with probability at least 1- 1/n^\alpha",0,,0,1,O((m+n)/log(n)),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,undirected graph,,,,,,,,,,Gazit,1986,https://epubs.siam.org/doi/pdf/10.1137/0220066,,,,,,,,O(log(n)),O(log(n)),1,,O(m+n),20,,,"n: number of vertices
m: number of edges",,,,PRAM-CRCW,130,,,,,,,,,1,The probability that the algorithm runs longer than expected is at most (2/e)^{n/log^k(n)} for some constant k < 4,0,,0,1,O((m+n)/log(n)),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,undirected graph,,,,,,,,,,"Cole, Vishkin",1986,https://ieeexplore.ieee.org/iel5/4568183/4568184/04568239.pdf,,,,,,,,O(log n),O(log n),1,,"O((n+m) \alpha(m,n))",,,,"n: number of nodes
m: number of edges",,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,"O((n + m) \alpha(m,n)/log n)",,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,undirected graph,,,,,,,,,,"Cole, Vishkin",1987,https://www.sciencedirect.com/science/article/pii/0890540189900369/pdf?md5=78fcc1ee8f52d0433144fd3e62697bd8&pid=1-s2.0-0890540189900369-main.pdf,,,,,,,,O(log^2 n),O(log^2 n),2,,"O((n + m) \alpha(m, n)) ",,,,"n: number of vertices
m: number of edges",,,,PRAM-CREW,120,,,,,,,,,0,,0,,0,1,"O((n + m) \alpha(m, n)/log^2(n)) ",,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,undirected graph,,,,,,,,,,"Awerbuch, Shiloach",1987,https://ieeexplore.ieee.org/document/1676869,,,,,,,,O(log m),O(log m),1,,O(m*log m),21,,,m: number of edges,,,,PRAM-CRCW,130,,,,,,,,,0,,0,,0,1,m+n,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,connected components in undirected graph,,,,,,,,,,"Kruskal, Rudolph, Snir",1990,https://link.springer.com/article/10.1007/BF01840376,,,,,,,,P(m/p*log(n)/log(m/(p^2*log(p))) + n/p*log(p)),P(m/p*log(n)/log(m/(p^2*log(p))) + n/p*log(p)),,,P(m*log(n)/log(m/(p^2*log(p))) + n*log(p)),,,,"n: number of nodes
m: number of edges
p: number of processors",,,,MIMD EREW,310,,,,,,,,,0,,0,,0,1,"p <= m^{1/2-eps} for any eps>0
log p <= m/n",,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,biconnected components,,,,,,,,,,"Kruskal, Rudolph, Snir",1990,https://link.springer.com/article/10.1007/BF01840376,,,,,,,,P(m/p*log(n)/log(m/(p^2*log(p))) + n/p*log(p)),P(m/p*log(n)/log(m/(p^2*log(p))) + n/p*log(p)),,,P(m*log(n)/log(m/(p^2*log(p))) + n*log(p)),,,,"n: number of nodes
m: number of edges
p: number of processors",,,,MIMD EREW,310,,,,,,,,,0,,0,,0,1,"p <= m^{1/2-eps} for any eps>0
log p <= m/n",,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,undirected graph,,,,,,,,,,"Han, Wagner",1990,https://dl.acm.org/doi/pdf/10.1145/79147.214077,,,,,,,,O(m/p + (n log n)/p + log^2 n),O(m/p + (n log n)/p + log^2 n),,,O(m + (n log n) + p*log^2 n),,,,"n: number of vertices
m: number of edges
p: number of processors",,,,PRAM-CREW,120,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,undirected graph,,,,,,,,,,"Das, Deo, Prasad",1990,https://www.sciencedirect.com/science/article/pii/016781919090143W,,,,,,,,O(m/p + n log p),O(m/p + n log p),,,O(m + np log p),,,,"n: number of nodes
m: number of edges
p: number of processors",,,,MIMD hypercube,700,,,,,,,,,0,,0,,0,1,p <= (m/n)/(1 +log(m/n)),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,undirected graph,,,,,,,,,,"Han, Wagner",1990,https://dl.acm.org/doi/pdf/10.1145/79147.214077,,,,,,,,O(m/p + (n log n)/p + log^2 n),O(m/p + (n log n)/p + log^2 n),,,O(m + (n log n) + p log^2 n),,,,"n: number of nodes
m: number of edges",,,,PRAM CREW,120,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,undirected graph,,,,,,,,,,"Cole, Vishkin",1991,https://www.sciencedirect.com/science/article/pii/0890540189900369/pdf?md5=78fcc1ee8f52d0433144fd3e62697bd8&pid=1-s2.0-0890540189900369-main.pdf,,,,,,,,O(log n),O(log n),1,,"O((n + m) \alpha(m, n)) ",,,,"n: number of vertices
m: number of edges",,,,PRAM-CRCW,130,,,,,,,,,0,,0,,0,1,"O((n + m) \alpha(m, n)/log(n)) ",,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,,,,,,,"Expected time: \tilde{O}(t)
Expected work: \tilde{O}(n^3/t^2 + m)",,,,Spencer,1991,https://dl.acm.org/doi/pdf/10.1145/113379.113387,,,,,,,,,,,,,,,,"n: number of vertices
m: number of edges
t: longest shortest path?",,,,PRAM-EREW,110,,,,,,,,,1,Las Vegas,0,,0,1,\tilde{O}(n^3/t^3 + m/t),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,,,,,,,"Expected time: \tilde{O}(t)
Expected work: \tilde{O}(mn/t + n^3/t^3)",,,,Spencer,1991,https://dl.acm.org/doi/pdf/10.1145/113379.113387,,,,,,,,,,,,,,,,"n: number of vertices
m: number of edges
t: longest shortest path?",,,,PRAM-EREW,110,,,,,,,,,1,Las Vegas,0,,0,1,\tilde{O}(mn/t^2 + n^3/t^4),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,,,,,,,"Expected time: \tilde{O}(t)
Expected work: \tilde{O}(mn + n^3/t^5)",,,,Spencer,1991,https://dl.acm.org/doi/pdf/10.1145/113379.113387,,,,,,,,,,,,,,,,"n: number of vertices
m: number of edges
t: longest shortest path?",,,,PRAM-EREW,110,,,,,,,,,1,Monte Carlo,0,,0,1,\tilde{O}(mn/t + n^3/t^6),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,undirecred graph,,,,,,,,,,"Johnson, Metaxas",1991,https://digitalcommons.dartmouth.edu/cgi/viewcontent.cgi?article=1061&context=cs_tr,,,,,,,,O(log^{3/2}(n)),O(log^{3/2}(n)),1.5,,O((m+n)log^{3/2}(n)),,,,"n: number of vertices
m: number of edges",,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,m+n,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,undirecred graph,,,,,,,,,,"Karger, Nisan, Parnas",1992,https://dl.acm.org/doi/pdf/10.1145/140901.141920,,,,,,,,O(log n),O(log n),1,,"O(m+n^{1+\eps}), \eps>0",,,,"n: number of vertices
m: number of edges",,,,EREW PRAM,110,,,,,,,,,1,,0,,0,1,"O((m+n^{1+\eps}) / log n), \eps>0",,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,undirecred graph,,,,,,,,,,"Karger, Nisan, Parnas",1992,https://dl.acm.org/doi/pdf/10.1145/140901.141920,,,,,,,,O(log n log log n),O(log n log log n),1.1,,O((m+n) log log n),20.1,,,"n: number of vertices
m: number of edges",,,,EREW PRAM,110,,,,,,,,,1,,0,,0,1,O((m+n) / log n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,undirecred graph,,,,,,,,,,"Karger, Nisan, Parnas",1992,https://dl.acm.org/doi/pdf/10.1145/140901.141920,,,,,,,,O(log^1.5(n)),O(log^1.5(n)),1.5,,O((m+n)log^1.5(n)),21.5,,,"n: number of vertices
m: number of edges",,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,m+n,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,0.001,undirected graphs,,,,,,,,,,"Nisan, Szemeredi, Wigderson",1992,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=cda3df47a2962c5b98f2ac892c7a0f64d442fb3e,,,,,,,,O(log^{1.5} n),O(log^{1.5} n),1.5,,,,,,,,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,planar directed graph,,,,,,,,,,Kao,1993,https://epubs.siam.org/doi/pdf/10.1137/0222032,,,,,,,,O(log^3 n),O(log^3 n),3,,O(n log^2 n),12,,,n: number of nodes,,,,Arbitrary CRCW PRAM,131,,,,,,,,,0,,0,,0,1,n/log n,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,0.001,,,,,,,,,,,Greiner,1993,https://ncit-cluster.grid.pub.ro/trac/PP2009/export/139/proiecte/pgraph/Documentation/connected2.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,undirecred graph,,,,,,,,,,"Chong, Lam",1993,https://dl.acm.org/doi/pdf/10.5555/313559.313575,,,,,,,,O(log n log log n) ,O(log n log log n) ,1.1,,O((n+m) log n log log n) ,21,,,"n: number of vertices
m: number of edges",,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,O(n+m),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,undirecred graph,,,,,,,,,,"Halperin, Zwick",1994,https://dl.acm.org/doi/pdf/10.1145/181014.181017,,,,,,,,O(log n),O(log n),1,,O(m+n),20,,,"n: number of vertices
m: number of edges",,,,EREW PRAM,110,,,,,,,,,1,The probability y that the algorithm will not complete in O(log n) time is at most n^{-c} for any desired c >0.,0,,0,1,O((m+n) / log n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,0.001,undirecred graph,,,,,,,,,,"Iwama, Kambayashi",1994,https://www.sciencedirect.com/science/article/pii/S0196677484710091,,,,,,,,O(log^2 n),O(log^2 n),2,,"O((n + m) \alpha(m, n)) ",,,,"n: number of vertices
m: number of edges",,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,"O((n + m) \alpha(m, n)/log^2(n)) ",,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,,,,,,,"Expected time: O((n/r)*log^2(r)*log(n))
Expected work: O(nr^2*log^2(r)*log(n))",,,,Spencer,1997,https://dl.acm.org/doi/pdf/10.1145/265910.265923,,,,,,,,,,,,,,,,"n: number of vertices
m: number of edges
r: in range sqrt(m/n) <= r <= n
(r^3: number of processors)",,,,probabilitistic EREW PRAM,,,,,,,,,,1,,0,,0,1,r^3,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,undirected graph,,,,,,,,,,"Pettie, Ramachandran",2001,https://www.cs.utexas.edu/users/vlr/papers/tr01-25.pdf,,,,,,,,O(m/p + log^2(n) log*(n)),O(m/p + log^2(n) log*(n)),,,O(m+n),20,,,"n: number of nodes
m: number of edges",,,,EREW PRAM,110,,,,,,,,,1,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,connected components of the complement of an undirected graph,,,,,,,,,,"Chong, Nikolopoulos, Palios",2004,https://link.springer.com/content/pdf/10.1007/s00224-003-1074-x.pdf,,,,,,,,O(log n),O(log n),1,,O(m+n),20,,,"n: number of vertices
m: number of edges",,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,O((m+n)/log(n)),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,biconnectivity of the complement of a given graph,,,,,,,,,,"Nikolopoulos, Palios",2007,https://www.sciencedirect.com/science/article/pii/S0166218X07000625,,,,,,,,O(log^2 n),O(log^2 n),2,,O(n+m),20,,,"n: number of vertices
m: number of edges",,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O((n+m)/log n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,connected components of the complement of an undirected graph,,,,,,,,,,"Nikolopoulos, Palios",2007,https://www.sciencedirect.com/science/article/pii/S0166218X07000625,,,,,,,,O(log^2 n),O(log n),1,,O(n+m),20,,,"n: number of vertices
m: number of edges",,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O((n+m)/log^2 n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,SCC of the complement of a given graph,,,,,,,,,,"Nikolopoulos, Palios",2007,https://www.sciencedirect.com/science/article/pii/S0166218X07000625,,,,,,,,O(log^2 n),O(log^2 n),2,,O(m^{1.188}*log n),26.11,,,"n: number of vertices
m: number of edges",,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(m^{1.188}/log n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,,,,,,,,,,,Schudy,2008,https://dl.acm.org/doi/pdf/10.1145/1378533.1378560,,,,,,,,O(τ log^2 n),O(τ log^2 n),,,O(pτ log^2 n),,,,"n: number of nodes
p: number of processors
τ: runtime for a multi-source reachability query executed in parallel on p processors",,,,CRCW PRAM,130,,,,,,,,,1,Las-Vegas,0,,,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,,,,,,,,,,,Bloemen,2015,http://essay.utwente.nl/67128/1/Bloemen_MA_EEMCS.pdf,,,,,,,,O(V + E),O(V + E),,,O(P · (V + E)),,,,"V: number of vertices
E: number of edges
P: number of processors",,,,Unlisted (SIMD?),,,,,,,,,,0,,0,,0,1,P,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,"connected, undirected, weighted",,Sollin method,,,,,,,,Savage,1977,https://www.proquest.com/docview/302856503?pq-origsite=gscholar&fromopenview=true,,,,,,,,O(log^2(n)),O(log^2(n)),2,,O(n^2*log(n)),21,,"yes? speedup=O(n^2/log^2(n))
efficiency=O(1/log(n))",n: number of vertices,,,,SIMD-SM-R (CREW PRAM?),210,,,,,,,,,0,,0,,0,1,n^2/log(n),,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,undirected MSF,,,,,,,,,,"Hirschberg, Chandra, Sarwate",1979,https://dl.acm.org/doi/pdf/10.1145/359138.359141,,,,,,,,O(log^2(n)),O(log^2(n)),2,,O(n^2*log(n)),21,,,n: number of vertices,,,,SIMD-SM CREW,210,,,,,,,,,0,,0,,0,1,n ceilling(n/log^2(n)),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,,,,,,,,,,,Bentley,1980,https://www.sciencedirect.com/science/article/pii/0196677480900048,,,,,,,,O(log^2 n),O(log^2 n),2,,O(n log n),11,,,n: number of nodes,,,,tree machine,,,,,,,,,,0,,0,,0,1,n/log n,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,,,Prim-Dijkstra,,,,,,,,Deo and Yoo,1981,"DEO, N., AND YOO, Y. B. 1981. Parallel algorithms for the minimum spanning tree problem.",,,,,,,,O(n^1.5),O(n^1.5),1.5,https://dl.acm.org/doi/pdf/10.1145/2514.2515,O(n^2),20,https://dl.acm.org/doi/pdf/10.1145/2514.2515,,n: number of vertices,,,,MIMD-TC,300,,,,,,,,,0,,0,,0,1,O(n^0.5),,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,,,Solin,,,,,,,,Deo and Yoo,1981,"DEO, N., AND YOO, Y. B. 1981. Parallel algorithms for the minimum spanning tree problem.",,,,,,,,O(n^2 log n / p),O(n log n),11,https://dl.acm.org/doi/pdf/10.1145/2514.2515,O(n^2 log n),21,https://dl.acm.org/doi/pdf/10.1145/2514.2515,,n: number of vertices,,,,MIMD-TC,300,,,,,,,,,0,,0,,0,1,p <= n,,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,,,Sollin method,,,,,,,,Savage and Ja'Ja',1981,https://epubs.siam.org/doi/abs/10.1137/0210051,,,,,,,,O(log^2(n)),O(log^2(n)),2,,O(n^2*log^2(n)),22,,,n: number of vertices,,,,SIMD-SM-R (CREW PRAM),210,,,,,,,,,0,,0,,0,1,n^2,,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,,,,,,,,,,,Savage,1981,https://link.springer.com/chapter/10.1007/978-3-642-68402-9_32,,,,,,,,O(m+n),O(m+n),20,,O(n(m+n)),30,,,"n: number of nodes
m: number of edges",,,,Systolic array,,,,,,,,,,0,,0,,0,1,n+1,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,,,Sollin method,,,,,,,,Nath and Maheshwari,1982,https://www.sciencedirect.com/science/article/pii/0020019082901314,,,,,,,,O(log^2(n)),O(log^2(n)),2,,O(n^2*log(n)),21,,,n: number of vertices,,,,SIMD-SM (CREW PRAM),210,,,,,,,,,0,,0,,0,1,n^2/log(n),,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,,,Sollin method,,,,,,,,Nath and Maheshwari,1982,https://www.sciencedirect.com/science/article/pii/0020019082901314,,,,,,,,O(log^3(n)),O(log^3(n)),3,,O(n^2*log^2(n)),22,,,n: number of vertices,,,,SIMD-SM (EREW PRAM),110,,,,,,,,,0,,0,,0,1,n^2/log(n),,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,,,Kruskal method,,,,,,,,Kucera,1982,https://www.sciencedirect.com/science/article/pii/002001908290093X,,,,,,,,O(log n),O(log n),1,,O(n^5 log n),51,,,"n: number of edges
m: number of edges",,,,WPRAM,,,,,,,,,,0,,0,,0,1,n^5,,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,,,Sollin method,,,,,,,,Chin et al.,1982,https://dl.acm.org/doi/abs/10.1145/358628.358650,,,,,,,,O(log^2(n)),O(log^2(n)),2,,O(n^2),20,,,n: number of vertices,,,,SIMD-SM-R (CREW PRAM?),210,,,,,,,,,0,,0,,0,1,n ceiling(n/log^2(n)),,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,,,Sollin method,,,,,,,,Hirschberg,1982,"HIRSCHBERG, D. S. 1982. Parallel graph algorithms without memory conflicts.",,,,,,,,O(log n),O(log n),1,,O(n^3 log n),31,,,n: number of vertices,,,,SIMD-SM-RW (CRCW PRAM?),220,,,,,,,,,0,,0,,0,1,O(n^3),,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,undirected graph,,,,,,"Expected span: O((log log n)^2)
Expected work: O(n^2*log log n)",,,,Reif and Spirakis,1982,https://apps.dtic.mil/sti/citations/ADA114875,,,,,,,,,,,,,,,,n: number of nodes,,,,RP-RAM (Arbitrary CRCW),,,,,,,,,,1,"time w/ probability 1-exp(-kn^a) for some k,a >0",0,,0,1,O(n^2 / log log n) (expected),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,undirected graph,,,,,,"Expected span: O(log n*(log log n)^2)
Expected work: O(n^2*log n*log log n)",,,,Reif and Spirakis,1982,https://apps.dtic.mil/sti/citations/ADA114875,,,,,,,,,,,,,,,,n: number of nodes,,,,PRAM CREW,120,,,,,,,,,1,"time w/ probability 1-exp(-kn^a) for some k,a >1",0,,0,1,O(n^2 / log log n) (expected),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,,,Kruskal method,,,,,,,,Yoo,1983,https://www.osti.gov/biblio/5689584,,,,,,,,O(m),O(m),20,,O(m^2),40,,,m: number of edges,,,,MIMD-TC,300,,,,,,,,,0,,0,,0,1,O(m),,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,directed spanning forest,,,,,,,,,,"Tsin, Chin",1984,https://epubs.siam.org/doi/abs/10.1137/0213036,,,,,,,,O(log^2(n)),O(log^2(n)),2,,O(n^2 log n),21,,,n: number of nodes,,,,SIMD PRAM CREW,,,,,,,,,,0,,0,,0,1,n\ceil{n/log n},,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,,,Prim's,,,,,,,,Akl,1986,https://link.springer.com/article/10.1007/BF02240073,,,,,,,,O(n),O(n),10,,O(n^2),20,,,n: number of nodes,,,,SM-SIMD (CRCW),,,,,,,,,,0,,0,,0,1,O(n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,updating MST after 1 graph change,,,,,,,,,,"Pawagi, Ramakrishnan",1986,https://www.sciencedirect.com/science/article/pii/0020019086900980,,,,,,,,O(log n),O(log n),1,,O(n^2*log n),21,,,n: number of nodes,,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(n^2),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,undirected weighted MSF,,,,,,,,,,"Cole, Vishkin",1986,https://ieeexplore.ieee.org/iel5/4568183/4568184/04568239.pdf,,,,,,,,O(log n),O(log n),1,,O((n + m)log log n),20.1,,,"n: number of nodes
m: number of edges",,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O((n + m)log log n/log n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,undirected MSF,,,,,,,,,,"Awerbuch, Shiloach",1987,https://ieeexplore.ieee.org/document/1676869,,,,,,,,O(log^2(n)),O(log^2(n)),2,,O(n^2 log^2(n)),22,,,n: number of nodes,,,,Shuffle-exchange network,,,,,,,,,,0,,0,,0,1,n^2,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,undirected MSF,,,,,,,,,,"Awerbuch, Shiloach",1987,https://ieeexplore.ieee.org/document/1676869,,,,,,,,O(log m),O(log m),1,,O(m log m),21,,,m: number of edges,,,,PRAM-CRCW,130,,,,,,,,,0,,0,,0,1,m,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,m >= n log n,,Prim's algorithm with an efficient heap,,,,,,,,"Driscoll, Gabow, Shrairman, Tarjan",1987,https://dl.acm.org/doi/pdf/10.1145/50087.50096,,,,,,,,O(m/p),O(n log n),11,,O(m),20,,,"m: number of edges
p: number of processors",,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,p <= m/(n log n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,updating the MST after adding 1 node,,,,,,,,,,"Jung, Mehlhorn",1988,https://www.sciencedirect.com/science/article/pii/0020019088900841,,,,,,,,O(log n),O(log n),1,,O(n),10,,,n: number of nodes,,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,n/log n,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,updating MST after adding 1 node,,,,,,,,,,"Varman, Doshi",1988,https://www.sciencedirect.com/science/article/pii/0304397588900357,,,,,,,,O(log n),O(log n),1,,O(n*log n),11,,,n: number of nodes,,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,planar graphs MSF,,,,,,,,,,Philips,1989,https://dl.acm.org/doi/pdf/10.1145/72935.72952,,,,,,,,O(log^2 n),O(log^2 n),2,,O((n + m)*log n),21,,,,,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,O((n + m)/log n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,,,,,,,,,,,"Kruskal, Rudolph, Snir",1990,https://link.springer.com/article/10.1007/BF01840376,,,,,,,,O(m*log(n)/p + log(n)*log(p),O(m*log(n)/p + log(n)*log(p),,,O(m*log(n) + p*log(n)*log(p),,,,"n: number of nodes
m: number of edges
p: number of processors",,,,MIMD EREW,310,,,,,,,,,0,,0,,0,1,p <= m/log(m),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,updating MST after k graph changes,,,,,,,,,,"Pawagi, Kaser",1991,https://link.springer.com/content/pdf/10.1007/BF01228509.pdf,,,,,,,,O(log n * log k),O(log n * log k),,,O(nk),,,,"n: number of nodes
k: number of changes to the graph (ins/del/cost changes)",,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,nk/(log n * log k),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,undirected MSF,,,,,,,,,,"Cole, Vishkin",1991,https://www.sciencedirect.com/science/article/pii/0890540189900369,,,,,,,,O(log n),O(log n),1,,O(n log n + m),20,,,"n: number of nodes
m: number of edges",,,,PRAM CRCW,130,,,,,,,,,0,,0,,0,1,(n log n + m)/log n,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,undirected MSF,,,,,,,,,,Gazit,1991,https://epubs.siam.org/doi/pdf/10.1137/0220066,,,,,,,,O(log(n)),O(log(n)),1,,O(m+n),20,,,"n: number of vertices
m: number of edges",,,,PRAM-CRCW,130,,,,,,,,,1,The probability that the algorithm runs longer than expected is at most (2/e)^{n/log^k(n)} for some constant k < 4,0,,0,1,O((m+n)/log(n)),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,undirected,,,,,,,,,,"Johnson, Metaxas",1992,https://dl.acm.org/doi/pdf/10.1145/140901.141917,,,,,,,,O(log^{3/2}(n)),O(log^{3/2}(n)),1.5,,O(log^{3/2}(n)*(n+m)),21.5,,,"n: number of nodes
m: number of edges",,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,n+m,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,,,,,,,,,,,Karger,1992,"KARGER, D. R. 1992. Approximating, verifying, and constructing minimum spanmng forests. Manuscript.",,,,,,,,O(log n),O(log n),1,,m + n^{1+eps}*log(n) for any eps>0,20,https://www.sciencedirect.com/science/article/pii/B9780444880710500229,,"n: number of nodes
m: number of edges",,,,EREW PRAM,110,,,,,,,,,,,0,,0,1,m/log(n) + n^{1+eps} for any eps>0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,updating MST after k graph changes,,,,,,,,,,"Shen, Liang",1993,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=262898,,,,,,,,O(log k * log n) ,O(log k * log n) ,,,O(n^2),20,,,"n: number of nodes
k: number of changes to the graph (ins/del/cost changes)",,,,SIMD CREW PRAM,,,,,,,,,,0,,0,,0,1,O(n^2/(log k * log n)),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,,,Kruskal,,,,,,,,"Suraweera, Bhattacharya",1993,https://www.sciencedirect.com/science/article/pii/0020019093900196,,,,,,,,O(log m),O(log m),1,,O(m log m),21,,,"n: number of nodes
m: number of edges",,,,PRAM-CRCW,130,,,,,,,,,0,,0,,0,1,O(m),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,undirecred graph,,,,,,,,,,"Chong, Lam",1993,https://dl.acm.org/doi/pdf/10.5555/313559.313575,,,,,,,,O(log n log log n) ,O(log n log log n) ,1.1,,O((n+m) log n log log n) ,21.1,,,"n: number of vertices
m: number of edges",,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,O(n+m),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,,,,,,,,,,,"Cole, Klein, Tarjan",1996,https://dl.acm.org/doi/pdf/10.1145/237502.237563,,,,,,,,O(log n),O(log n),1,,O(n),10,,,n: number of nodes,,,,CRCW PRAM,130,,,,,,,,,1,,0,,0,1,n/log n,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,,,Sollin method,,,,O((t_s + t_w)*m/p + log(n)*log log n),,,,"Chung, Condon",1996,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=508073,,,,,,,,,,,,,,,,"n: number of nodes
m: number of edges",,,,"a distributed memory model, in which processors communicate using messages",700,,,,,,,,,,,,,1,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,undirected graph,,,,,,,,,,Chong,1996,http://dspace.fcu.edu.tw/bitstream/2377/2563/1/ce07ics001996000103.pdf,,,,,,,,O(log n log log n),O(log n log log n),1.1,,O((n+m) log n log log n),21.1,,,"n: number of nodes
m: number of edges
p: number of processors",,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,m+n,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,m >= n/2,,,,,,"Expected time: o((log n)^{1+eps}) for any eps > 0
Expected work: O(m)",,,,"Poon, Ramachandran",1997,https://www.cs.utexas.edu/~vlr/papers/mst97.pdf,,,,,,,,,,,,,,,,"n: number of nodes
m: number of edges",,,,EREW PRAM,110,,,,,,,,,1,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,,,,,,,,,,,Zaroliagis,1997,https://www.researchgate.net/profile/Christos-Zaroliagis/publication/47842817_Simple_and_Work-Efficient_Parallel_Algorithms_for_the_Minimum_Spanning_Tree_Problem/links/53e256010cf275a5fdd6ba3e/Simple-and-Work-Efficient-Parallel-Algorithms-for-the-Minimum-Spanning-Tree-Problem.pdf,,,,,,,,O(log^2 n),O(log^2 n),2,,O(m log n),21,,,"n: number of nodes
m: number of edges",,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,O(m/log n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,,,,,,,,,,,Zaroliagis,1997,https://www.researchgate.net/profile/Christos-Zaroliagis/publication/47842817_Simple_and_Work-Efficient_Parallel_Algorithms_for_the_Minimum_Spanning_Tree_Problem/links/53e256010cf275a5fdd6ba3e/Simple-and-Work-Efficient-Parallel-Algorithms-for-the-Minimum-Spanning-Tree-Problem.pdf,,,,,,,,O(log n),O(log n),1,,O(m log n),21,,,"n: number of nodes
m: number of edges",,,,COMMON CRCW PRAM,132,,,,,,,,,0,,0,,0,1,O(m),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,"find first k minimum spanning trees, 2<=k<=n^{n-2} in the order of increasing weight",,,,,,,,,,"Ma, Iwama, Gu",1997,https://ieeexplore.ieee.org/abstract/document/581705,,,,,,,,O(T(n) + k log n),O(T(n) + k log n),,,O((T(n) + k log n) * n^2 / log n),,,,"n: number of nodes
k: number of spanning trees we're looking for
T(n): best time for finding an MST with n^2/log n processors on a PRAM CREW",,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(n^2/ log n) ,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,"""sufficiently dense""
m/n >= p",,Sollin method,,,,,,,,"Dehne, Gotz",1998,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=740525,,,,,,,,O(log p),O(log p),,,"T_seq(n,m/p) + 2*T_seq(n, Dn) + O(n) + g*n + L*log p",,,,"n: number of nodes
m: number of edges",,,,BSP,400,,,,,,,,,0,,0,,0,1,p (<= m/n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,relatively dense graphs (m >= n*p),,,,,,,,,,"Adler, Dittrich, Juurlink, Kutylowski, Rieping",1998,https://dl.acm.org/doi/pdf/10.1145/277651.277662,,,,,,,,O(log p),O(log p),,,O(m/p + n * log log p + g * n + L* log p),,,,"n: number of nodes
m: number of edges
p: number of processors",,,,BSP,400,,,,,,,,,0,,0,,0,1,p <= m/n,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,"relatively dense graphs (p^{1+eps} <= m/n, eps > 0)",,,,,,,,,,"Adler, Dittrich, Juurlink, Kutylowski, Rieping",1998,https://dl.acm.org/doi/pdf/10.1145/277651.277662,,,,,,,,O(1),O(1),0,,O(m/p + n + g*m/p^{1+eps/2} + L),,,,"n: number of nodes
m: number of edges
p: number of processors",,,,BSP,400,,,,,,,,,0,,0,,0,1,"p^{1+eps} <= m/n
esp > 0",,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,all but very sparse graphs,,,,,,,,,,"Adler, Dittrich, Juurlink, Kutylowski, Rieping",1998,https://dl.acm.org/doi/pdf/10.1145/277651.277662,,,,,,,,O(log^2(p)/log((m+n)/p)),O(log^2(p)/log((m+n)/p)),,,O(m/p + n/p*log p + g*(m/p + n/p*log p) + L*(log^2(p)/log((m+n)/p))) ,,,,"n: number of nodes
m: number of edges
p: number of processors",,,,BSP,400,,,,,,,,,1,runtime bounds probability 1 - p^{-c} for any constant c > 0,0,,0,1,"p <= m + n
log p <= m/n <= p
eps > 0",,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,,,,,,,,,,,"Chong, Han, Lam",1999,https://hub.hku.hk/bitstream/10722/45607/1/40756.pdf?accept=1,,,,,,,,O(log n),O(log n),1,,O((n+m)*log n),21,,,"n: number of nodes
m: number of edges",,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,m+n,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,undirected graph,,,,,,,,,,"PETTIE, RAMACHANDRAN",1999,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=3be733422366ebdf4cfc1a21ffb3d70770ce129a,,,,,,,,O(log n),O(log n),1,,O(m+n),20,,,"n: number of nodes
m: number of edges",,,,EREW PRAM,110,,,,,,,,,1,1 - p^{-c} for any constant c > 0,0,,0,1,(m+n)/log n,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST update after 1 change (edge deletion or insertion) - undirected graph,,,,,,,,,,Das and Ferragina,1999,https://www.worldscientific.com/doi/abs/10.1142/S012962649900013X,,,,,,,,O(log n),O(log n),1,,O(m^{2/3} log n),,,,"n: number of nodes
m: number of edges",,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,O(m^{2/3}),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,undirected MSF,,,,,,,,,,"Pettie, Ramachandran",1999,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=3be733422366ebdf4cfc1a21ffb3d70770ce129a,,,,,,,,O(log n),O(log n),1,,O(m+n),20,,,"n: number of nodes
m: number of edges",,,,EREW PRAM,110,,,,,,,,,1,,0,,0,1,(m + n) / log n,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,undirected MSF,,,,,,,,,,"Halperin, Zwick",2000,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=7d8bf94f2171283c40ac212e51e2fbd01885fa4e,,,,,,,,O(log n),O(log n),1,,O(m+n),20,,,"n: number of nodes
m: number of edges",,,,EREW PRAM,110,,,,,,,,,1,,0,,0,1,(m+n)/log n,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,,,,,,,,,,,"Chong, Han, Igarashi, Lam",2001,https://www.sciencedirect.com/science/article/pii/S0166218X02005607,,,,,,,,O(log n),O(log n),1,,O((m+n)*sqrt(log n)),,,,"n: number of nodes
m: number of edges",,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,O((m+n)/sqrt(log n)),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,,,,,,,,,,,"Chong, Han, Igarashi, Lam",2001,https://www.sciencedirect.com/science/article/pii/S0166218X02005607,,,,,,,,O(log n),O(log n),1,,O((m+n)*log log n),20.1,,,"n: number of nodes
m: number of edges",,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O((m+n)*log log n/log n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,dense graphs,,,,,,,,,,"Chong, Han, Igarashi, Lam",2001,https://www.sciencedirect.com/science/article/pii/S0166218X02005607,,,,,,,,O(log n),O(log n),1,,O(n^2),20,,,"n: number of nodes
m: number of edges",,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,O(n^2/log n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,updating MST after deleting 1 node; determines the set of new MST edges for the potential deleting of every node,,,,,,,,,,Das & Loui ,2001,https://link.springer.com/article/10.1007/s00453-001-0061-3,,,,,,,,O(log^2 n),O(log^2 n),2,,O(m*log^2 n),22,,,"n: number of nodes
m: number of edges",,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,m,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,,,,,,,,,,,"Chong, Han, Lam",2001,https://dl.acm.org/doi/abs/10.1145/375827.375847,,,,,,,,O(log n),O(log n),1,,O(n*log n),11,,,n: number of nodes,,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,O(n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,undirected MSF,,,,,,,,,,"Pettie, Ramachandran",2001,https://www.cs.utexas.edu/users/vlr/papers/tr01-25.pdf,,,,,,,,O(m/p + log^2(n) log*(n)),O(m/p + log^2(n) log*(n)),,,O(m+n),20,,,"n: number of nodes
m: number of edges",,,,EREW PRAM,110,,,,,,,,,1,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,,,,,,,,,,,"AHRABIAN, NOWZARI-DALINI",2002,https://www.tandfonline.com/doi/pdf/10.1080/00207160210945,,,,,,,,O(n^2 log n),O(n^2 log n),2,,O(n^3),30,,,n: number of nodes,,,,,,,,,,,,,,0,,0,,0,1,O(n/log n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,,,,,,,,,,,"AHRABIAN, NOWZARI-DALINI",2002,https://www.tandfonline.com/doi/pdf/10.1080/00207160210945,,,,,,,,O(n^3*log(p)/p),O(n^3*log(p)/p),,,O(n^3*log(p)),30,,,"n: number of nodes
p: number of processors",,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,"Undirected, General MST",163,Parallel algorithm,,1,1,O(E log(V)/p),,,[https://www.sciencedirect.com/science/article/pii/S0743731506001262 Bader & Cong Parallel Implementation  (2006)],Bader & Cong Parallel Implementation ,2006,https://www.sciencedirect.com/science/article/pii/S0743731506001262,,,,0,0,5.01,"E: 3,
V: 5.01",O(E \log(V)/p),$O(E\log(V)/p)$,,https://www.sciencedirect.com/science/article/pii/S0743731506001262,$O(E\log(V)$,,https://www.sciencedirect.com/science/article/pii/S0743731506001262,only experimentally?,"V: number of vertices
E: number of edges
U: maximum edge weight
p: number of processors",V,https://www.sciencedirect.com/science/article/pii/S0743731506001262,0,PRAM/SMPs?,,words,3,"V: 3,
E: 1",O(V) total,Initializes and uses a constant number of arrays of size O(V) (and does work similar to work done in Boruvka/Prim algorithm),1,0,,0,,0,,0,1,p,,0,0,,"A minimum spanning tree (MST) or minimum weight spanning tree is a subset
 of the edges of a connected; edge-weighted undirected graph that
 connects all the vertices together; without any cycles and
 with the minimum possible total edge weight.",,,,"V:E
5:7",,,,,,,8.7,583.3333333,,,,,,,,5,,,Combinatorics
14,Minimum Spanning Tree (MST),1,"Undirected, general MST",,Parallel algorithm for GPU based on Prim,,1,1,,,,"[https://dl.acm.org/doi/pdf/10.1145/2145816.2145842 Nobari, Cao, Karras, Bressan (2012)]","Nobari, Cao, Karras, Bressan",2012,https://dl.acm.org/doi/pdf/10.1145/2145816.2145842,,,,,,,,"O(E + V/p + log^2(V)) (derived, assuming PRAM model)","O(E + V/p + log^2(V)) (derived, assuming PRAM model)",,,O(|E| log(|V|)),,,,"V: number of vertices
E: number of edges
P: number of processors",,,,None stated,,,,,,,,,,0,,0,,0,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,,,,,,,,,,,"Tripathy, Ray",2013,https://www.proquest.com/docview/1505018621,,,,,,,,O(m*log(n)/p),O(m*log(n)/p),,,O(m*log(n)),,,,"n: number of nodes
m: number of edges
p: number of processors",,,,"""multiprocessor system"", ""shared memory""",,,,,,,,,,0,,0,,0,1,p <=n,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,Euclidean MST,,,,,,,,,,"Wang, Yu, Gu, Shun",2021,https://dl.acm.org/doi/pdf/10.1145/3448016.3457296,,,,,,,,𝑂(log^2 𝑛),𝑂(log^2 𝑛),2,,𝑂(𝑛^2),,,,n: number of vertices,,,,work-depth,,,,,,,,,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
15,Closest Pair Problem,1,"2-dimensional space, Euclidean metric",,,,,,,,,[https://link.springer.com/article/10.1007/BF01758749 Cole & Gooddrich (1988)],Cole & Gooddrich,1988,https://link.springer.com/article/10.1007/BF01758749,,,,,,,,O(log n),O(log n),1,https://link.springer.com/article/10.1007/BF01758749,O(n log n),,https://link.springer.com/article/10.1007/BF01758749,no,n: number of points,,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,O(n),,0,0,,"Given $n$ points in 2-dimensional space equipped with the Eucildean metric, find a pair of points with the smallest distance between them. ",,,,,,,,,,,,,,,,,,,,,,,
15,Closest Pair Problem,1,"k-dimensional space, $l_m$ (or $l_\infty$) norm",,,,,,,,,[https://pure.mpg.de/pubman/faces/ViewItemOverviewPage.jsp?itemId=item_1834886 Lenhof & Smid (1992)],Lenhof & Smid,1992,https://pure.mpg.de/pubman/faces/ViewItemOverviewPage.jsp?itemId=item_1834886,,,,,,,,O((log n)^2 log log n),O((log n)^2 log log n),2.1,https://pure.mpg.de/pubman/faces/ViewItemOverviewPage.jsp?itemId=item_1834886,O(nlog n log log n + k),,https://pure.mpg.de/pubman/faces/ViewItemOverviewPage.jsp?itemId=item_1834886,no,"n: number of points
k: kth closest pair",,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(n/log n + k/((log n)^2 log log n)),,0,0,,"Given $n$ points in metric space, typically $k$-dimensional space equipped with $l_m$ (or $l_\infty$) norm, find a pair of points with the smallest distance between them. ",,,,,,,,,,,,,,,,,,,,,,,
15,Closest Pair Problem,1,2-dimensional array representation,173,,,1,1,O(n) using O(n^2) processors,,,[https://www.sciencedirect.com/science/article/pii/0020019080900356 Dyer (1980)],Dyer,1980,https://www.sciencedirect.com/science/article/pii/0020019080900356,,,,0,0,3,n: 3,$O(n)$ using $O(n^2)$ processors,$O(n)$,10,https://www.sciencedirect.com/science/article/pii/0020019080900356,$O(n^3)$,,https://www.sciencedirect.com/science/article/pii/0020019080900356,no,n: number of points,n,,,log-space pyramid cellular automaton,,words,5,n: 5,O(n^2),https://www.sciencedirect.com/science/article/pii/0020019080900356,0,1,,0,,0,,0,1,O(n^2),,0,0,,"given n points in metric space; find a pair of points with the smallest
 distance between them. ",,,,,,,,,,,1000,1000,,,,,,,,4,,,Image Processing
15,Closest Pair Problem,1,"2-dimensional space, Eucledian metric",,,,,,,,,,"MacKenzie, Stout",1991,https://www.researchgate.net/profile/Q-Stout/publication/2449701_Ultra-Fast_Expected_Time_Parallel_Algorithms/links/0c960527a896da1aea000000/Ultra-Fast-Expected-Time-Parallel-Algorithms.pdf,,,,,,,,O(1) expected,O(1) expected,,,O(n) expected,,,,n: number of points,,,,Arbitrary CRCW PRAM,131,,,,,,,,,1,,0,,0,1,n,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
15,Closest Pair Problem,1,closest pair after m updates,,,,,,,,,,"Wang, Yu, Gu, Shun",2021,https://arxiv.org/pdf/2010.02379.pdf,,,,,,,,O(log(n + m)log^∗(n + m)),O(log(n + m)log^∗(n + m)),,,O(m(1 + log((n + m)/m))) ,,,,"n: number of points
m: number of changes to the initial set of points",,,,work-depth with arbitrary concurrent writes,,,,,,,,,,1,whp,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
15,Closest Pair Problem,1,,,,,,,,,,,"Atallah, Goodrich",1986,https://docs.lib.purdue.edu/cgi/viewcontent.cgi?article=1424&context=cstech,,,,,,,,O(log n log log n),O(log n log log n),1.1,,O(n log n log log n),,,,n: number of points,,,,PRAM CREW,120,,,,,,,,,0,,0,,0,1,O(n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
15,Closest Pair Problem,1,Euclidean space in k dimensions,,,,,,,,,,"Blelloch, Maggs",2010,https://dl.acm.org/doi/pdf/10.5555/1882723.1882748,,,,,,,,O(log^2 n),O(log^2 n),2,,O(n log n),,,,n: number of points,,,,language-based model w/ unspecified read/write policy,,,,,,,,,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
15,Closest Pair Problem,1,Euclidean space in d dimensions,,,,,,,,,,"Blelloch, Gu, Shun, Sun",2016,https://dl.acm.org/doi/pdf/10.1145/3402819,,,,,,,,O(log n log^∗ n) whp,O(log n log^∗ n) whp,,,O(n) expected,,,,n: number of points,,,,ARBITRARY CRCW PRAM,131,,,,,,,,,1,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
15,Closest Pair Problem,1,all-nearest-neighbors,,,,,,,,,,Callahan,1993,https://www.researchgate.net/profile/Paul-Callahan-3/publication/221498722_Optimal_Parallel_All-Nearest-Neighbors_Using_the_Well-Separated_Pair_Decomposition_Preliminary_Version/links/5453daa60cf2bccc490b2619/Optimal-Parallel-All-Nearest-Neighbors-Using-the-Well-Separated-Pair-Decomposition-Preliminary-Version.pdf,,,,,,,, O(log n), O(log n),1,, O(n log n),,,,n: number of points,,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(n),,1,1,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),1,non-negative edge lengths,,,,,,,,,,"Driscoll, Gabow, Shrairman, Tarjan",1987,https://dl.acm.org/doi/pdf/10.1145/50087.50096,,,,,,,,O(m/p + n log n),O(m/p + n log n),,,O(m + np log n),,,,"n: number of nodes
m: number of edges
p: number of processors",,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,p <= m/(n log n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),1,nonnegative weighted digraphs,,,,,,,,,,"Klein, Subramanian",1997,https://www.sciencedirect.com/science/article/abs/pii/S0196677497908889,,,,,,,,O(sqrt(n) log(L) log(n) log*(n)),O(sqrt(n) log(L) log(n) log*(n)),,,O(m sqrt(n) log(L) log(n)),,,,"n: number of nodes
m: number of edges
L: sum of edge lengths",,,,ARBITRARY CRCW PRAM,131,,,,,,,,,1,,0,,0,1,O(m/log*n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),1,directed nonnegative,,,,,,"Expected span: O(log^3 n/ log log n) 
Expected work: O(dn)",random directed graphs with edge probability d/n and uniformly distributed edge weights,,,"Meyer, Sanders (Delta stepping)",1998,https://link.springer.com/chapter/10.1007/3-540-68530-8_33,,,,,,,,,,,,,,,,"n: number of nodes
d: maximum degree",,,,ARBITRARY CRCW PRAM,131,,,,,,,,,1,,0,,0,1,O(dn log log n /log^3 n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),1,directed nonnegative; the ratio d_c/∆ is not too large; random graphs,,,,,,"Expected span: O(log^2 n) 
Expected work: O(m+n)",random directed graphs with edge probability d/n and uniformly distributed edge weights,,,"Meyer, Sanders",2000,https://link.springer.com/chapter/10.1007/3-540-44520-X_61,,,,,,,,,,,,,,,,"n: number of edges
d_c: the maximum weight of a shortest path
∆: ""safe step width""",,,,CRCW PRAM,130,,,,,,,,,1,,0,,0,1,O(m/log^2 n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),1,directed nonnegative; the ratio d_c/∆ is not too large,,,,,,,,,,"Meyer, Sanders",2000,https://link.springer.com/chapter/10.1007/3-540-44520-X_61,,,,,,,,O((l_∆ + d_c/∆) log n) whp,O((l_∆ + d_c/∆) log n) whp,,,O(m + n'_{∆+}) whp,,,,"n: number of edges
d_c: the maximum weight of a shortest path
∆: ""safe step width""
l_∆: maximum number of iterations",,,,CRCW PRAM,130,,,,,,,,,1,whp,0,,0,1,O((m + n'_{∆+})/((l_∆ + d_c/∆) log n)),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),1,undirected graphs with nonnegative edge weights,,,,,,,,,,"Maleki, Nguyen, Lenharth, Garzarán, Padua, Pingali",2016,https://dl.acm.org/doi/abs/10.1145/2925426.2926287,,,,,,,,O((|E| + L_D)/P + (|E| + L_D)/D),O((|E| + L_D)/P + (|E| + L_D)/D),,,O((|E| + L_D) + (|E| + L_D)P/D),,,,"|E|: number of edges
P: number of processors
D: number of edge relaxations between communications
L_D: work overhead",,,,BSP (written for SPMD),,,,,,,,,,0,,0,,0,1,P,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),1,weighted digraph,,,,,,,,,,Amato,1991,https://core.ac.uk/download/pdf/158320008.pdf,,,,,,,,O(log^2 n),O(log^2 n),2,,M(n),,,,"n: number of nodes
M(n): number of processors necessary to multiply two nxn integer matrices over a ring in O(log n) time",,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,M(n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),1,,,∆-stepping,,,,,,,,"Dhulipala, Blelloch, Shun",2017,https://dl.acm.org/doi/pdf/10.1145/3087556.3087580,,,,,,,,O(d_∆ log |V|) whp,O(d_∆ log |V|) whp,,,expected O(w_∆),,,,"w∆, d∆: work and number of rounds of the original ∆-stepping algorithm",,,,work-depth CRCW,,,,,,,,,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),1,,,wBFS,,,,,,,,"Dhulipala, Blelloch, Shun",2017,https://dl.acm.org/doi/pdf/10.1145/3087556.3087580,,,,,,,,O(r_{src} + |E|)  whp,O(r_{src} + |E|)  whp,,,expected O(r_{src} log |V|),,,,r_{src}: eccentricity from src; longest SP dist bet src and any reachable vertex v,,,,work-depth CRCW,,,,,,,,,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),1,non-negative digraph,,,,,,,,,,"Brodal, Traff, Zaroliagis",1997,https://pure.mpg.de/rest/items/item_1824291_4/component/file_2574443/content,,,,,,,,O(n),O(n),10,,O(m log n),,,,"n: number of nodes
m: number of edges",,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(m log n / n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),1,random graph,,,,,,"Average-case time: T = O(log^2 n * min_i{2^i * L + |V_i|})
Work: O(n+m+T)","arbitrary directed graphs with n nodes, m edges, and independent random edge weights uniformly distributed in [0,1]",,,Meyer,2002,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1015582,,,,,,,,,,,,,,,,"n: number of nodes
m: number of edges
L: maximum shortest-path weigh
|V_i|: number of graph vertices with in-degree at least 2^i",,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O((n+m+T)/T),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),1,"undirected graph, with the ratio of the largest edge weight to the smallest edge weight is less than n^{O(polylog n)}, positive weights",,,,,,,,,,Cohen,1993,https://www.sciencedirect.com/science/article/abs/pii/S0196677496908135,,,,,,,,O(t polylog n),O(t polylog n),,,O((n^2 + n^3/t^2) *polylog n),,,,"n: number of nodes
t = n/d <= n",,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,O(n^2/t + n^3/t^3),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),1,"undirected graph, positive weights",,,,,,,,,,Cohen,1993,https://www.sciencedirect.com/science/article/abs/pii/S0196677496908135,,,,,,,,O(nR log^3{n}/d),O(nR log^3{n}/d),,,O(n^2R log^3{n} + nd^2 log n),,,,"R = max{1, ceil(log{max_{e \in E} w(e) / min_{e \in E} w(e)})}
1 <= d <= n",,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,O(nd + d^3/(R log^2 n)),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),1,undirected graph,,,,,,,,,,"Shi, Spencer",1999,https://dl.acm.org/doi/abs/10.1006/jagm.1998.0968,,,,,,,,O(t log n),O(t log n),,,O((n^3/t^2) log n log(n/t) + m log n),,,,"n: number of nodes
m: number of edges
log n <= t <= n",,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,O((n^3/t^3) log(n/t) + m/t),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),1,undirected graph,,,,,,,,,,"Shi, Spencer",1999,https://dl.acm.org/doi/abs/10.1006/jagm.1998.0968,,,,,,,,O(t log n),O(t log n),,,O((n^3/t^3 + mn/t) log n) for any t in the range log n <= t <= n,,,,"n: number of nodes
m: number of edges
log n <= t <= n",,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,O(n^3/t^4 + mn/t^2) for any t in the range log n <= t <= n,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),1,non-negative planar directed graph,,,,,,,,,,"Klein, Rao, Rauch, Subramanian",1994,https://dl.acm.org/doi/pdf/10.1145/195058.195092,,,,,,,,O(n^{2/3} log nL log^3 n),O(n^{2/3} log nL log^3 n),,,O(n^{4/3} log nL log n),,,,L: maximum magnitude of lengths,,,,Unlisted (assume CRCW PRAM),130,,,,,,,,,0,,0,,0,1,O(n^{2/3}/log^2 n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),0,,,,,,,,,,,"Mohr, Pasche",1988,https://dl.acm.org/doi/abs/10.1007/BF02276912,,,,,,,,,,,,,,,,,,,,MIMD,,,,,,,,,,,,,,,,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),1,polynomially bounded nonnegative integer lengths,,,,,,,,,,"Rozhoň, Haeupler, Martinsson, Grunau, Zuzic",2023,https://dl.acm.org/doi/pdf/10.1145/3564246.3585235,,,,,,,,n^{1/2+o(1)},n^{1/2+o(1)},,,m (log n)^O(1),,,,"n: number of vertices
m: number of edges",,,,model-independent,,,,,,,,,,1,works whp,0,,0,1,(m (log n)^O(1)) / n^{1/2+o(1)},,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),1,digraphs w/ non-negative integer weights,,,,,,,,,,"Cao, Fineman",2023,https://epubs.siam.org/doi/pdf/10.1137/1.9781611977554.ch166,,,,,,,,n^{1/2+o(1)} whp,n^{1/2+o(1)} whp,,,O˜(m),,,,"n: number of vertices
m: number of edges",,,,work-depth,,,,,,,,,,1,,0,,0,1,\tilde{O}(m/(n^{1/2+o(1))},,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),1,planar graphs with nonnegative edge-lengths,,,,,,,,,,"Henzinger, Klein, Rao, Subramania",1997,https://www.sciencedirect.com/science/article/pii/S0022000097914938/pdf,,,,,,,,O(n^{2/3} log(nL) log^3 n),O(n^{2/3} log(nL) log^3 n),,,O(n^{4/3} log(nL) log n),,,,"n: number of vertices
L: absolute value of the most negative length",,,,unlisted (assume PRAM CRCW),130,,,,,,,,,0,,0,,0,1,O(n^{2/3}/log^2 n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),1,planar digraphs with nonnegative real edge weights,,,,,,,,,,"Traff, Zaroliagis",1996,https://pure.mpg.de/rest/items/item_1827410_4/component/file_2574036/content,,,,,,,,O((n^{2\eps} +n^{1-\eps}) log n),O((n^{2\eps} +n^{1-\eps}) log n),,,O(n^{1+\eps}),,,,0 < \eps < 1/2,,,,PRAM EREW,110,,,,,,,,,0,,0,,0,1,O(n^{1+\eps} / ((n^{2\eps} +n^{1-\eps}) log n)),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),0,,,,,,,,,,,"Polymenakos, Bertsekas",1993,https://dspace.mit.edu/bitstream/handle/1721.1/3296/P-21?sequence=1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),1,weighted directed graph,,,,,,,,,,Cohen,1993,https://dl.acm.org/doi/pdf/10.1145/165231.165240,,,,,,,,O(log^2 n),O(log^2 n),,,O((n + n^{3\mu}) log n + s(n + n^{2\mu})),,,,"n: number of vertices
s: number of sources
k^{\mu}-separator decomposition ",,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,O(((n + n^{3\mu}) log n + s(n + n^{2\mu}))/log^2 n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),1,edge lengths between 1 and L,,,,,,,,,,Spencer,1991,https://dl.acm.org/doi/pdf/10.1145/113379.113387,,,,,,,,O((n/p) log n log(pL)),O((n/p) log n log(pL)),,,O(np^2 log p log(pL)) + \tilde{O}(m + n log L),,,,"n: number of vertices
m: number of edges
L: length of the longest edge
p <= n",,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,O(p^3 log p / log(n)) + \tilde{O}((m + n log L) / ((n/p) log n log(pL)) ),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),1,"undirected (k,ρ)-graph",,,,,,,,,,"Blelloch, Gu, Sun, Tangwongsan (Radius Stepping)",2016,https://dl.acm.org/doi/10.1145/2935764.2935765,,,,,,,,O(n/ρ log n log (ρL) + ρ log ρ),O(n/ρ log n log (ρL) + ρ log ρ),,,O((m+nρ) log n + nρ^2),,,,"n: number of vertices
m: number of edges
ρ: 
a (k, ρ)-graph is a graph in which every vertex can reach its ρ closest vertices within k hops",,,,CRCW PRAM,130,,,,,,,,,0,,0,,1?,1,O((m log n + nρ^2)/(ρ log ρ) + (m + nρ)ρ log n/(n log n log ρL)),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),1,"random graphs from G(n, d/n) and random edge weights uniformly distributed in [0,1]",,,,,,,,,,"Crauser, Mehlhorn, Meyer, Sanders",1998,https://www.researchgate.net/profile/Kurt-Mehlhorn/publication/47842024_A_Parallelization_of_Dijkstra's_Shortest_Path_Algorithm/links/00b4951cbf96929546000000/A-Parallelization-of-Dijkstras-Shortest-Path-Algorithm.pdf,,,,,,,,O(n^{1/3} log n) whp,O(n^{1/3} log n),,,O(n log n + m),,,,"n: number of vertices
r: number of delete phases; r = O(sqrt(n)) whp
m: number of edges",,,,CRCW PRAM,130,,,,,,,,,1,whp,0,,,1,"max{n/(r log n), m/(r log^2 n)}",,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),1,"random graphs from G(n, d/n) and random edge weights uniformly distributed in [0,1]",,,,,,,,,,"Crauser, Mehlhorn, Meyer, Sanders",1998,https://www.researchgate.net/profile/Kurt-Mehlhorn/publication/47842024_A_Parallelization_of_Dijkstra's_Shortest_Path_Algorithm/links/00b4951cbf96929546000000/A-Parallelization-of-Dijkstras-Shortest-Path-Algorithm.pdf,,,,,,,,O(n^{1/3 + \eps}) whp for an arbitrary small constant \eps > 0,O(n^{1/3 + \eps}) whp for an arbitrary small constant \eps > 0,,,O(n log n + m),,,,"n: number of vertices
r: number of delete phases; r = O(sqrt(n)) whp
m: number of edges",,,,EREW PRAM,110,,,,,,,,,1,whp,0,,,1,"max{n/(r log n), m/(r log^2 n)}",,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),0,unweighted,,"matrix multiplication over the ring (+,x)",,,,,,,,"Gazit, Miller",1988,https://www.sciencedirect.com/science/article/pii/0020019088901640,,,,,,,,,,,,,,,,,,,,EREW PRAM,110,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),0,,,,,,,,,,,Crane,1968,https://ieeexplore.ieee.org/abstract/document/1687426/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),1,directed,,,,,,,,,,Garg,2018,https://arxiv.org/pdf/1812.10499,,,,,,,,O(n log log n),O(n log log n),,,O(nm),,,,"n: number of vertices
m: number of edges",,,,common CRCW PRAM,132,,,,,,,,,0,,0,,0,1,m,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),1,,,Warshall-Floyd method,,,,,,,,Levitt and Kautz,1972,https://dl.acm.org/doi/abs/10.1145/361573.361576,,,,,,,,O(n),O(n),,,O(n^3),,,,n: number of vertices,,,,Systolic array,,,,,,,,,,0,,0,,0,1,n^2,,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),0.001,,,Warshall-Floyd method,,,,,,,,Arjomandi,1975,https://dl.acm.org/doi/abs/10.5555/908319,,,,,,,,,,,,,,,,,,,,MIMD-TC,300,,,,,,,,,,,,,,1,,,,,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),1,,,Repeated plus-min method,,,,,,,,Savage,1977,https://apps.dtic.mil/sti/citations/ADA056888,,,,,,,,O(log^2(n)),O(log^2(n)),,"section 7.2, page 104",O(n^3*log(n)),,,,n: number of vertices,,,,SIMD-SM-R (CREW PRAM?),210,,,,,,,,,0,,0,,0,1,n^3/log(n),,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),0.001,,,Warshall-Floyd method,,,,,,,,Deo et al.,1980,https://cir.nii.ac.jp/crid/1571698600670249216,,,,,,,,O(n^3/p+pn),,,,,,,,,,,,MIMD-TC,300,,,,,,,,,,,,,,1,p<<n,,,,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),1,,,Repeated plus-min method,,,,,,,,Dekel; Nassimi & Sahni,1981,https://epubs.siam.org/doi/abs/10.1137/0210049,,,,,,,,O(log^2(n)),O(log^2(n)),,,O(n^3*log^2(n)),,,,n: number of vertices,,,,"SIMD-PS, SIMD-CC",700,,,,,,,,,0,,0,,0,1,n^3,,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),1,,,Repeated plus-min method,,,,,,,,Kucera,1982,https://www.sciencedirect.com/science/article/pii/002001908290093X,,,,,,,,O(log(n)),O(log(n)),,,O(n^4*log(n)),,,,n: number of vertices,,,,SIMD-SM-RW (CRCW PRAM?),220,,,,,,,,,0,,0,,0,1,n^4,,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),1,,,,,,,"O(log log n)
Work: O(n^3 log log n)","""Edge lengths are independent identically distributed nonnegative random variables. Each edge length has a distribution function F with F(0)=0 and that F is differentiable at zero.""",,,Frieze & Rudolph,1984,http://math.cmu.edu/~af1p/Texfiles/PARALLELALG.pdf,,,,,,,,,,,,,,,,n: number of vertices,,,,PRAM-CRCW,130,,,,,,,,,,,,,,1,n^3,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),0.001,,,,,,,,,,,Jenq & Sahni,1987,https://digitalcommons.montclair.edu/compusci-facpubs/96/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),1,directed graph with nonnegative edge costs,,,,,,"O(alpha*log log n)
Work: O(alpha*n^{2.5+1/\alpha)*log log n)","""elements of the input distance matrix are independent random variables drawn from an identical distribution. """,,,Takaoka,1989,https://link.springer.com/content/pdf/10.1007/3-540-50728-0_51.pdf,,,,,,,,,,,,,,,,n: number of vertices,,,,SIMD-SM-RW ,220,,,,,,,,,1,,,,,1,n^{2.5+1/\alpha),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),1,,,,,,,,,,,Takaoka,1992,https://www.sciencedirect.com/science/article/pii/002001909290200F,,,,,,,,O(log^2(n)),O(log^2(n)),,,O(n^3*(log n)^{1/2}*(log log n)^{1/2}),,,,n: number of vertices,,,,PRAM-EREW,110,,,,,,,,,0,,0,,0,1,O(n^3*(log log n)^{1/2}/(log n)^{3/2}),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),1,,,,,,,,,,,"Han, Pan & Reif",1992,https://dl.acm.org/doi/pdf/10.1145/140901.141913,,,,,,,,O(log^2(n)),O(log^2(n)),,,o(n^3),,,,"n: number of vertices
p: number of processors",,,,PRAM-EREW,110,,,,,,,,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),1,,,,,,,,,,,"Han, Pan & Reif",1992,https://dl.acm.org/doi/pdf/10.1145/140901.141913,,,,,,,,O(log(n)*log(log n)),O(log(n)*log(log n)),,,o(n^3),,,,"n: number of vertices
p: number of processors",,,,PRAM-CRCW,130,,,,,,,,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),1,,,,,,,,,,,"Han, Pan & Reif",1992,https://dl.acm.org/doi/pdf/10.1145/140901.141913,,,,,,,,O(log n),O(log n),,,O(n^3),,,,"n: number of vertices
p: number of processors",,,,PRAM-CRCW,130,,,,,,,,,1,,,,,1,n^3,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),1,directed planar graph with real-valued edge costs but no negative cycles,,fundamental hammock-decomposition,,,,,,,,"Pantziou, Spirakis, Zaroliagis ",1992,https://link.springer.com/article/10.1007/BF01994878,,,,,,,,O(log^2(n)),O(log^2(n)),,,O((nq + M(q))*log^2(n)),,,,"n: number of vertices
q: cardinality of a face-on-vertex covering for a plane embedding
M(q): # of processors required to multiply 2 qxq matrices in O(log q) time",,,,PRAM-CREW,120,,,,,,,,,0,,0,,0,1,O(nq + M(q)),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),0,,,,,,,,,,,"Romeijn, Smith",1993,https://deepblue.lib.umich.edu/bitstream/handle/2027.42/7309/bap3247.0001.001.pdf?sequence=5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),0.001,unweighted interval graph,,,,,,,,,,Pal & Bhattacharjee,1997,https://dl.acm.org/doi/abs/10.5555/640121.640124,,,,,,,,O(n/p + log n),O(n/p + log n),,,O(n^2+np*log n),,,,"n: number of vertices
np: number of processors",,,,PRAM-EREW,110,,,,,,,,,,,,,,,np,,,,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),1,chordal graphs,,,,,,,,,,"Han, Sekharan, Sridhar",1997,https://www.sciencedirect.com/science/article/pii/S0166218X96001035,,,,,,,,O(log^2(n)),O(log^2(n)),,,O(M(n)),,,,"n: number of nodes
M(n): time required for multiplying two nxn matrices",,,,PRAM-CREW,120,,,,,,,,,0,,0,,0,1,O(M(n)/log^2(n) + n^2/log^2(n)),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),1,,,,,,,,,,,Takaoka,1998,https://link.springer.com/article/10.1007/PL00009198,,,,,,,,O(log^2(n)),O(log^2(n)),,,O(n^3(log log n)^{3/2}/(log n)^{1/2}) = o(n^3),,,,n: number of vertices,,,,PRAM-EREW,110,,,,,,,,,0,,0,,0,1,O(n^3(log log n)^{3/2}/(log n)^{5/2}),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),0,interval graphs; circular-arc graphs,,,,,,,,,,"Chen, Lee",1994,https://ieeexplore.ieee.org/abstract/document/288297,,,,,,,,sorting + O(log n),,,,sorting + O(n),,,,,,,,PRAM-CREW,120,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),0.001,,,,,,,,,,,"Chen, Lee, Sridhar, Sekharan",1998,https://onlinelibrary.wiley.com/doi/pdf/10.1002/(SICI)1097-0037(199807)31:4%3C249::AID-NET5%3E3.0.CO;2-D,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),1,weighted directed dense graph,,,,,,,,,,Tiskin,2001,https://www.researchgate.net/profile/Jan-Van-Leeuwen/publication/242498580_Automata_Languages_and_Programming_28th_International_Colloquium_ICALP_2001_Crete_Greece_July_8-12_2001_Proceedings/links/0a85e53cd28b9617d1000000/Automata-Languages-and-Programming-28th-International-Colloquium-ICALP-2001-Crete-Greece-July-8-12-2001-Proceedings.pdf#page=192,,,,,,,,O(n^3/p + g*(n^2/p^{2/3}) + l* log p),O(n^3/p + g*(n^2/p^{2/3}) + l* log p),,,O(n^3),,,,"n: number of nodes
p: number of processors
g: communication throughput ratio (aka gap)
l: communication latency",,,,BSP,400,,,,,,,,,0,,0,,0,1,p (n ≥ p),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),1,,,,,,,,,,,Takaoka,2004,https://link.springer.com/chapter/10.1007/978-3-540-27798-9_31,,,,,,,,O(log log n),O(log log n),,,O(n^3*log^2(log n)/log n),,,,n: number of vertices,,,,PRAM-EREW,110,,,,,,,,,0,,0,,0,1,O(n^3*log(log n)/log n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),1,circular-arc graphs,,,,,,,,,,"Saha, Pal & Pal",2005,https://link.springer.com/article/10.1007/BF02936037,,,,,,,,O(n^2/p+ log n),O(n^2/p+ log n),,,O(n^2+p*log n),,,,"n: number of vertices
p: number of processors",,,,PRAM-EREW,110,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),0,,,,,,,,,,,Yanagisawa,2010,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5470362,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),1,,,Repeated plus-min method,,,,,,,," Zhang, Wu, Wei & Wang",2011,https://www.sciencedirect.com/science/article/pii/S1051200411000650,,,,,,,,O(log^2(n)),O(log^2(n)),,,O(n^2*log^2(n)),,,,n: number of vertices,,,,PCNN,,,,,,,,,,0,,0,,0,1,O(n^2),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),1,,,,,,,,,,,"Solomonik, Buluç, Demmel",2013,https://ieeexplore.ieee.org/abstract/document/6569841,,,,,,,,O(n^3/p + n^2/\sqrt{p} + \sqrt{p}log^2(p)) or O(n^3/p + n^2/\sqrt{pc} + \sqrt{pc}log^2(p/c^3)),O(n^3/p + n^2/\sqrt{p} + \sqrt{p}log^2(p)) or O(n^3/p + n^2/\sqrt{pc} + \sqrt{pc}log^2(p/c^3)),,,O(n^3),,,,"n: number of vertices
p: number of processors
c <= p^{1/3} (some blocking parameter)",,,,Communication-avoiding,,,,,,,,,,0,,0,,0,1,p,,0,0,https://www2.eecs.berkeley.edu/Pubs/TechRpts/2012/EECS-2012-19.pdf,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),0,,,,,,,,,,,"Kim, Choi, Bae",2018,https://dl.acm.org/doi/pdf/10.1145/3229710.3229730,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),1,sparse graphs,,,,,,,,,,"Sao, Kannan, Gera, Vuduc",2020,https://dl.acm.org/doi/abs/10.1145/3332466.3374533,,,,,,,,,O(|S|*log^2(n)),,,O(n^2*|S|),,,,"n: number of vertices
|S|: size of the top level separator",,,,PRAM-CREW,120,,,,,,,,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),0,,,,,,,,,,,"Gazit, Miller",1988,http://www.cs.cmu.edu/~glmiller/Publications/GaMi88.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),1,undirected,,Vertex collapse method,,,,"Expected span: O((log log n)^2)
Expected work: O(n^3*(log log n)^2 / log n)",,,,Reif and Spirakis,1982,https://apps.dtic.mil/sti/citations/ADA114875,,,,,,,,,,,,,,,,n: number of nodes,,,,RP-RAM (Arbitrary CRCW),,,,,,,,,,1,"time w/ probability 1-exp(-kn^a) for some k,a >0",0,,0,1,O(n^3/log n) (expected),,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),1,undirected,,Vertex collapse method,,,,"Expected span: O(log n*(log log n)^2)
Expected work: O(n^3*(log log n)^2)",,,,Reif and Spirakis,1982,https://apps.dtic.mil/sti/citations/ADA114875,,,,,,,,,,,,,,,,n: number of nodes,,,,PRAM CREW,,,,,,,,,,1,"time w/ probability 1-exp(-kn^a) for some k,a >1",0,,0,1,O(n^3/log n) (expected),,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),0,,,,,,,,,,,Chan,2009,http://tmc.web.engr.illinois.edu/moreapsp.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),0,,,,,,,,,,,"Galil, Margalit",1997,https://pdf.sciencedirectassets.com/272574/1-s2.0-S0022000000X00402/1-s2.0-S0022000097913854/main.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),0,,,,,,,,,,,Bertsekas,1991,https://epubs.siam.org/doi/pdf/10.1137/0801026,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),0,,,,,,,,,,,"Karczmarz, Sankowski",2021,https://epubs.siam.org/doi/abs/10.1137/1.9781611976465.17,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
18,Integer Factoring,1,First Category Integer Factoring,,,,,,,,,,"Parallel Pollard's ""\rho"" algorithm (Brent)",1990,https://openresearch-repository.anu.edu.au/bitstream/1885/40808/3/TR-CS-90-05.pdf,,,,,,,,O(f^{1/2} (log N)^2 / P^{1/2}) expected,O(f^{1/2} (log N)^2 / P^{1/2}) expected,,,O(f^{1/2} (log N)^2 P^{1/2}) expected,,,O(P^{-1/2}),"N: integer to be factorized
f: nontrivial factor of N
P: number of processors",,,,Not listed (assume MIMD),,,,,,,,,,1,expected times,0,,0,1,P,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
18,Integer Factoring,1,First Category Integer Factoring,,,,,,,,,,Parallel Lenstra's ECM (Brent),1990,https://openresearch-repository.anu.edu.au/bitstream/1885/40808/3/TR-CS-90-05.pdf,,,,,,,,"TP = T_1/P + O(T_1^{1=2+\eps}), T_1 = O(exp(c(log f log log f)^{1/2}) * (log N)^2) expected, where c is a constant",T_1/P + O(T_1^{1=2+\eps}),,,T_1 + O(T_1^{1=2+\eps}*P),,,,"N: integer to be factorized
f: nontrivial factor of N
P: number of processors",,,,MIMD and SIMD,,,,,,,,,,1,expected times,0,,0,1,P,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
19,Integer Factoring,1,Second Category Integer Factoring,,,,,,,,,,Parallel MPQS (Brent),1990,https://maths-people.anu.edu.au/~brent/pd/rpb115.pdf,,,,,,,,"O(exp(c(log N log log N)^{1/2})/N) expected, where c is a constant",O(exp(c(log N log log N)^{1/2})/N),,,O(exp(c(log N log log N)^{1/2})/N*P),,,,"N: integer to be factorized
P: number of processors",,,,Not listed (assume MIMD),,,,,,,,,,1,,0,,0,1,P not much larger than the size of the factor base (which is the set of the prime factors),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
19,Integer Factoring,1,Second Category Integer Factoring,,,,,,,,,,"Parallel Quadratic Sieve (CARON, Silverman)",1988,https://link.springer.com/content/pdf/10.1007/BF00154339.pdf,,,,,,,,O(lg^3(D)/L) heuristic,O(lg^3(D)/L) heuristic,,,O(lg^3(D)) heuristic,,,,"D: a probable prime, D ~ ~N^{1/4}/M^{1/2}
L: number of processors",,,,asynch MIMD,,,,,,,,,,0,,0,,1,1,L,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
19,Integer Factoring,1,Second Category Integer Factoring,,,,,,,,,,Sorenson,1994,https://www.sciencedirect.com/science/article/pii/S0890540184710212/pdf?md5=22a3d96572396f9f9a174c3a517f6cef&pid=1-s2.0-S0890540184710212-main.pdf&_valck=1,,,,,,,,O(log^{2d+2} n),O(log^{2d+2} n),,,exp[O(log^d n)],,,,"d: a positive constant s.t. B=n^{log^d n}
n: length of input
B: bound for the prime base",,,,boolean circuits,600,,,,,,,,,1,completely factor an integer with probability 1-o(1),0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
19,Integer Factoring,1,Second Category Integer Factoring,,,,,,,,,,"Yang, Xu, Lin",2005,https://link.springer.com/chapter/10.1007/11599555_65,,,,,,,,O(n^2/p),O(n^2/p),,,O(n^2),,,,"n: integer to be factorized
p: number of processors",,,,Not specified,,,,,,,,,,1?,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
,Integer Factoring,0.001,,,,,,,,,,,"Yang, Huang, Feng, Pan, Zhu",2017,https://www.sciencedirect.com/science/article/abs/pii/S0020025516310362,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
19,Integer Factoring,1,Second Category Integer Factoring,,,,,,,,,,Wunderlich,1985,https://www.ams.org/journals/mcom/1985-44-169/S0025-5718-1985-0771047-0/S0025-5718-1985-0771047-0.pdf,,,,,,,,M^a / (r(a) a^2 log^2 M) / P,M^a / (r(a) a^2 log^2 M) / P,, ,M^a / (r(a) a^2 log^2 M),,,,"M: integer to be factorized
a = log x / log(sqrt(M))
x: the upper bound for the primes considered
r(a): Dickman's function
P: number of processors",,,,SIMD (ICL DAP),,,,,,,,,,0,,0,,0,1,P,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
,Integer Factoring,0.001,,,,,,,,,,,"Åsbrink, Brynielsson",2000,https://www.csc.kth.se/~joel/qs.pdf,,,,,,,,,,,,,,,,,,,,MPI,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
19,Integer Factoring,1,Second Category Integer Factoring,,,,,,,,,,Yan,1993,https://www.tandfonline.com/doi/pdf/10.1080/0020739930240317,,,,,,,,pi(sqrt(n))/p,pi(sqrt(n))/p,,,pi(sqrt(n)),,,,"n: integer to be factorized
pi(x): the number of primes up to x
p: number of processors",,,,MIMD,,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
19,Integer Factoring,1,Second Category Integer Factoring,,,,,,,,,,"Bahig, Hazber, Al-Utaibi, Nassr",2022,https://www.mdpi.com/2073-8994/14/12/2527,,,,,,,,O(m/t),O(m/t),,,O(m),,,,"m: integer to be factorized
t: number of threads",,,,shared memory,,,,,,,,,,0,,0,,0,1,t,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
,Integer Factoring,0.001,,,,,,,,,,,"Daoud, Gad",2014,https://www.academia.edu/download/34904126/Paper_27-A_parallel_line_sieve_for_the_GNFS_Algorithm.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,Integer Factoring,0.001,,,,,,,,,,,"Yang, Xu, Lin, Quinn",2006,https://www.uneex.ru/static/springer/fulltext.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,Integer Factoring,0.001,,,,,,,,,,,"Bouillaguet, Zimmermann",2021,https://inria.hal.science/hal-02098114/document,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,Integer Factoring,0.001,,,,,,,,,,,"Yang, Huang, Feng, Xu",2017,https://www.sciencedirect.com/science/article/abs/pii/S0020025516312348,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,Integer Factoring,0.001,,,,,,,,,,,Silverman,1987,https://www.ams.org/journals/mcom/1987-48-177/S0025-5718-1987-0866119-8/S0025-5718-1987-0866119-8.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,Integer Factoring,0.001,,,,,,,,,,,"Yang, Xu, Yeo, Hussain",2010,https://www.sciencedirect.com/science/article/pii/S0898122110000428,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
19,Integer Factoring,0.001,Second Category Integer Factoring,204,,,1,1,O(e^{sqrt((2+o(1))n*logn)}),,,[https://www.ams.org/journals/mcom/1993-61-203/S0025-5718-1993-1182953-4/S0025-5718-1993-1182953-4.pdf Rational sieve (1993)],Rational sieve,1993,https://www.ams.org/journals/mcom/1993-61-203/S0025-5718-1993-1182953-4/S0025-5718-1993-1182953-4.pdf,,,,0,0,8,n: 8,O(e^{sqrt((2+o(1))n*logn)}),,,,,,,no,"n: number of bits in the integer
B: bound parameter",n,,,Word RAM?,,bits,3,"n: 3,
B: 5",O(n+(B/logB)^2)?,Same general approach as Dixon's algorithm,1,0,,0,,0,,0,1,,,0,0,,has a running time which depends solely on the size of the integer to be factored.,,,,,,,,,,,,,,,,,,,,4,,,Numerical Analysis
20,LU Decomposition,0,,,,,,,,,,,"Bouillaguet, Delaplace, Voge",2017,https://dl.acm.org/doi/pdf/10.1145/3115936.3115944,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,1,Single String Search,,,,1,1,O(log n),,,[https://dl.acm.org/doi/pdf/10.1145/72935.72977 Kedem et al. (1989)],Kedem et al.,1989,https://dl.acm.org/doi/pdf/10.1145/72935.72977,,,,,,,,O(log n),O(log n),,https://dl.acm.org/doi/pdf/10.1145/72935.72977,O(n),,https://dl.acm.org/doi/pdf/10.1145/72935.72977,yes,"n: length of text
m: length of pattern",,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(n/log n),,0,0,,Single string search algorithms try to find a place where a string (also called a pattern) is found within a larger string or text.,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,1,Single String Search,,,,1,1,O(1),,,[https://dl.acm.org/doi/pdf/10.1145/210332.210341 Galil (1995)],Galil,1995,https://dl.acm.org/doi/pdf/10.1145/210332.210341,,,,,,,,O(1),O(1),,https://dl.acm.org/doi/pdf/10.1145/210332.210341,O(n),,https://dl.acm.org/doi/pdf/10.1145/210332.210341,yes,"n: length of text
m: length of pattern",,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(n),,0,0,,Single string search algorithms try to find a place where a string (also called a pattern) is found within a larger string or text.,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,1,Single String Search,,,,1,1,O(log log m),,,[https://dl.acm.org/doi/pdf/10.1145/73007.73036 Berkman et al. (1989)],Berkman et al.,1989,https://dl.acm.org/doi/pdf/10.1145/73007.73036,,,,,,,,O(log log m),O(log log m),,https://dl.acm.org/doi/pdf/10.1145/73007.73036,O(n),,https://dl.acm.org/doi/pdf/10.1145/73007.73036,yes,"n: length of text
m: length of pattern",,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(n/log log m),,0,0,,Single string search algorithms try to find a place where a string (also called a pattern) is found within a larger string or text.,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,1,Single String Search,,,,1,1,O(log m),,,[https://www.sciencedirect.com/science/article/pii/S0019995885800280 Vishkin (1985)],Vishkin,1985,https://www.sciencedirect.com/science/article/pii/S0019995885800280,,,,,,,,O(log m),O(log m),,https://www.sciencedirect.com/science/article/pii/S0019995885800280,O(n),,https://www.sciencedirect.com/science/article/pii/S0019995885800280,yes,"n: length of text
m: length of pattern",,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(n/log m),,0,0,,Single string search algorithms try to find a place where a string (also called a pattern) is found within a larger string or text.,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,1,Single String Search,,,,1,1,O(1),,,[https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=148407&casa_token=rbrxJVaeHrEAAAAA:5dv2PD5J0OsZhMatc_iNgGGFJdEVFZBr8VbrhD_STK4sCUCVflk-LBRPUeBy16J-QVVj6Dcv&tag=1 Takefuji et al. (1992)],Takefuji et al.,1992,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=148407&casa_token=rbrxJVaeHrEAAAAA:5dv2PD5J0OsZhMatc_iNgGGFJdEVFZBr8VbrhD_STK4sCUCVflk-LBRPUeBy16J-QVVj6Dcv&tag=1,,,,,,,,O(1),O(1),,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=148407&casa_token=rbrxJVaeHrEAAAAA:5dv2PD5J0OsZhMatc_iNgGGFJdEVFZBr8VbrhD_STK4sCUCVflk-LBRPUeBy16J-QVVj6Dcv&tag=1,O(nm),,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=148407&casa_token=rbrxJVaeHrEAAAAA:5dv2PD5J0OsZhMatc_iNgGGFJdEVFZBr8VbrhD_STK4sCUCVflk-LBRPUeBy16J-QVVj6Dcv&tag=1,yes,"n: length of text
m: length of pattern",,,,Neural Network?,,,,,,,,,,0,,0,,0,1,O(nm),,0,0,,Single string search algorithms try to find a place where a string (also called a pattern) is found within a larger string or text.,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,1,"All Occurrences, With Mismatches",,,,1,1,O(log m + k),,,"[https://dl.acm.org/doi/pdf/10.1145/12130.12152 Landau, Vishkin (1986)]","Landau, Vishkin",1986,https://dl.acm.org/doi/pdf/10.1145/12130.12152,,,,,,,,,O(log m + k),,https://dl.acm.org/doi/pdf/10.1145/12130.12152,O(n(log m + k))?,,,no,"n: length of text
m: length of pattern
k: number of allowable mismatches",m+n,https://dl.acm.org/doi/pdf/10.1145/12130.12152,0,CREW PRAM,120,,,,,,,,,0,,0,,0,1,n,,0,0,,Single string search algorithms try to find a place where a string (also called a pattern) is found within a larger string or text.,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,1,"All Occurrences, With Mismatches",,,,1,1,O(log m + k),,,"[https://www.sciencedirect.com/science/article/pii/0196677489900102 Landau, Vishkin (1989)]","Landau, Vishkin",1989,https://www.sciencedirect.com/science/article/pii/0196677489900102,,,,,,,,,O(log m + k),,https://www.sciencedirect.com/science/article/pii/0196677489900102,O(n(log m + k))?,,,no,"n: length of text
m: length of pattern
k: number of allowable mismatches",m+n,https://www.sciencedirect.com/science/article/pii/0196677489900102,0,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,n,,0,0,,Single string search algorithms try to find a place where a string (also called a pattern) is found within a larger string or text.,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,1,,,,,,,,,,,"Moussouni, Lavault ",1995,https://link.springer.com/chapter/10.1007/3-540-61576-8_93,,,,,,,,O(s + log N),O(s + log N),,,O(Ns + N log N),,,,"n: length of text
m: length of pattern
s >= m: piece size (s = n/N)",,,,MIMD hypercube,700,,,,,,,,,0,,0,,0,1,N,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,0.001,,,,,,,,,,,"Kim, Kang",2010,https://ieeexplore.ieee.org/iel5/4234/5572888/05547596.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Referenced here: https://link.springer.com/chapter/10.1007/978-3-642-29280-4_32,,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,0.001,,,,,,,,,,,"Kim, Kim, Kang",2011,https://ieeexplore.ieee.org/iel5/71/4359390/05733341.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Referenced here: https://link.springer.com/chapter/10.1007/978-3-642-29280-4_32,,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,1,,,,,,,,,,,"Raju, Vinayababu",2006,https://www.researchgate.net/profile/Viswanadha-Raju-Somalaraju/publication/254243824_Optimal_Parallel_algorithm_for_String_Matching_on_Mesh_Network_Structure/links/5757118908ae05c1ec16cdff/Optimal-Parallel-algorithm-for-String-Matching-on-Mesh-Network-Structure.pdf,,,,,,,,O(sqrt(K)),O(sqrt(K)),,,O(K^{3/2}),,,,K<=n/2,,,,2D mesh network structure,700,,,,,,,,,0,,0,,0,1,K (sqrt(K) by sqrt(K)),,0,0,Referenced here: https://link.springer.com/chapter/10.1007/978-3-642-29280-4_32,,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,0.001,,,,,,,,,,,"Raju, Babu, Raju, Madhavi",2007,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=af89c5e2b8c1f9a5bcf36304481e137d1719d828,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Referenced here: https://link.springer.com/chapter/10.1007/978-3-642-29280-4_32,,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,1,multistring search problem,,,,,,,,,,"Ferragina, Luccio",1999,https://link.springer.com/content/pdf/10.1007/PL00008259.pdf,,,,,,,,O((n log^2 n)/p) + O((gn log^2 n)/(p log(n/p))) + O((km/p)+k) + O(kg+(km/p)g),O((n log^2 n)/m + k)??,,,O(n log^2 n + km)??,,,,"n: length of the text
m: lenth of the patterns
k: number of patterns
p: number of processors
g: communication gap (BSP)",,,,BSP,400,,,,,,,,,0,,0,,0,1,m>=p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,1,multistring search problem,,,,,,,,,,"Ferragina, Luccio",1998,https://link.springer.com/content/pdf/10.1007/PL00008259.pdf,,,,,,,,O((n log^2 n)/p) + O((gn log^2 n)/(p log(n/p))) + O((km/p)log n) + O((km/p)g),O((n log^2 n)/p) + O(log n)??,,,O(n log^2 n) + O(km*log n)??,,,,"n: length of the text
m: lenth of the patterns
k: number of patterns
p: number of processors
g: communication gap (BSP)",,,,BSP,400,,,,,,,,,0,,0,,0,1,m<p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,1,,,,,,,,,,,"Takefuji, Tanaka, Lee",1992,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=148407,,,,,,,,O(1),O(1),,,O(nm),,,,"m: length of the text
n: length of the pattern",,,,neural network array,,,,,,,,,,0,,0,,0,1,O(nm),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,1,,,,,,,,,,,"Lee, Erçal",1997,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=645099,,,,,,,,O(1),O(1),,,O(nm),,,,"m: length of the text
n: length of the pattern",,,,2D reconfigurable mesh,700,,,,,,,,,0,,0,,0,1,(n - m+ 1) x m,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,1,,,,,,,,,,,"Lee, Erçal",1997,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=645099,,,,,,,,O(k),O(k),,,O(nm),,,,"m: length of the text
n: length of the pattern
k: minimum edit distance between T and P",,,,2D reconfigurable mesh,700,,,,,,,,,0,,1,,0,1,(m+n+1)(m+1),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,1,allows only the replacement operation in the calculation of the edit distance,,,,,,,,,,"Lee, Erçal",1997,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=645099,,,,,,,,O(1),O(1),,,O(n^2 m),,,,"m: length of the text
n: length of the pattern",,,,3D reconfigurable mesh,700,,,,,,,,,0,,1,,0,1,(n - m + 1) x m x (n - m + 1),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,1,,,,,,,,,,,"Czumaj, Galil, Gąsieniec, Park, Plandowski",1995,https://dl.acm.org/doi/pdf/10.1145/225058.225289,,,,,,,,O(log n),O(log n),,,O(n),,,,"n: length of text
m: length of pattern",,,,PRAM EREW,110,,,,,,,,,0,,0,,0,1,O(n / log n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,1,,,,,,,,,,,"Czumaj, Galil, Gąsieniec, Park, Plandowski",1995,https://dl.acm.org/doi/pdf/10.1145/225058.225289,,,,,,,,O(log n),O(log n),,,O(n log n),,,,"n: length of text
m: length of pattern",,,,hypercube (MIMD?),700,,,,,,,,,0,,0,,0,1,O(n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,1,pattern preprocessing only (for the GS83 seq algorithm),,,,,,,,,,"Crochemore, Rytter",1995,https://link.springer.com/content/pdf/10.1007/BF01190846.pdf,,,,,,,,,O(log^2 n),,,O(n),,,,n: length of x (text?),,,,PRAM CRCW,110,,,,,,,,,0,,0,,0,1,O(n / log^2 n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,1,pattern preprocessing only (for the GS83 seq algorithm),,,,,,,,,,"Crochemore, Rytter",1995,https://link.springer.com/content/pdf/10.1007/BF01190846.pdf,,,,,,,,,O(log^3 n),,,O(n),,,,n: length of x (text?),,,,PRAM CREW,120,,,,,,,,,0,,0,,0,1,O(n / log^3 n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,0.001,,,,,,,,,,,"Qu, Zhang, Fang, Liu (parallelized Aho-Corasick algorithm)",2016,https://gvpress.com/journals/IJHIT/vol9_no3/4.pdf,,,,,,,,,,,,,,,,,,,,shared memory with message passing??,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,0.001,,,,,,,,,,,"Alsaheel, Alqahtani, Alabdulatif",2013,"Analysis of parallel Boyer-Moore string search algorithm
AA Alsaheel, AH Alqahtani, AM Alabdulatif",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,1,,,,,,,,,,,"Alzoabi, Alosaimi, Bedaiwi",2013,https://ieeexplore.ieee.org/iel7/6601034/6618649/06618720.pdf,,,,,,,,O(n/k + m - 1),O(m),,,O(n + m),,,,"n: size of text
m: size of pattern
k: number of processors",,,,SIMD,,,,,,,,,,0,,0,,0,1,k,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,0.001,,,,,,,,,,,"Rasool, Khare (parallel KMP)",2012,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=c462464ab4c4b4f800f4a72f708015e23397f3f4,,,,,,,,O(n/p + n),O(n),,,O(n),,,,,,,,SIMD-SM,200,,,,,,,,,0,,0,,0,,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
,Multidimensional Array Search,1,"All Occurrences, With Mismatches",,,,1,1,O(d(d log n + k)),,,"[https://link.springer.com/chapter/10.1007/978-1-4612-3352-7_1 Amir, Landau (1990)]","Amir, Landau",1990,https://link.springer.com/chapter/10.1007/978-1-4612-3352-7_1,,,,,,,,O(d(d log n + k)),O(d(d log n + k)),,https://link.springer.com/chapter/10.1007/978-1-4612-3352-7_1,O(d*n^d*(d log n + k))?,,,no,"n: size of text
m: size of pattern
d: number of dimensions of arrays
k: number of allowable mismatches",m+n,https://link.springer.com/chapter/10.1007/978-1-4612-3352-7_1,0,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,n,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
23,Sequence Alignment,1,"Edit Distance, constant-size alphabet",,,,1,1,,,,[https://search.proquest.com/openview/efa7264fa824ce7768c53ccdcc6d1458/1?pq-origsite=gscholar&cbl=666313 Apostolico et al. (1990)],Apostolico et al.,1990,https://search.proquest.com/openview/efa7264fa824ce7768c53ccdcc6d1458/1?pq-origsite=gscholar&cbl=666313,,,,,,,,O(log m log n),O(log m log n),,https://search.proquest.com/openview/efa7264fa824ce7768c53ccdcc6d1458/1?pq-origsite=gscholar&cbl=666313,O(mn log n),,https://search.proquest.com/openview/efa7264fa824ce7768c53ccdcc6d1458/1?pq-origsite=gscholar&cbl=666313,no,"m: length of the shorter string
n: length of the longer string",,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(mn/log m),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
23,Sequence Alignment,1,"Edit Distance, constant-size alphabet",,,,1,1,,,,[https://search.proquest.com/openview/efa7264fa824ce7768c53ccdcc6d1458/1?pq-origsite=gscholar&cbl=666314 Apostolico et al. (1990)],Apostolico et al.,1990,https://search.proquest.com/openview/efa7264fa824ce7768c53ccdcc6d1458/1?pq-origsite=gscholar&cbl=666314,,,,,,,,O(log n (log log m)^2),O(log n (log log m)^2),,https://search.proquest.com/openview/efa7264fa824ce7768c53ccdcc6d1458/1?pq-origsite=gscholar&cbl=666313,O(mn log n),,https://search.proquest.com/openview/efa7264fa824ce7768c53ccdcc6d1458/1?pq-origsite=gscholar&cbl=666313,no,"m: length of the shorter string
n: length of the longer string",,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(mn/log log m),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
23,Sequence Alignment,1,"Edit Distance, constant-size alphabet",,,,1,1,,,,[https://kilthub.cmu.edu/articles/journal_contribution/A_fast_parallel_algorithm_to_determine_edit_distance/6587387/1 Mathies (1988)],Mathies,1988,https://kilthub.cmu.edu/articles/journal_contribution/A_fast_parallel_algorithm_to_determine_edit_distance/6587387/1,,,,,,,,O(log m log n),O(log m log n),,https://kilthub.cmu.edu/articles/journal_contribution/A_fast_parallel_algorithm_to_determine_edit_distance/6587387/1,O(mn log m log n),,https://kilthub.cmu.edu/articles/journal_contribution/A_fast_parallel_algorithm_to_determine_edit_distance/6587387/1,no,"m: length of the shorter string
n: length of the longer string",,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(mn),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
23,Sequence Alignment,0.001,,,,,,,,,,,"ZHANG, QIAO, LIU",2002,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1173568,,,,,,,,,,,,,,,,,,,,MPI (on a DAWNING 2000-I),,,,,,,,,,,,,,,,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
25,Line Clipping,0.001,Convex Polygonal Window,,,,1,1,O(n/p)?,,,[https://dl.acm.org/doi/pdf/10.1145/357332.357333 Liang. Barsky (1984)],Liang. Barsky,1984,https://dl.acm.org/doi/pdf/10.1145/357332.357333,,,,,,,,O(n/p)?,O(1),,,O(n)?,,,no,"n: number of lines
p: number of processors",n,,,CREW PRAM?,,,,,,,,,,0,,0,,0,1,p,,0,0,,"line clipping is the process of removing lines or portions of lines outside an area
 of interest. Typically; any line or part thereof which is outside of the viewing
 area is removed.",,,,,,,,,,,,,,,,,,,,,,,
25,Line Clipping,0.001,Convex Polygonal Window,,,,1,1,O(n/p)?,,,[https://open.library.ubc.ca/soa/cIRcle/collections/ubctheses/831/items/1.0096928 Tran (1986)],Tran,1986,https://open.library.ubc.ca/soa/cIRcle/collections/ubctheses/831/items/1.0096928,,,,,,,,O(n/p)?,O(1),,,O(n)?,,,no,"n: number of lines
p: number of processors",n,,,SIMD,,,,,,,,,,0,,0,,0,1,p,,0,0,,"line clipping is the process of removing lines or portions of lines outside an area
 of interest. Typically; any line or part thereof which is outside of the viewing
 area is removed.",,,,,,,,,,,,,,,,,,,,,,,
25,Line Clipping,0.001,Convex Polygonal Window,,,,1,1,O(n/p)?,,,"[http://www.cs.engr.uky.edu/~cheng/PUBL/Paper_p_clip.pdf Cheng, Chung-Shang (2008)]","Cheng, Chung-Shang",2008,http://www.cs.engr.uky.edu/~cheng/PUBL/Paper_p_clip.pdf,,,,,,,,O(n/p)?,O(1),,http://www.cs.engr.uky.edu/~cheng/PUBL/Paper_p_clip.pdf,O(n)?,,,no,"n: number of lines
p: number of processors",n,,,PIPA?,,,,,,,,,,0,,0,,0,1,p,,0,0,,"line clipping is the process of removing lines or portions of lines outside an area
 of interest. Typically; any line or part thereof which is outside of the viewing
 area is removed.",,,,,,,,,,,,,,,,,,,,,,,
25,Line Clipping,0.001,Convex Polygonal Window,,,,1,1,O(n/p)?,,,[https://link.springer.com/chapter/10.1007/978-3-030-86976-2_1 Skala (2021)],Skala,2021,https://link.springer.com/chapter/10.1007/978-3-030-86976-2_1,,,,,,,,O(n/p)?,O(1),,,O(n),,,no,"n: number of lines
p: number of processors",n,,,CREW PRAM?,,,,,,,,,,0,,0,,0,1,p,,0,0,,"line clipping is the process of removing lines or portions of lines outside an area
 of interest. Typically; any line or part thereof which is outside of the viewing
 area is removed.",,,,,,,,,,,,,,,,,,,,,,,
28,Maximum Cardinality Matching,1,Bipartite Graph MCM,,,,1,1,O(n^1.5 log n),,,"[https://users.umiacs.umd.edu/~vishkin/TEACHING/4CLASS/SV82-maxflow.pdf Shiloach, Vishkin (1982)]","Shiloach, Vishkin",1982,https://users.umiacs.umd.edu/~vishkin/TEACHING/4CLASS/SV82-maxflow.pdf,,,,,,,,O(n^1.5 log n),O(n^1.5 log n),,https://users.umiacs.umd.edu/~vishkin/TEACHING/4CLASS/SV82-maxflow.pdf,O(m*sqrt(n) log n),,,no,"n: number of vertices
m: number of edges",n,,,CREW PRAM?,,,,,,,,,,0,,0,,0,1,m/n,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
28,Maximum Cardinality Matching,1,Bipartite Graph MCM,,,,1,1,O(n log n log log n),,,"[https://www.sciencedirect.com/science/article/pii/0020019087901931 Kim, Chwa (1987)]","Kim, Chwa",1987,https://www.sciencedirect.com/science/article/pii/0020019087901931,,,,,,,,O(n log n log log n),O(n log n log log n),,https://www.sciencedirect.com/science/article/pii/0020019087901931,O(n^4 log log n),,,no,"n: number of vertices
m: number of edges",n,,,CREW PRAM?,,,,,,,,,,0,,0,,0,1,O(n^3/log n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
28,Maximum Cardinality Matching,1,General Graph MCM,,,,1,1,O(log^3 n),,,"[https://dl.acm.org/doi/10.1145/22145.22148 Karp, Upfal, Widgerson (1985)]","Karp, Upfal, Widgerson",1985,https://dl.acm.org/doi/10.1145/22145.22148,,,,,,,,O(log^3 n),O(log^3 n),,https://dl.acm.org/doi/10.1145/22145.22148,O(n^6.5 log^3 n),,,no,"n: number of vertices
m: number of edges",n,,,CREW PRAM?,,,,,,,,,,1,Las Vegas,0,,0,1,O(n^6.5),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
28,Maximum Cardinality Matching,1,General Graph MCM,,,,1,1,O(log^3 n),,,[https://www.annualreviews.org/doi/pdf/10.1146/annurev.cs.01.060186.001213 Galil (1986)],Galil,1986,https://www.annualreviews.org/doi/pdf/10.1146/annurev.cs.01.060186.001213,,,,,,,,O(log^3 n),O(log^3 n),,https://www.annualreviews.org/doi/pdf/10.1146/annurev.cs.01.060186.001213,O(n^(1+omega) log^3 n),,,no,"n: number of vertices
m: number of edges
omega: exponent on matrix multiplication complexity",n,,,CREW PRAM,120,,1,n: 1,O(1),Derived: dynamic programming and making use of Monge matrix properties,1,0,,1,Monte Carlo,0,,0,1,O(n^(1+omega)),,0,0,,,,,,,,,,,,,63,,,,,,,,,1,,,Combinatorics
28,Maximum Cardinality Matching,1,General Graph MCM,,,,1,1,O(log^2 n),,,[https://www.annualreviews.org/doi/pdf/10.1146/annurev.cs.01.060186.001213 Galil (1986)],Galil,1986,https://www.annualreviews.org/doi/pdf/10.1146/annurev.cs.01.060186.001213,,,,,,,,O(log^2 n),O(log^2 n),,https://www.annualreviews.org/doi/pdf/10.1146/annurev.cs.01.060186.001213,O(mn^(1+omega) log^3 n),,,no,"n: number of vertices
m: number of edges
omega: exponent on matrix multiplication complexity",n,,,CREW PRAM,120,,1,n: 1,O(1),Derived: dynamic programming and making use of Monge matrix properties,1,0,,1,Monte Carlo,0,,0,1,O(mn^(1+omega)),,0,0,,,,,,,,,,,,,63,,,,,,,,,1,,,Combinatorics
28,Maximum Cardinality Matching,1,General Graph MCM,,,,1,1,,,,[https://ieeexplore.ieee.org/document/395918 Andrews et al. (1995)],Andrews et al.,1995,https://ieeexplore.ieee.org/document/395918,,,,,,,,O(log^3 n),O(log^3 n),,https://ieeexplore.ieee.org/document/395918,O(n log n),,https://ieeexplore.ieee.org/document/395918,no,n: number of intervals representing the graph,n,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,O(n/log^2 n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
28,Maximum Cardinality Matching,1,General Graph MCM,,,,1,1,,,,[https://ieeexplore.ieee.org/document/395918 Andrews et al. (1995)],Andrews et al.,1995,https://ieeexplore.ieee.org/document/395918,,,,,,,,O(log^3 n),O(log^3 n),,https://ieeexplore.ieee.org/document/395918,O(n log^3 n),,https://ieeexplore.ieee.org/document/395918,no,n: number of intervals representing the graph,n,,,n-Hypercube,700,,,,,,,,,0,,0,,0,1,O(n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
28,Maximum Cardinality Matching,1,Interval Graph?,,,,1,1,,,,[https://ieeexplore.ieee.org/document/395918 Andrews et al. (1995)],Andrews et al.,1995,https://ieeexplore.ieee.org/document/395918,,,,,,,,O(log n),O(log n),,https://ieeexplore.ieee.org/document/395918,O(n log n),,https://ieeexplore.ieee.org/document/395918,no,n: number of intervals representing the graph,n,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,O(n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
28,Maximum Cardinality Matching,1,Interval Graph?,,,,1,1,,,,[https://ieeexplore.ieee.org/document/395918 Andrews et al. (1995)],Andrews et al.,1995,https://ieeexplore.ieee.org/document/395918,,,,,,,,O(log n log log n),O(log n log log n),,https://ieeexplore.ieee.org/document/395918,O(n log n log log n),,https://ieeexplore.ieee.org/document/395918,no,n: number of intervals representing the graph,n,,,n-Hypercube,700,,,,,,,,,0,,0,,0,1,O(n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
28,Maximum Cardinality Matching,0.001,Bipartite Graph MCM,,,,,,,,,[https://www.sciencedirect.com/science/article/pii/0743731584900042 Sahni et al. (1984)],Sahni et al.,1984,https://www.sciencedirect.com/science/article/pii/0743731584900042,,,,,,,,O(log^2 n),O(log^2 n),,https://www.sciencedirect.com/science/article/pii/S0167819107001329,O(n log^2 n),,https://www.sciencedirect.com/science/article/pii/S0167819107001329,no,,,,,PRAM,,,,,,,,,,0,,0,,0,1,O(n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
28,Maximum Cardinality Matching,0.001,,,,,,,,,,,Pawagi et al.,1987,,,,,,,,,O(log^2 n),O(log^2 n),,https://www.sciencedirect.com/science/article/pii/S0167819107001329,O(n log^2 n),,https://www.sciencedirect.com/science/article/pii/S0167819107001329,no,,,,,PRAM,,,,,,,,,,0,,0,,0,1,O(n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
28,Maximum Cardinality Matching,0,Planar Bipartite Graph Perfect Matching,,,,,,,,,"[https://www.sciencedirect.com/science/article/pii/S0022000097914938/pdf Henzinger, Klein, Rao, Subramania (1997)]","Henzinger, Klein, Rao, Subramania",1997,https://www.sciencedirect.com/science/article/pii/S0022000097914938/pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
31,SDD Systems Solver,1,Exact Laplacian Solver,,,,1,1,,,,,Blelloch et al.,2011,https://www.cs.cmu.edu/afs/cs/user/glmiller/www/Publications/Papers/spaa31r-blelloch.pdf,,,,,,,,O(m^(1/3 + theta) log 1/epsilon),O(m^(1/3 + theta) log 1/epsilon),,https://www.cs.cmu.edu/afs/cs/user/glmiller/www/Publications/Papers/spaa31r-blelloch.pdf,O(m polylog(n) log 1/epsilon),,https://www.cs.cmu.edu/afs/cs/user/glmiller/www/Publications/Papers/spaa31r-blelloch.pdf,no,,,,,PRAM,,,,,,,,,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
31,SDD Systems Solver,1,Exact Laplacian Solver,,,,1,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
31,SDD Systems Solver,1,Exact Laplacian Solver,,,,1,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
31,SDD Systems Solver,1,Exact Laplacian Solver,,,,1,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,Graph Cycle Detection,1,Undirected Graph,,,,1,1,O(log^2(n)),,,[https://apps.dtic.mil/sti/citations/ADA056888 Savage (1977)],Savage,1977,https://apps.dtic.mil/sti/citations/ADA056888,,,,,,,,O(log^2(n)),O(log^2(n)),,https://apps.dtic.mil/sti/citations/ADA056888,O(n^2 log^2(n))?,,,no,"n: number of vertices
m: number of edges",n,,,CREW PRAM?,,,,,,,,,,0,,0,,0,1,O(n^2),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
,Graph Cycle Detection,1,Directed Graph,,,,1,1,O(log^2(n)),,,[https://apps.dtic.mil/sti/citations/ADA056888 Savage (1977)],Savage,1977,https://apps.dtic.mil/sti/citations/ADA056888,,,,,,,,O(log^2(n)),O(log^2(n)),,https://apps.dtic.mil/sti/citations/ADA056888,O(n^3 log^2(n))?,,,no,"n: number of vertices
m: number of edges",n,,,CREW PRAM?,,,,,,,,,,0,,0,,0,1,O(n^3),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
,Graph Cycle Detection,0.001,,,,,1,1,O(n/p + log p),,,[https://digitalrepository.unm.edu/cgi/viewcontent.cgi?article=1044&context=ece_rpts Bader (1999)],Bader,1999,https://digitalrepository.unm.edu/cgi/viewcontent.cgi?article=1044&context=ece_rpts,,,,,,,,O(n/p + log p),O(n^(3/4)),,,O(n)?,,,no,"n: number of vertices
m: number of edges
p: number of processors; p^4≤n",n,,,distributed network,700,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
,Cycle Counting,0,5-cycle Counting,,,,1,1,,,,"[https://dl.acm.org/doi/full/10.1145/3556541 Shi, Huang, Shun (2022)]","Shi, Huang, Shun",2022,https://dl.acm.org/doi/full/10.1145/3556541,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
33,Generating Random Permutations,1,General Permutations,,,,,,,,,[https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=4568176 Reif (1985)],Reif,1985,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=4568176,,,,,,,,O(log n),O(log n),,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=4568176,O(n),,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=4568176,no,n: number of elements to permute,,,,CRCW PRAM,130,,,,,,,,,1,,0,,0,1,O(n/log n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
33,Generating Random Permutations,1,General Permutations,,,,,,,,,[https://epubs.siam.org/doi/10.1137/0218041 Rajasekaran et al. (1989)],Rajasekaran et al.,1989,https://epubs.siam.org/doi/10.1137/0218041,,,,,,,,O(log n/log log n),O(log n/log log n),,https://link.springer.com/article/10.1007/PL00009206,O(n log n),,https://link.springer.com/article/10.1007/PL00009206,no,n: number of elements to permute,,,,CRCW PRAM,130,,,,,,,,,1,,0,,0,1,O(n(log log n)^2/log n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
33,Generating Random Permutations,1,General Permutations,,,,,,,,,[https://link.springer.com/article/10.1007/PL00009206 Czumaj et al. (1998)],Czumaj et al.,1998,https://link.springer.com/article/10.1007/PL00009206,,,,,,,,O(log log n),O(log log n),,https://link.springer.com/article/10.1007/PL00009206,O(n log log n),,https://link.springer.com/article/10.1007/PL00009206,no,n: number of elements to permute,,,,CREW PRAM,120,,,,,,,,,1,,0,,0,1,O(n^(1 + 1/c * log log n)),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
33,Generating Random Permutations,1,General Permutations,,,,,,,,,[https://link.springer.com/article/10.1007/PL00009206 Czumaj et al. (1998)],Czumaj et al.,1998,https://link.springer.com/article/10.1007/PL00009206,,,,,,,,O(log n),O(log n),,https://link.springer.com/article/10.1007/PL00009206,O(n log n),,https://link.springer.com/article/10.1007/PL00009206,no,n: number of elements to permute,,,,EREW PRAM,110,,,,,,,,,1,,0,,0,1,O(n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
33,Generating Random Permutations,1,General Permutations,,,,,,,,,[https://link.springer.com/chapter/10.1007/3-540-54233-7_151 Hagerup (1991)],Hagerup,1991,https://link.springer.com/chapter/10.1007/3-540-54233-7_151,,,,,,,,O(1),O(1),,https://link.springer.com/chapter/10.1007/3-540-54233-7_151,O(n * polylog(n)),,https://link.springer.com/chapter/10.1007/3-540-54233-7_151,no,n: number of elements to permute,,,,CRCW PRAM,130,,,,,,,,,1,,0,,0,1,O(n * polylog(n)),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
33,Generating Random Permutations,1,General Permutations,,,,,,,,,[https://link.springer.com/chapter/10.1007/3-540-54233-7_152 Hagerup (1991)],Hagerup,1991,https://link.springer.com/chapter/10.1007/3-540-54233-7_152,,,,,,,,O(log*n),O(log*n),,https://link.springer.com/chapter/10.1007/3-540-54233-7_151,O(n),,https://link.springer.com/chapter/10.1007/3-540-54233-7_151,no,n: number of elements to permute,,,,CRCW PRAM,130,,,,,,,,,1,,0,,0,1,O(n/log*n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
33,Generating Random Permutations,1,General Permutations,,,,,,,,,[https://link.springer.com/chapter/10.1007/3-540-54233-7_153 Hagerup (1991)],Hagerup,1991,https://link.springer.com/chapter/10.1007/3-540-54233-7_153,,,,,,,,O(log^2 n),O(log^2 n),,https://link.springer.com/chapter/10.1007/3-540-54233-7_152,O(n log n),,https://link.springer.com/chapter/10.1007/3-540-54233-7_152,no,n: number of elements to permute,,,,EREW PRAM,110,,,,,,,,,1,,0,,0,1,O(n/log n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
33,Generating Random Permutations,1,General Permutations,,,,,,,,,[https://link.springer.com/chapter/10.1007/3-540-54233-7_154 Hagerup (1991)],Hagerup,1991,https://link.springer.com/chapter/10.1007/3-540-54233-7_154,,,,,,,,O(log n),O(log n),,https://link.springer.com/chapter/10.1007/3-540-54233-7_152,O(n log n),,https://link.springer.com/chapter/10.1007/3-540-54233-7_152,no,n: number of elements to permute,,,,EREW PRAM,110,,,,,,,,,1,,0,,0,1,O(n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
33,Generating Random Permutations,1,General Permutations,,,,,,,,,[https://ieeexplore.ieee.org/document/1676138 Kruskal (1983)],Kruskal,1983,https://ieeexplore.ieee.org/document/1676138,,,,,,,,O(log n log log n),O(log n log log n),,https://link.springer.com/chapter/10.1007/3-540-54233-7_151,O(n log n),,https://link.springer.com/chapter/10.1007/3-540-54233-7_151,no,n: number of elements to permute,,,,CREW PRAM,120,,,,,,,,,1,,0,,0,1,O(n/log log n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
33,Generating Random Permutations,1,General Permutations,,,,,,,,,[https://ieeexplore.ieee.org/document/63478 Berkman et al. (1989)],Berkman et al.,1989,https://ieeexplore.ieee.org/document/63478,,,,,,,,O(log n log log log n),O(log n log log log n),,https://link.springer.com/chapter/10.1007/3-540-54233-7_151,O(n log n),,https://link.springer.com/chapter/10.1007/3-540-54233-7_151,no,n: number of elements to permute,,,,CREW PRAM,120,,,,,,,,,1,,0,,0,1,O(n/log log log n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
33,Generating Random Permutations,1,General Permutations,,,,,,,,,[https://www.sciencedirect.com/science/article/pii/0304397595001980 Alonso et al. (1996)],Alonso et al.,1996,https://www.sciencedirect.com/science/article/pii/0304397595001980,,,,,,,,O(log^2 n),O(log^2 n),,https://www.sciencedirect.com/science/article/pii/0304397595001980,O(n log^2 n),,https://www.sciencedirect.com/science/article/pii/0304397595001980,no,n: number of elements to permute,,,,PRAM,,,,,,,,,,1,,0,,0,1,O(n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
33,Generating Random Permutations,1,General Permutations,,,,,,,,,[https://dl.acm.org/doi/pdf/10.1145/103418.103453 Matias et al. (1991)],Matias et al.,1991,https://dl.acm.org/doi/pdf/10.1145/103418.103453,,,,,,,,O(log*n),O(log*n),,https://link.springer.com/chapter/10.1007/3-540-54233-7_151,O(n),,https://link.springer.com/chapter/10.1007/3-540-54233-7_151,no,n: number of elements to permute,,,,CRCW PRAM,130,,,,,,,,,1,,0,,0,1,O(n),,,,,,,,,,,,,,,,,,,,,,,,,,,,
34,Convex Optimization (Non-linear),0,,,,,,,,,,,"Richtárik, Takáč",2016,https://link.springer.com/content/pdf/10.1007/s10107-015-0901-6.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
34,Convex Optimization (Non-linear),0,,,,,,,,,,,"Recht, Re, Wright, Niu",2011,https://proceedings.neurips.cc/paper_files/paper/2011/file/218a0aefd1d1a4be65601cc6ddc1520e-Paper.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
34,Convex Optimization (Non-linear),0.001,,,,,,,,,,,"Cevher, Becker, Schmidt (Consensus ADMM - first order mehtod)",2014,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6879615,,,,,,,,O(n*n/m),O(n*n/m),,,O(n^2),,,,,,,,,,,,,,,,,,,,0,,0,1,m <= n,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
34,Convex Optimization (Non-linear),0,,,,,,,,,,,"Han, Lou",1988,https://epubs.siam.org/doi/pdf/10.1137/0326019,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,m,,,,,,,,,,,,,,,,,,,,,,,,,,,,
34,Convex Optimization (Non-linear),0,,,,,,,,,,,"Woodworth, Wang, Smith, McMahan, Srebro",2018,https://proceedings.neurips.cc/paper_files/paper/2018/file/3ec27c2cff04bc5fd2586ca36c62044e-Paper.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
34,Convex Optimization (Non-linear),0,,,,,,,,,,,Nemirovski,1994,https://www.sciencedirect.com/science/article/pii/S0885064X84710259/pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
34,Convex Optimization (Non-linear),0,,,,,,,,,,,"Bubeck, Jiang, Lee, Li, Sidford",2019,https://proceedings.neurips.cc/paper_files/paper/2019/file/3c0cd9bcd0686e8bc0a9047eae120cc5-Paper.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
34,Convex Optimization (Non-linear),0,,,,,,,,,,,"Daneshmand, Facchinei, Kungurtsev, Scutari",2015,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7113892,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
34,Convex Optimization (Non-linear),0,,,,,,,,,,,"Necoara, Clipici",2013,https://arxiv.org/pdf/1302.3092.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
34,Convex Optimization (Non-linear),0,,,,,,,,,,,"Carmon, Jambulapati, Jin, Lee, Liu, Sidford, Tian",2023,https://arxiv.org/pdf/2301.00457.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
34,Convex Optimization (Non-linear),0,,,,,,,,,,,"Facchinei, Scutari",2015,https://ieeexplore.ieee.org/iel7/78/4359509/07029716.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
34,Convex Optimization (Non-linear),0,,,,,,,,,,,Chen,1987,https://minds.wisconsin.edu/bitstream/handle/1793/58898/TR731.pdf?sequence=1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
37,All Permutations,1,,,,,,,O(n!/k * n),,,[https://academic.oup.com/comjnl/article/30/5/433/366802 Akl (1987)],Akl,1987,https://academic.oup.com/comjnl/article/30/5/433/366802,,,,,,,,O(n!/k * n),O(n),,https://academic.oup.com/comjnl/article/30/5/433/366802,O(n! * n),,https://link.springer.com/chapter/10.1007/3-540-54233-7_151,no,"n: number of elements to permute
k: number of processors",,,,SIMD,,,,,,,,,,0,,0,,0,1,O(k),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
40,Maximum-Weight Matching,0.001,Bipartite Maximum-Weight Matching,,,,1,1,O(n/w),,,"[https://www.sciencedirect.com/science/article/abs/pii/S0020019005003108 Fayyazi, Kaeli, Meleis (2006)]","Fayyazi, Kaeli, Meleis",2006,https://www.sciencedirect.com/science/article/abs/pii/S0020019005003108,,,,0,0,2.6,n: 2.6,O(n/w),O(1)??,,,O(n^6)?,,,no,"n: number of vertices
m: number of edges
w: processor parameter; w≥1",n,,,CRCW PRAM?,,,1,n: 1,O(1),Derived: dynamic programming and making use of Monge matrix properties,1,0,,0,,0,,0,1,"O(n^(max(2w, 4+w)))",,0,0,,"In computer science, the maximum weight matching problem is the problem of finding, in a weighted graph, a matching in which the sum of weights is maximized.",,,,,,,,,,,63,,,,,,,,,1,,,Combinatorics
40,Maximum-Weight Matching,1,Bipartite Maximum-Weight Matching (weights of polynomial magnitude),,,,1,1,O(log^3 n),,,[https://www.annualreviews.org/doi/pdf/10.1146/annurev.cs.01.060186.001213 Galil (1986)],Galil,1986,https://www.annualreviews.org/doi/pdf/10.1146/annurev.cs.01.060186.001213,,,,,,,,O(log^3 n),O(log^3 n),,https://www.annualreviews.org/doi/pdf/10.1146/annurev.cs.01.060186.001213,O(n^(2+omega) log^3 n),,,no,"n: number of vertices
m: number of edges
omega: exponent on matrix multiplication complexity",n,,,CREW PRAM,120,,1,n: 1,O(1),Derived: dynamic programming and making use of Monge matrix properties,1,0,,1,Monte Carlo,0,,0,1,O(n^(2+omega)),,0,0,,"In computer science, the maximum weight matching problem is the problem of finding, in a weighted graph, a matching in which the sum of weights is maximized.",,,,,,,,,,,63,,,,,,,,,1,,,Combinatorics
40,Maximum-Weight Matching,1,General Maximum-Weight Matching,,,,1,1,O(n^3/p + n^2 log n),,,"[https://ieeexplore.ieee.org/abstract/document/143503 Osiakwan, Akl (1990)]","Osiakwan, Akl",1990,https://ieeexplore.ieee.org/abstract/document/143503,,,,0,0,2.6,n: 2.6,O(n^3/p + n^2 log n),O(n^2 log n),,https://ieeexplore.ieee.org/abstract/document/143503,O(n^3),,https://ieeexplore.ieee.org/abstract/document/143503,yes,"n: number of vertices
m: number of edges
p: number of processors; p≤n",n,,,EREW PRAM,110,,1,n: 1,O(1),Derived: dynamic programming and making use of Monge matrix properties,1,0,,0,,0,,0,1,p,,0,0,,"In computer science, the maximum weight matching problem is the problem of finding, in a weighted graph, a matching in which the sum of weights is maximized.",,,,,,,,,,,63,,,,,,,,,1,,,Combinatorics
40,Maximum-Weight Matching,0,General Maximum-Weight Matching,,,,1,1,,,,"[https://dspace.jaist.ac.jp/dspace/bitstream/10119/4915/1/C3966.pdf Uehara, Chen (2000)]","Uehara, Chen",2000,https://dspace.jaist.ac.jp/dspace/bitstream/10119/4915/1/C3966.pdf,,,,,,,,,,,,,,,,"n: number of vertices
m: number of edges",n,,,,,,1,n: 1,O(1),Derived: dynamic programming and making use of Monge matrix properties,1,0,,0,,0,,0,1,,,0,0,,"In computer science, the maximum weight matching problem is the problem of finding, in a weighted graph, a matching in which the sum of weights is maximized.",,,,,,,,,,,63,,,,,,,,,1,,,Combinatorics
40,Maximum-Weight Matching,1,General Maximum-Weight Matching (weights of polynomial magnitude),,,,1,1,O(log^3 n),,,[https://www.annualreviews.org/doi/pdf/10.1146/annurev.cs.01.060186.001213 Galil (1986)],Galil,1986,https://www.annualreviews.org/doi/pdf/10.1146/annurev.cs.01.060186.001213,,,,,,,,O(log^3 n),O(log^3 n),,https://www.annualreviews.org/doi/pdf/10.1146/annurev.cs.01.060186.001213,O(n^(3+omega) log^3 n),,,no,"n: number of vertices
m: number of edges
omega: exponent on matrix multiplication complexity",n,,,CREW PRAM,120,,1,n: 1,O(1),Derived: dynamic programming and making use of Monge matrix properties,1,0,,1,Monte Carlo,0,,0,1,O(n^(3+omega)),,0,0,,"In computer science, the maximum weight matching problem is the problem of finding, in a weighted graph, a matching in which the sum of weights is maximized.",,,,,,,,,,,63,,,,,,,,,1,,,Combinatorics
41,Constructing Eulerian Trails in a Graph,1,Constructing Eulerian Trails in a Graph,,,,1,1,O(log V),,,"[https://www.sciencedirect.com/science/article/pii/0022000084900035 Atallah, Vishkin (1984)]","Atallah, Vishkin",1984,https://www.sciencedirect.com/science/article/pii/0022000084900035,,,,,,,,O(log V),O(log V),,https://www.sciencedirect.com/science/article/pii/0022000084900035,O(E log V),,,no,"V: number of vertices
E: number of edges",V,,,CRCW PRAM,130,,#N/A,n: 1,O(1),Derived: dynamic programming and making use of Monge matrix properties,1,0,,0,,0,,0,1,O(E),,0,0,,"In graph theory, an Eulerian trail (or Eulerian path) is a trail in a finite graph that visits every edge exactly once (allowing for revisiting vertices). Similarly, an Eulerian circuit or Eulerian cycle is an Eulerian trail that starts and ends on the same vertex.",,,,,,,,,,,63,,,,,,,,,1,,,Combinatorics
41,Constructing Eulerian Trails in a Graph,1,Constructing Eulerian Trails in a Graph,,,,1,1,O(log V),,,"[https://dl.acm.org/doi/abs/10.1145/800057.808688 Awerbuch, Israeli, Shiloach (1984)]","Awerbuch, Israeli, Shiloach",1984,https://dl.acm.org/doi/abs/10.1145/800057.808688,,,,,,,,O(log V),O(log V),,https://dl.acm.org/doi/abs/10.1145/800057.808688,O(E log V),,,no,"V: number of vertices
E: number of edges",V,,,CRCW PRAM?,,,#N/A,n: 1,O(1),Derived: dynamic programming and making use of Monge matrix properties,1,0,,0,,0,,0,1,O(E),,0,0,,"In graph theory, an Eulerian trail (or Eulerian path) is a trail in a finite graph that visits every edge exactly once (allowing for revisiting vertices). Similarly, an Eulerian circuit or Eulerian cycle is an Eulerian trail that starts and ends on the same vertex.",,,,,,,,,,,63,,,,,,,,,1,,,Combinatorics
41,Constructing Eulerian Trails in a Graph,1,Constructing Eulerian Trails in a Graph,,,,1,1,O(log^2 V),,,"[https://www.worldscientific.com/doi/abs/10.1142/S0129626493000265 Caceres, Deo, Sastry, Szwarcfiter (1993)]","Caceres, Deo, Sastry, Szwarcfiter",1993,https://www.worldscientific.com/doi/abs/10.1142/S0129626493000265,,,,,,,,O(log^2 V),O(log^2 V),,,O(E log V),,,no,"V: number of vertices
E: number of edges",V,,,CREW PRAM,120,,#N/A,n: 1,O(1),Derived: dynamic programming and making use of Monge matrix properties,1,0,,0,,0,,0,1,O(E/log V),,0,0,,"In graph theory, an Eulerian trail (or Eulerian path) is a trail in a finite graph that visits every edge exactly once (allowing for revisiting vertices). Similarly, an Eulerian circuit or Eulerian cycle is an Eulerian trail that starts and ends on the same vertex.",,,,,,,,,,,63,,,,,,,,,1,,,Combinatorics
41,Constructing Eulerian Trails in a Graph,1,Constructing Eulerian Trails in a Graph,,,,1,1,O(log V),,,"[https://www.osti.gov/etdeweb/biblio/20142318 Park, Ryu (1999)]","Park, Ryu",1999,https://www.osti.gov/etdeweb/biblio/20142318,,,,,,,,O(log V),O(log V),,https://www.osti.gov/etdeweb/biblio/20142318,O(E log V),,,no,"V: number of vertices
E: number of edges",V,,,Priority CRCW PRAM,133,,#N/A,n: 1,O(1),Derived: dynamic programming and making use of Monge matrix properties,1,0,,1,Las Vegas,0,,0,1,O(E),,0,0,,"In graph theory, an Eulerian trail (or Eulerian path) is a trail in a finite graph that visits every edge exactly once (allowing for revisiting vertices). Similarly, an Eulerian circuit or Eulerian cycle is an Eulerian trail that starts and ends on the same vertex.",,,,,,,,,,,63,,,,,,,,,1,,,Combinatorics
41,Constructing Eulerian Trails in a Graph,0.001,Constructing Eulerian Trails in a Graph,,,,1,1,,,,[https://onlinelibrary.wiley.com/doi/abs/10.1002/int.10061 Tambouratzis (2002)],Tambouratzis,2002,https://onlinelibrary.wiley.com/doi/abs/10.1002/int.10061,,,,,,,,,,,,,,,no,"V: number of vertices
E: number of edges",V,,,,,,#N/A,n: 1,O(1),Derived: dynamic programming and making use of Monge matrix properties,1,0,,0,,0,,0,1,,,0,0,,"In graph theory, an Eulerian trail (or Eulerian path) is a trail in a finite graph that visits every edge exactly once (allowing for revisiting vertices). Similarly, an Eulerian circuit or Eulerian cycle is an Eulerian trail that starts and ends on the same vertex.",,,,,,,,,,,63,,,,,,,,,1,,,Combinatorics
41,Constructing Eulerian Trails in a Graph,1,Constructing Eulerian Trails in a Graph,,,,1,1,O((E log p)/p)?,,,"[https://ieeexplore.ieee.org/document/1250336 Caceres, Nasu (2003)]","Caceres, Nasu",2003,https://ieeexplore.ieee.org/document/1250336,,,,,,,,O((E log p)/p)?,O(log V),,https://ieeexplore.ieee.org/document/1250336,O(E log p),,,no,"V: number of vertices
E: number of edges
p: number of processors",V,,,BSP,400,,#N/A,n: 1,O(1),Derived: dynamic programming and making use of Monge matrix properties,1,0,,0,,0,,0,1,p,,0,0,,"In graph theory, an Eulerian trail (or Eulerian path) is a trail in a finite graph that visits every edge exactly once (allowing for revisiting vertices). Similarly, an Eulerian circuit or Eulerian cycle is an Eulerian trail that starts and ends on the same vertex.",,,,,,,,,,,63,,,,,,,,,1,,,Combinatorics
43,Line Drawing,1,Single Line Drawing,,,,1,1,O(n/p)?,,,[https://ieeexplore.ieee.org/abstract/document/59037 Pang (1990)],Pang,1990,https://ieeexplore.ieee.org/abstract/document/59037,,,,,,,,O(n/p)?,O(1)?,,,O(n),,,no,"n: number of pixels the line goes through
p: number of processors",n,,,SIMD,,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
43,Line Drawing,1,Single Line Drawing,,,,1,1,O(n/p),,,[https://ieeexplore.ieee.org/document/59038 Wright (1990)],Wright,1990,https://ieeexplore.ieee.org/document/59038,,,,,,,,O(n/p),O(1),,,O(n),,,no,"n: number of pixels the line goes through
p: number of processors",n,,,MIMD,,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
43,Line Drawing,1,Single Line Drawing,,,,1,1,O(n/p)?,,,"[https://link.springer.com/chapter/10.1007/3-540-56346-6_34 Graham, Iyengar, Zheng (1992)]","Graham, Iyengar, Zheng",1992,https://link.springer.com/chapter/10.1007/3-540-56346-6_34,,,,,,,,O(n/p)?,O(1)?,,,O(n),,,no,"n: number of pixels the line goes through
p: number of processors",n,,,MIMD,,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
43,Line Drawing,0.001,,,,,1,1,,,,"[https://ieeexplore.ieee.org/abstract/document/874642 Marti, Velasco (2000)]","Marti, Velasco",2000,https://ieeexplore.ieee.org/abstract/document/874642,,,,,,,,,,,,,,,,n: number of pixels the line goes through,n,,,Memory-Processor Array?,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
43,Line Drawing,0.001,Multiple Constant-Sized Line Segments Drawing,,,,1,1,,,,"[https://link.springer.com/chapter/10.1007/3-540-56346-6_34 Graham, Iyengar, Zheng (1992)]","Graham, Iyengar, Zheng",1992,https://link.springer.com/chapter/10.1007/3-540-56346-6_34,,,,,,,,,,,,,,,no,"n: number of lines, each of constant size?",n,,,SIMD,,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
44,Polygon Clipping,0,,,,,,,,,,,Puri,2015,https://scholarworks.gsu.edu/cgi/viewcontent.cgi?article=1099&context=cs_diss,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
48,Root Computation,0.001,General Root Computation,,approximates roots of polynomial that only has real roots,,,,,,,,"Narendran, Tiwari",1992,https://dl.acm.org/doi/pdf/10.1145/140901.140920,,,,,,,,$O(n^2(\log{n} + \log^2{X}))$,,,,,,,,"$n$: degree of polynomial, assumes n distinc real roots
 $x$: rational point 
 $\mu>0$ s.t. $2^\mu x$ is an integer
 $X=||2^\mu x||$",,,,shared memory?,,,,,,,,,,,,,,,,20?,,,,,,,,,,,,,,,,,,,,,,,,,,,,
48,Root Computation,0.001,General Root Computation,,,,,,,,,,"Ben-Or, Feig, Kozen, Tiwari (BFKT)",1986,https://dl.acm.org/doi/pdf/10.1145/12130.12165,,,,,,,,,$O(\log{n})$,,https://www.sciencedirect.com/science/article/pii/S0022000005800613,,,,,"$n$: degree of polynomial
 $m$: bits in coefficients (?) // $2^m+1$: upper bound on root absolute value
 $2^{-\mu}$: error bound",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
48,Root Computation,0.001,General Root Computation,,,,,,,,,,"MROOT - Ben-Or, Tiwari",1990,https://www.sciencedirect.com/science/article/pii/0885064X90900329,,,,,,,,,,,,from sequential description: $O(n^2(m+\mu)\log^6{m+n+mu})$,,,,"$n$: degree of polynomial
 $2^{-\mu}$: error bound
 $a,b$: interval bounds (?), $a\leq b$
 $2^m$: upper bound (?)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
48,Root Computation,0.001,General Root Computation,,,,,,,,,,Neff,1994,https://www.sciencedirect.com/science/article/pii/S0022000005800613,,,,,,,,$O(\log^3{n+m+\mu})$,$O(\log^3{n+m+\mu})$,,,$O(\log^3{n+m+\mu} (n+m+\mu)^f$,,,,"$n$: degree of polynomial
 $2^m$: upper bound
 $2^{-\mu}$: error bound
 $f$: positive constant",,,,"""an attempt has been made to avoid much of the formalization of an exact model of parallel computation""; refrences BFKT sand they use EREW PRAM",110,,,,,,,,,,,,,,,$O(n+m+mu)^f$,,,,,,,,,,,,,,,,,,,,,,,,,,,,
48,Root Computation,1,General Root Computation,,,,,,,,,,"parallel Graeffe's method - Rice, Jamieson",1989,https://ieeexplore.ieee.org/abstract/document/21130,,,,,,,,$O(1)$,$O(1)$,,,$O(n)$,,,,$n$: degree of polynomial,,,,SIMD,,,,,,,,,,,,,,,,$n+1$,,,,,,,,,,,,,,,,,,,,,,,,,,,,
48,Root Computation,0,,,,,,,,,,,Miranker,1969,https://ieeexplore.ieee.org/abstract/document/5391814,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
48,Root Computation,0,,,,,,,,,,,"Lucas, Jana",2010,https://link.springer.com/article/10.1007/s11227-009-0312-7,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
48,Root Computation,0,,,,,,,,,,,"Ellis, Watson",1984,https://www.sciencedirect.com/science/article/pii/0898122184900427,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
48,Root Computation,1,General Root Computation,,,,,,,,,,Row-column mapping - Jana (1),2006,https://www.sciencedirect.com/science/article/pii/S0167819106000020,,,,,,,,$6 n^0.5 -6$ electronic moves +2 OTIS moves,$O(n^0.5)$,,,$O(n^2.5)$,,,,$n$: order of polynomial,,,,Optical transpose interconnection system (OTIS); OTIS-mesh,,,,,,,,,,,,,,,,$n^2$,,,,,,,,,,,,,,,,,,,,,,,,,,,,
48,Root Computation,1,General Root Computation,,,,,,,,,,grouping mapping - Jana (2),2006,https://www.sciencedirect.com/science/article/pii/S0167819106000020,,,,,,,,$4 n^0.5 -4$ electronic moves +1 OTIS moves,$O(n^0.5)$,,,$O(n^2.5)$,,,,$n$: order of polynomial,,,,Optical transpose interconnection system (OTIS); OTIS-mesh,,,,,,,,,,,,,,,,$n^2$,,,,,,,,,,,,,,,,,,,,,,,,,,,,
48,Root Computation,0.001,General Root Computation,,,,,,,,,,"Serial Algorithm Parallel function Evaluation (SAPE) - Katz, Franklin (1)",1985,https://epubs.siam.org/doi/abs/10.1137/0906023,,,,,,,,,,,,,,,,"$n$:
 $a,b$: endpoint values $a<b$",,,,MIMD,,,,,,,,,,,,,,,,$n$,,,,,,,,,,,,,,,,,,,,,,,,,,,,
48,Root Computation,0.001,General Root Computation,,,,,,,,,,"Parallel Algorithm Serial Function Evaluation (PASE) - Katz, Franklin (2)",1985,https://epubs.siam.org/doi/abs/10.1137/0906023,,,,,,,,,,,,,,,,"$n$:
 $a,b$: endpoint values $a<b$",,,,MIMD,,,,,,,,,,,,,,,,$n$,,,,,,,,,,,,,,,,,,,,,,,,,,,,
48,Root Computation,0,,,,,,,,,,,Pinkert,1976,https://dl.acm.org/doi/pdf/10.1145/355705.355710,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,k Nearest Neighbors Search,,,,,,,,,,"Two-dimensional partitioning with query point replication - Xiao, Biros (1)",2016,https://epubs.siam.org/doi/abs/10.1137/15M1026377,,,,,,,,"$O(mnd/p + 1/p^0.5 (m+n) + mn/p \log{n/p^0.5} + k\log{p^0.5})$ for large k
 $O(mnd/p + 1/p^0.5 (m+n) + mn/p + k\log{p^0.5})$ for small k",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,k Nearest Neighbors Search,,,,,,,,,,"Cyclic partitioning - Xiao, Biros (2)",2016,https://epubs.siam.org/doi/abs/10.1137/15M1026377,,,,,,,,"$O(mnd/p + m + n + mn/p \log{n/p})$ for large k
 $O(mnd/p + m + n + mn/p)$ for small k",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,,,,,,,,,,,"Ramasubramanian, Paliwal",1992,https://maxwell.ict.griffith.edu.au/spl/publications/papers/ieeesp92_ram.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,k Nearest Neighbors Search,,,,,,,,,,"Berchtold, Bohm, Braunmuller, Keim, Kriegel",1997,https://dl.acm.org/doi/abs/10.1145/253262.253263,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,,,,,,,,,,,"Kumari, Maurya, Goyal, Balasubramaniam, Goyal",2016,https://ieeexplore.ieee.org/abstract/document/7839671,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,1,,,,,,,,,,,Goodrich,1985,https://docs.lib.purdue.edu/cgi/viewcontent.cgi?article=1452&context=cstech,,,,,,,,$O(\log{n})$,$O(\log{n})$,,,$O(n)$,,,,"$n$: number of points
$k=1$: neighbors",,,,CREW PRAM,120,,,,,,,,,,,,,,,$O(n/ \log{n})$,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,1,,,,,,,,,,,"Schieber, Vishkin",1990,https://www.sciencedirect.com/science/article/pii/0166218X9090084P,,,,,,,,$O(\log{\log{n}})$,$O(\log{\log{n}})$,,,$O(n)$,,,,"$n$: number of points
$k=1$: neighbors",,,,CRCW PRAM,130,,,,,,,,,,,,,,,$O(n/ \log{\log{n}})$,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,1,k Nearest Neighbors Search,,,,,,,,,,"Callahan, Kosaraju",1995,https://dl.acm.org/doi/abs/10.1145/200836.200853,,,,,,,,$O(\log{n})$,$O(\log{n})$,,,$O(n \log{n})$,,,,"$n$: number of points
",,,,CREW PRAM,120,,,,,,,,,,,,,,,$O(n)$,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,1,k Nearest Neighbors Search,,,,,,,,,,"Frieze, Miller, Teng",1992,https://dl.acm.org/doi/pdf/10.1145/140901.141934,,,,,,,,$O(\log{n})$,$O(\log{n})$,,,$O(n \log{n})$,,,,"$n$: number of points
",,,,CRCW PRAM,130,,,,,,,,,1,,,,,,$O(n)$,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,k Nearest Neighbors Search,,,,,,,,,,"Best-First based Parallel kNN (BFPkNN) - Gao, Chen Chen, Chen",2006,https://link.springer.com/chapter/10.1007/11751649_5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,,,,,,,,,,,"Papadopoulos, Manolopoulos",1997,https://dl.acm.org/doi/pdf/10.1145/258319.258330,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,,,,,,,,,,,"Papadopoulos, Manolopoulos",1998,https://dl.acm.org/doi/pdf/10.1145/276305.276325,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,,,,,,,,,,,"Connor, Kumar",2008,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=cefc2eca176f490d1c6a09d689262da37a326b13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,1,k Nearest Neighbors Search,,,,,,,,,,Gavrilova,2002,https://link.springer.com/article/10.1023/A:1014310721543,,,,,,,,$O(\log{n} \log)$,$O(\log{n} \log)$,,,$O(n)$,,,,,,,,EREW PRAM,110,,,,,,,,,,,,,,,$n/ \log{n}$,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,1,,,,,,,,,,,"Graf, Kamakoti, Janaki Latha, Pandu Rangan",1997,https://ieeexplore.ieee.org/abstract/document/634483,,,,,,,,$O(\log{n})$,$O(\log{n})$,,,$O(n \log{n})$,,,,,,,,CREW PRAM,120,,,,,,,,,,,,,,,$O(n)$,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,,,,,,,,,,,"KNN-MR (map reduce) - Kim, Kim, Shim",2016,https://ieeexplore.ieee.org/abstract/document/7840662,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
50,Coset Enumeration,0.001,Coset Enumeration,,,,,,,,,,"Cooperman, Grinberg",2002,https://www.sciencedirect.com/science/article/pii/S0747717102905237,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
50,Coset Enumeration,0.001,Coset Enumeration,,,,,,,,,,"Cooperman, Grinberg",2001,https://dl.acm.org/doi/abs/10.1145/384101.384113,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
50,Coset Enumeration,0.001,Coset Enumeration,,,,,,,,,,Harris,2003,https://scholarworks.lib.csusb.edu/etd-project/2432/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
50,Coset Enumeration,0,Coset Enumeration,,,,,,,,,,"Cooperman, Havas",1997,https://link.springer.com/chapter/10.1007/3540761691_3,,,,,,,,,,,,,,,,,,,,SMP machine,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
50,Coset Enumeration,0,Coset Enumeration,,,,,,,,,,"Akl, Labonte, Leeder, Qui",1991,https://www.sciencedirect.com/science/article/pii/0166218X91900769,,,,,,,,,,,,,,,,,,,,CRCW PRAM,130,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
50,Coset Enumeration,0,Coset Enumeration,,,,,,,,,,"Havas, Ramsay",2000,https://www.worldscientific.com/doi/abs/10.1142/9789812791962_0004,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
54,Voronoi Diagrams,1,Constuct Voronoi Diagram,,,,1,1,O(log^3 n),,,[https://dl.acm.org/doi/10.5555/909732 Chow (1980)],Chow,1980,https://dl.acm.org/doi/10.5555/909732,,,,,,,,O(log^3 n),O(log^3 n),,https://dl.acm.org/doi/10.5555/909732,O(n log^3 n),,,no,n: number of points,n,,,CREW PRAM?,,,,,,,,,,0,,0,,0,1,O(n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
54,Voronoi Diagrams,1,Constuct Voronoi Diagram of Line Segments,,,,1,1,O(log^2 n),,,"[https://core.ac.uk/download/pdf/4951553.pdf Goodrich, Ó'Dúnlaing, Yap [Section 3] (1985)]","Goodrich, Ó'Dúnlaing, Yap [Section 3]",1985,https://core.ac.uk/download/pdf/4951553.pdf,,,,,,,,O(log^2 n),O(log^2 n),,https://core.ac.uk/download/pdf/4951553.pdf,O(n log^2 n),,,no,n: number of points,n,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
54,Voronoi Diagrams,1,Constuct Voronoi Diagram of Line Segments,,,,1,1,O(log n),,,"[https://core.ac.uk/download/pdf/4951553.pdf Goodrich, Ó'Dúnlaing, Yap [Section 4] (1985)]","Goodrich, Ó'Dúnlaing, Yap [Section 4]",1985,https://core.ac.uk/download/pdf/4951553.pdf,,,,,,,,O(log n),O(log n),,https://core.ac.uk/download/pdf/4951553.pdf,O(n^(1+eps) log n),,,no,"n: number of points
eps: any positive real number",n,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(n^(1+eps)),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
54,Voronoi Diagrams,1,Constuct Voronoi Diagram,,,,1,1,O(log^2 n),,,"[https://dl.acm.org/doi/10.1145/41958.41980 Dadoun, Kirkpatrick (1987)]","Dadoun, Kirkpatrick",1987,https://dl.acm.org/doi/10.1145/41958.41980,,,,,,,,O(log^2 n),O(log^2 n),,https://dl.acm.org/doi/10.1145/41958.41980,O(n log^2 n),,,no,n: number of points,n,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
54,Voronoi Diagrams,1,Constuct Voronoi Diagram,,,,1,1,O(log^2 n),,,"[https://link.springer.com/content/pdf/10.1007/BF01762120.pdf Aggarwal, Chazelle, Guibas, Ó'Dúnlaing, Yap (1988)]","Aggarwal, Chazelle, Guibas, Ó'Dúnlaing, Yap",1988,https://link.springer.com/content/pdf/10.1007/BF01762120.pdf,,,,,,,,O(log^2 n),O(log^2 n),,https://link.springer.com/content/pdf/10.1007/BF01762120.pdf,O(n log^2 n),,,no,n: number of points,n,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(n),,0,0,,,"""Shamos (1977)"" gave reductions from Voronoi diagrams to other geometric proximity problems, including closest pair",,,,,,,,,,,,,,,,,,,,,,
54,Voronoi Diagrams,0,,,,,,,,,,,"Cole, Goodrich, Ó'Dúnlaing ",1990,https://link.springer.com/chapter/10.1007/BFb0032049,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
54,Voronoi Diagrams,0,,,,,,,,,,,"Vemuri, Varadarajan, Mayya",1992,https://dl.acm.org/doi/pdf/10.1145/140901.141924,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
54,Voronoi Diagrams,0,,,,,,,,,,,"Levcopoulos, Katajainen, Lingas",1988,https://link.springer.com/chapter/10.1007/3-540-19487-8_21,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
55,Variance Calculations,1,,452,,0,1,1,O(log n),Any distribution of values?,(need to read entire input),[http://i.stanford.edu/pub/cstr/reports/cs/tr/79/773/CS-TR-79-773.pdf Chan's algorithm Parallel Implementation (1979)],Chan's algorithm Parallel Implementation,1979,http://i.stanford.edu/pub/cstr/reports/cs/tr/79/773/CS-TR-79-773.pdf,,,,0,0,2,n: 2,O(\log n),$O(\log n)$,,https://dbs.ifi.uni-heidelberg.de/files/Team/eschubert/publications/SSDBM18-covariance-authorcopy.pdf,$O(n\log n)$,,https://dbs.ifi.uni-heidelberg.de/files/Team/eschubert/publications/SSDBM18-covariance-authorcopy.pdf,no,n: number of values,n,,,EREW PRAM,110,words,3,n: 3,O(1) per processor,"Each processor maintains O(1) information related to count, mean, M2",1,0,,0,,0,,0,1,O(n),,0,0,https://dbs.ifi.uni-heidelberg.de/files/Team/eschubert/publications/SSDBM18-covariance-authorcopy.pdf,,,,,,,,,,,,1,,,,,,,,,6,,,Numerical Analysis
55,Variance Calculations,0.001,,,,0,1,1,O(log n)?,,,[https://ieeexplore.ieee.org/abstract/document/5289161 Bennett et. al (2009)],Bennett et. al,2009,https://ieeexplore.ieee.org/abstract/document/5289161,,,,0,0,2,n: 2,O(log n)?,O(log n)?,,https://ieeexplore.ieee.org/abstract/document/5289161,O(n log n),,https://ieeexplore.ieee.org/abstract/document/5289161,no,n: number of values,n,,,EREW PRAM?,,words,3,n: 3,O(1) per processor,"Each processor maintains O(1) information related to count, mean, M2",1,0,,0,,0,,0,1,O(n),,0,0,,,,,,,,,,,,,1,,,,,,,,,6,,,Numerical Analysis
55,Variance Calculations,0.001,,,,0,1,1,O(log n)?,,,"[https://dl.acm.org/doi/abs/10.1145/3221269.3223036 Schubert, Gertz (2018)]","Schubert, Gertz",2018,https://dl.acm.org/doi/abs/10.1145/3221269.3223036,,,,0,0,2,n: 2,O(log n)?,O(log n)?,,https://dl.acm.org/doi/abs/10.1145/3221269.3223036,O(n log n),,https://dl.acm.org/doi/abs/10.1145/3221269.3223036,no,n: number of values,n,,,EREW PRAM?,,words,3,n: 3,O(1) per processor,"Each processor maintains O(1) information related to count, mean, M2",1,0,,0,,0,,0,1,O(n),,0,0,,,,,,,,,,,,,1,,,,,,,,,6,,,Numerical Analysis
56,Topological Sorting,0.001,Topological Sorting,,,,1,1,,,,[https://dl.acm.org/doi/10.1145/368996.369025 Kahn (1962)],Kahn,1962,https://dl.acm.org/doi/10.1145/368996.369025,,,,0,0,#N/A,V: 2,,,,,,,,,,,,,,,words,#N/A,V: 5,O(V^2)??,"Their n*n*n cube setup seems to only require each processor to keep track of one entry A[i, j], B[i, j] and propagates the results across the structure, only requiring O(1) auxiliary space per processor. Comparison sorting can be done easily with O(1) auxiliary space per processor.",1,0,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,6,,,Combinatorics
56,Topological Sorting,1,Topological Sorting,455,,,1,1,O( log² V),,,[https://www.proquest.com/docview/920003939?pq-origsite=gscholar&fromopenview=true Dekel; Nassimi & Sahni Parallel Implementation  (1981)],Dekel; Nassimi & Sahni Parallel Implementation ,1981,https://www.proquest.com/docview/920003939?pq-origsite=gscholar&fromopenview=true,,,,0,0,2,V: 2,O(\log^2 V),$O(\log^2 V)$,,https://www.proquest.com/docview/920003939?fromopenview=true&pq-origsite=gscholar&parentSessionId=sFqBaY3zmnfUFqEv4cfbNEqD%2FS7jMtMwgheB67Bgqws%3D,$O(V^3\log^2 V)$?,,https://www.proquest.com/docview/920003939?fromopenview=true&pq-origsite=gscholar&parentSessionId=sFqBaY3zmnfUFqEv4cfbNEqD%2FS7jMtMwgheB67Bgqws%3D,no,"V: number of vertices
E: number of edges",V,,,"PRAM (not sure what type), SIMD computers?",,words,5,V: 5,O(V^2)??,"Their n*n*n cube setup seems to only require each processor to keep track of one entry A[i, j], B[i, j] and propagates the results across the structure, only requiring O(1) auxiliary space per processor. Comparison sorting can be done easily with O(1) auxiliary space per processor.",1,0,,0,,0,,0,1,O(V^3)?,,0,0,,,,,,,,,,,,,,,,,,,,,,6,,,Combinatorics
56,Topological Sorting,1,Topological Sorting,,,,1,1,O(p),,,[https://academic.oup.com/comjnl/article/26/4/293/377400 Er (1983)],Er,1983,https://academic.oup.com/comjnl/article/26/4/293/377400,,,,,,,,O(p),O(p),,https://academic.oup.com/comjnl/article/26/4/293/377400,O(np)?,,,no,"n: number of vertices
m: number of edges
p: length of longest path from sink to source",n,,,SIMD,,,,,,,,,,0,,0,,0,1,O(n)?,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
56,Topological Sorting,2,Topological Sorting,,,,1,1,O( log² n),,,"[https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=581703 Ma, Iwama, Takaoka, Gu (1991)]","Ma, Iwama, Takaoka, Gu",1991,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=581703,,,,0,0,#N/A,V: 2,O(\log^2 n),$O(\log^2 n)$,2,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=581703,$O(M(n)logn)$,,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=581703,no,"n: number of vertices,
M(n) - number of processors needed to multiply two n x n matrices; currently equal to n^\omega the matrix multiplication runnint time.



",n,,,PRAM - CREW,120,words,#N/A,V: 5,O(V^2)??,"Their n*n*n cube setup seems to only require each processor to keep track of one entry A[i, j], B[i, j] and propagates the results across the structure, only requiring O(1) auxiliary space per processor. Comparison sorting can be done easily with O(1) auxiliary space per processor.",1,0,,0,,0,,0,1,O(M(n) / logn),,0,0,,,,,,,,,,,,,,,,,,,,,,6,,,Combinatorics
56,Topological Sorting,2,Topological Sorting,,,,1,1,O(1),,,"[https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=581703 Ma, Iwama, Takaoka, Gu (1991)]","Ma, Iwama, Takaoka, Gu",1991,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=581703,,,,0,0,#N/A,V: 2,O(log n),O(1),0,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=581703,$O(n^3)$,30,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=581703,no,n: number of vertices,n,,,PARBS,,words,#N/A,V: 5,O(V^2)??,"Their n*n*n cube setup seems to only require each processor to keep track of one entry A[i, j], B[i, j] and propagates the results across the structure, only requiring O(1) auxiliary space per processor. Comparison sorting can be done easily with O(1) auxiliary space per processor.",1,0,,0,,0,,0,1,O(n^3),30,0,0,,,,,,,,,,,,,,,,,,,,,,6,,,Combinatorics
56,Topological Sorting,0.001,Topological Sorting,,,,1,1,O(log n),,,[https://www.semanticscholar.org/paper/Parallel-algorithms%3A-design-and-analysis-Chaudhuri/b839df4f1527853960e4979d2066fbb07e3debe5 Chaudhuri (1992)],Chaudhuri,1992,https://www.semanticscholar.org/paper/Parallel-algorithms%3A-design-and-analysis-Chaudhuri/b839df4f1527853960e4979d2066fbb07e3debe5,,,,0,0,#N/A,V: 2,O(log n),O(log n),,https://www.semanticscholar.org/paper/Parallel-algorithms%3A-design-and-analysis-Chaudhuri/b839df4f1527853960e4979d2066fbb07e3debe5,$O(n^3 logn)$,,https://www.semanticscholar.org/paper/Parallel-algorithms%3A-design-and-analysis-Chaudhuri/b839df4f1527853960e4979d2066fbb07e3debe5,no,n: number of vertices,n,,,CRCW PRAM,130,words,#N/A,V: 5,O(V^2)??,"Their n*n*n cube setup seems to only require each processor to keep track of one entry A[i, j], B[i, j] and propagates the results across the structure, only requiring O(1) auxiliary space per processor. Comparison sorting can be done easily with O(1) auxiliary space per processor.",1,0,,0,,0,,0,1,O(n^3)?,,0,0,,,,,,,,,,,,,,,,,,,,,,6,,,Combinatorics
56,Topological Sorting,1,Topological Sorting,,,,1,1,O(log n),,,"[https://link.springer.com/article/10.1023/A:1022080713267 Li, Pan, Shen (2003)]","Li, Pan, Shen",2003,https://link.springer.com/article/10.1023/A:1022080713267,,,,,,,,O(log n),O(log n),,https://link.springer.com/article/10.1023/A:1022080713267,O(n^3),,,no,"n: number of vertices
m: number of edges",n,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(n^3/log n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
56,Topological Sorting,1,Topological Sorting,,,,,,,,,[https://dl.acm.org/doi/pdf/10.1145/1378533.1378560 Schudy (2008)],Schudy,2008,https://dl.acm.org/doi/pdf/10.1145/1378533.1378560,,,,,,,,O(t poly(log n)),O((n^2/m)^(1/3)),,https://dl.acm.org/doi/pdf/10.1145/1378533.1378560,O(m)?,,,no,"n: number of vertices
m: number of edges",n,,,CRCW PRAM?,,,,,,,,,,1,Las Vegas,0,,0,1,mn/t^2,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
56,Topological Sorting,0.001,Topological Sorting on Radial Network Topology Graphs,,,,,,O(p)?,,,"[https://link.springer.com/chapter/10.1007/978-981-10-5828-8_39 Saxena, Jain, Sharma (2018)]","Saxena, Jain, Sharma",2018,https://link.springer.com/chapter/10.1007/978-981-10-5828-8_39,,,,,,,,O(p)?,O(p)?,,https://link.springer.com/chapter/10.1007/978-981-10-5828-8_39,,,,,"n: number of vertices
m: number of edges
p: length of longest path from sink to source",n,,,CUDA?,,,,,,,,,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
58,Lowest Common Ancestor,1,,,,,1,1,O(ceil(m/(nK)) log n + n/K),,,"[https://epubs.siam.org/doi/abs/10.1137/0213036 Tsin, Chin (1984)]","Tsin, Chin",1984,https://epubs.siam.org/doi/abs/10.1137/0213036,,,,0,0,,,O(ceil(m/(nK)) log n + n/K),O(log n),,https://epubs.siam.org/doi/abs/10.1137/0213036,O(m log n + n^2)?,,,,"n: number of vertices
m: number of total number of op.s (queries, links, cuts)
K: processor parameter",n,,,SIMD,,words,O(n) total (auxiliary?),n: 3,https://www.proquest.com/docview/919780720?pq-origsite=gscholar&fromopenview=true,,,,,0,,0,,0,1,nK,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
58,Lowest Common Ancestor,1,,,,,1,1,O(ceil((n+m)/p) log n),,,[https://ieeexplore.ieee.org/abstract/document/1676830 Tsin [Section 3] (1986)],Tsin [Section 3],1986,https://ieeexplore.ieee.org/abstract/document/1676830,,,,,,,,O(ceil((n+m)/p) log n),O(log n),,,O(n^2)?,,,no,"n: number of vertices
m: number of total number of op.s (queries, links, cuts)
p: number of processors",n,,,SIMD,,words,O(n) total (auxiliary?),n: 3,https://www.proquest.com/docview/919780720?pq-origsite=gscholar&fromopenview=true,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
58,Lowest Common Ancestor,1,,,,,1,1,O(n^2/p + log n),,,[https://ieeexplore.ieee.org/abstract/document/1676830 Tsin [Section 4] (1986)],Tsin [Section 4],1986,https://ieeexplore.ieee.org/abstract/document/1676830,,,,,,,,O(n^2/p + log n),O(log n),,,O(n^2)?,,,no,"n: number of vertices
m: number of total number of op.s (queries, links, cuts)
p: number of processors",n,,,SIMD,,words,O(n) total (auxiliary?),n: 3,https://www.proquest.com/docview/919780720?pq-origsite=gscholar&fromopenview=true,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
58,Lowest Common Ancestor,1,Lowest Common Ancestor with Static Trees,,,,1,1,O(m+log(n)),,,[https://epubs.siam.org/doi/abs/10.1137/0217079?journalCode=smjcat Schieber; Vishkin [Parallel] (1988)],Schieber; Vishkin [Parallel],1988,https://epubs.siam.org/doi/abs/10.1137/0217079?journalCode=smjcat,,,,0,0,,,O(m+log(n)),$O(m+\log(n))$,,https://epubs.siam.org/doi/epdf/10.1137/0217079,$O(m+n)$,,https://epubs.siam.org/doi/epdf/10.1137/0217079,no,"n: number of vertices
m: number of total number of op.s (queries, links, cuts)",n,,,EREW PRAM,110,words,O(n) total (auxiliary?),n: 3,https://www.proquest.com/docview/919780720?pq-origsite=gscholar&fromopenview=true,,,,,0,,0,,0,1,O(n/log n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
58,Lowest Common Ancestor,1,,,,,1,1,O(m*alpha(n)),,,"[https://apps.dtic.mil/sti/tr/pdf/ADA227803.pdf Berkman, Vishkin (1990)]","Berkman, Vishkin",1990,https://apps.dtic.mil/sti/tr/pdf/ADA227803.pdf,,,,0,0,,,O(m*alpha(n)),O(m*alpha(n)),,https://apps.dtic.mil/sti/tr/pdf/ADA227803.pdf,O(m + n),,https://apps.dtic.mil/sti/tr/pdf/ADA227803.pdf,no,"n: number of vertices
m: number of total number of op.s (queries, links, cuts)",n,,,Common CRCW PRAM,132,words,O(n) total (auxiliary?),n: 3,https://www.proquest.com/docview/919780720?pq-origsite=gscholar&fromopenview=true,,,,,0,,0,,0,1,O(n)?,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
58,Lowest Common Ancestor,1,All-Pairs LCA,,,,1,1,O(log n),,,"[https://link.springer.com/chapter/10.1007/3-540-54029-6_194 Lin, Olariu (1991)]","Lin, Olariu",1991,https://link.springer.com/chapter/10.1007/3-540-54029-6_194,,,,0,0,,,O(log n),O(log n),,https://link.springer.com/chapter/10.1007/3-540-54029-6_194,O(n^2),,https://link.springer.com/chapter/10.1007/3-540-54029-6_194,yes,n: number of vertices,n,,,EREW PRAM,110,words,O(n) total (auxiliary?),n: 3,https://www.proquest.com/docview/919780720?pq-origsite=gscholar&fromopenview=true,,,,,0,,0,,0,1,O(n^2/log n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
58,Lowest Common Ancestor,1,All-Pairs LCA,,,,1,1,O(log n),,,[https://www.sciencedirect.com/science/article/pii/002001909190082S Lin (1991)],Lin,1991,https://www.sciencedirect.com/science/article/pii/002001909190082S,,,,0,0,,,O(log n),O(log n),,https://www.sciencedirect.com/science/article/pii/002001909190082S,O(n^2)?,,,no,n: number of vertices,n,,,PARBS,,words,O(n) total (auxiliary?),n: 3,https://www.proquest.com/docview/919780720?pq-origsite=gscholar&fromopenview=true,,,,,0,,0,,0,1,O(n^2),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
58,Lowest Common Ancestor,1,Single-Pair LCA,,,,1,1,O(log n),,,"[https://ieeexplore.ieee.org/abstract/document/288276 Das, Halverson, Min (1994)]","Das, Halverson, Min",1994,https://ieeexplore.ieee.org/abstract/document/288276,,,,0,0,,,O(log n),O(log n),,https://ieeexplore.ieee.org/abstract/document/288276,O(n),,,no,n: number of vertices,n,,,EREW PRAM,110,words,O(n) total (auxiliary?),n: 3,https://www.proquest.com/docview/919780720?pq-origsite=gscholar&fromopenview=true,,,,,0,,0,,0,1,O(n/log n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
58,Lowest Common Ancestor,1,,,,,1,1,"O(m/p + r log p + min(m, r log n))",,,[https://link.springer.com/chapter/10.1007/3-540-58218-5_28 Schenk (1994)],Schenk,1994,https://link.springer.com/chapter/10.1007/3-540-58218-5_28,,,,0,0,,,"O(m/p + r log p + min(m, r log n))",O(m/n + r log n)?,,,O(m + r)?,,,no,"n: number of vertices
m: number of total number of op.s (queries, links, cuts)
p: number of processors
r: number of rounds",n,,,CREW PRAM,120,words,O(n) total (auxiliary?),n: 3,https://www.proquest.com/docview/919780720?pq-origsite=gscholar&fromopenview=true,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
58,Lowest Common Ancestor,0.001,,,,,1,1,,,,[https://academic.oup.com/proteincell/article/3/2/148/6874195 Zhao et. al. (2012)],Zhao et. al.,2012,https://academic.oup.com/proteincell/article/3/2/148/6874195,,,,0,0,,,,,,,,,,,"n: number of vertices
m: number of total number of op.s (queries, links, cuts)",n,,,,,words,O(n) total (auxiliary?),n: 3,https://www.proquest.com/docview/919780720?pq-origsite=gscholar&fromopenview=true,,,,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
58,Lowest Common Ancestor,0.001,Lowest Common Ancestor with Static Trees,,,,1,1,O(m*log(h)),,,[https://www.schoolofhaskell.com/user/edwardk/online-lca Kmett (2015)],Kmett,2015,https://www.schoolofhaskell.com/user/edwardk/online-lca,,,,0,0,,,O(m*log(h)),,,,,,,,"n: number of vertices
m: number of total number of op.s (queries, links, cuts)
h: height of tree",,,,Word RAM,,words,,,,,,,,0,,0,,0,1,O(n/log n),,0,0,,,Has an implimentation.,,,,,,,,,,,,,,,,,,,,,,Combinatorics
60,Clique Problems,0.001,"Enumerating Maximal Cliques, arbitrary graph",478,,,1,1,O(3^{(n/3)}) total work? (previously this cell said O(n^4)),,,[https://arxiv.org/pdf/1801.00202.pdf Segundo; Artieda;  Strash Parallel (2011)],Segundo; Artieda;  Strash Parallel,2011,https://arxiv.org/pdf/1801.00202.pdf,,,,0,-,8,n: 8,$O(3^{(n/3)})$ total work? (previously this cell said $O(n^4)$),,,,,,,,"n: number of vertices
m: number of edges",n,,,Word RAM with bit parallelism,,words,5,n: 5,O(n^2) auxiliary??,Keep track of an O(n)-sized recursive stack with O(n)-sized lists as elements? (this algo builds off of Bron-Kerbosch),1,0,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
60,Clique Problems,1,"Enumerating Maximal Cliques, arbitrary graph",,,,,,,,,,"Dahlhaus, Karpinski",1988,https://link.springer.com/chapter/10.1007/3-540-19487-8_16,,,,,,,,$O(\log^3{nM})$,$O(\log^3{nM})$,,,$O(M^6 n^2 \log^3{nM})$,,,,"$n$: number of vertices
 $M$: number of cliques",,,,CREW PRAM,120,,,,,,,,,,,,,,1,$O(M^6 n^2)$,,,,,,,,,,,,,,,,,,,,,,,,,,,,
60.4,Clique Problems,0.001,Max-Weight k-Clique,,,,,,,,,,"Lee, Funabiki, Cho, Takefuji",1991,https://www.researchgate.net/profile/Yoshiyasu-Takefuji/publication/224650097_A_parallel_neural_network_computing_for_the_maximum_clique_problem/links/5b41ee69458515f71cb18f5d/A-parallel-neural-network-computing-for-the-maximum-clique-problem.pdf,,,,,,,,,,,,,,,,,,,,maximum neural network (a new proposed model for large scale clique problems),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
60.4,Clique Problems,0.001,Max-Weight k-Clique,,,,,,,,,,Lin,1993,https://ieeexplore.ieee.org/abstract/document/394285,,,,,,,,,,,,,,,,,,,,maximum neural network,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
60.4,Clique Problems,0.001,Max-Weight k-Clique,,,,,,,,,,"Pardalos, Rappe, Resende",1998,https://link.springer.com/chapter/10.1007/978-1-4613-3279-4_18,,,,,,,,,,,,,,,,,,,,MPI,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
60.4,Clique Problems,0.001,Max-Weight k-Clique,,,,,,,,,,"Wang, Tang, Cao",2003,https://ieeexplore.ieee.org/abstract/document/6790173,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
60,Clique Problems,0.001,"Enumerating Maximal Cliques, arbitrary graph",,,,,,,,,,"Du, Wu, Xu, Wang, Pei",2006,https://ieeexplore.ieee.org/abstract/document/4063647,,,,,,,,"$O((\delta * M_c * Tri^2)/p)$ ""time delay"" ?
",,,,,,,,"$\delta$: max degree
$M_c$: size of maximum clique
$Tri$: number of all triangles",,,,,,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
62,Poisson Problem,0.001,2-Dimensional Poisson Problem,,,,1,1,O((n^2 log n)/p + np),,,"[https://www.sciencedirect.com/science/article/abs/pii/S0021999101967208 Borges, Daripa (2001)]","Borges, Daripa",2001,https://www.sciencedirect.com/science/article/abs/pii/S0021999101967208,,,,,,,,O((n^2 log n)/p + np),O(n sqrt(n log n)),,,O(n^2 log n)?,,,,"n: dimension of grid (where grid is discretized)
p: number of processorsr",n,,,"""distributed and shared models""",,words,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
64,Delaunay Triangulation,0.001,Constuct Voronoi Diagram,,,,1,1,O(n),,,"[ Saxena, Bhatt, Prasad (1986)]","Saxena, Bhatt, Prasad",1986,,,,,,,,,O(n),O(n),,https://link.springer.com/chapter/10.1007/3-540-18099-0_45,O(n log n),,,,n: number of points,n,,,CREW PRAM,120,,,,,,,,,0,,,,0,1,O(log n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
64,Delaunay Triangulation,0.001,Constuct Voronoi Diagram,,,,1,1,O(log n log log n),,,"[ Saxena, Bhatt, Prasad (1986)]","Saxena, Bhatt, Prasad",1986,,,,,,,,,O(log n log log n),O(log n log log n),,https://link.springer.com/chapter/10.1007/3-540-18099-0_45,O(n^2 log n log log n),,,,n: number of points,n,,,CREW PRAM,120,,,,,,,,,0,,,,0,1,O(n^2),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
64,Delaunay Triangulation,0.001,Constuct Voronoi Diagram,,,,1,1,O(log log n),,,"[ Saxena, Bhatt, Prasad (1986)]","Saxena, Bhatt, Prasad",1986,,,,,,,,,O(log log n),O(log log n),,https://link.springer.com/chapter/10.1007/3-540-18099-0_45,O(n^3 log log n),,,,n: number of points,n,,,CREW PRAM,120,,,,,,,,,0,,,,0,1,O(n^3),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
64,Delaunay Triangulation,0.001,Constuct Voronoi Diagram,,,,1,1,O(1),,,"[ Saxena, Bhatt, Prasad (1986)]","Saxena, Bhatt, Prasad",1986,,,,,,,,,O(1),O(1),,https://link.springer.com/chapter/10.1007/3-540-18099-0_45,O(n^4),,,,n: number of points,n,,,common CRCW PRAM,132,,,,,,,,,0,,,,0,1,O(n^4),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
64,Delaunay Triangulation,0.001,Constuct Voronoi Diagram,,,,,,O(log^2 n),,,"[https://doi.org/10.1007/BF01762120 A. Aggarwal, B. Chazelle, L. Guibas, C. Ó'Dúnlaing, and C. Yap. 1988 (1988)]","A. Aggarwal, B. Chazelle, L. Guibas, C. Ó'Dúnlaing, and C. Yap. 1988",1988,https://doi.org/10.1007/BF01762120,,,,,,,,,$O(\log^2 n)$,,https://doi.org/10.1007/BF01762120,$O(n\log^2 n)$,,https://doi.org/10.1007/BF01762120,,n: number of points,n,,,CREW PRAM,120,,,,,,,,,0,,,,0,1,$O(n/\log n)$,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
64,Delaunay Triangulation,0.001,Constuct Voronoi Diagram,,,,,,O(log n log log n),,,"[https://link.springer.com/chapter/10.1007/BFb0032049 Cole, R., Goodrich, M.T., Dúnlaing, C.Ó. (1990)]","Cole, R., Goodrich, M.T., Dúnlaing, C.Ó.",1990,https://link.springer.com/chapter/10.1007/BFb0032049,,,,,,,,,$O(\log n \log \log n)$,,https://link.springer.com/chapter/10.1007/BFb0032049,$O(n\log^2 n)$,,https://link.springer.com/chapter/10.1007/BFb0032049,,n: number of points,n,,,CREW PRAM,120,,,,,,,,,0,,,,0,1,$O(n/\log n)$,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
64,Delaunay Triangulation,0.001,Constuct Voronoi Diagram,,,,,,O(log n) expected,,,"[https://dl.acm.org/doi/10.1145/140901.141924 B. C. Vemuri, R. Varadarajan, and N. Mayya. (1992)]","B. C. Vemuri, R. Varadarajan, and N. Mayya.",1992,https://dl.acm.org/doi/10.1145/140901.141924,,,,,,,,,$O(\log n)$,,https://dl.acm.org/doi/10.1145/140901.141924,$O(n\log n)$,,https://dl.acm.org/doi/10.1145/140901.141924,,n: number of points,n,,,CREW PRAM,120,,,,,,,,,0,,,,0,1,$O(n/\log n)$,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
64,Delaunay Triangulation,1,2D,,,,,,O(nlogn),,,"[Blelloch, G., Miller, G., Hardwick, J. et al. Design and Implementation of a Practical Parallel Delaunay Algorithm . Algorithmica 24, 243–269 (1999). https://doi.org/10.1007/PL00008262 Belloch (1999)]",Belloch,1999,"Blelloch, G., Miller, G., Hardwick, J. et al. Design and Implementation of a Practical Parallel Delaunay Algorithm . Algorithmica 24, 243–269 (1999). https://doi.org/10.1007/PL00008262",,,,,,,,$O(\log^3 n)$,$O(\log^3 n)$,,https://link.springer.com/article/10.1007/PL00008262,$O(n\log n)$,,https://link.springer.com/article/10.1007/PL00008262,,n: number of points,n,,,CREW PRAM,120,,,,,,,,,0,,,,0,1,$O(n/\log n)$,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
64,Delaunay Triangulation,1,2-Dimensional Delaunay Triangulation,524,,,1,1,O(nlogn),,,[https://web.archive.org/web/20180425231851/https://www.cs.cmu.edu/~ygu1/paper/SPAA16/Incremental.pdf Belloch (2006)],Belloch,2006,https://web.archive.org/web/20180425231851/https://www.cs.cmu.edu/~ygu1/paper/SPAA16/Incremental.pdf,,,,0,0,4,n: 4,$O(\log^2 n)$,$O(\log^2 n)$,,https://web.archive.org/web/20180425231851/https://www.cs.cmu.edu/~ygu1/paper/SPAA16/Incremental.pdf,$O(n\log n)$,,https://web.archive.org/web/20180425231851/https://www.cs.cmu.edu/~ygu1/paper/SPAA16/Incremental.pdf,yes,n: number of points,n,,,CRCW PRAM,130,words,3,n: 3,O(n),"Keep track of triangles in current triangulation, based on which points have been added so far and which triangles to remove (see other incremental algos)",1,0,,1,Las Vegas?,0,,0,1,$O(n/\log n)$,,0,0,,,,,,,,,,,,,9965,,,,,,,,,4,,,Combinatorics
64,Delaunay Triangulation,0,,,,,,,,,,"[https://arxiv.org/pdf/2308.06484 Hadiniya, Ghodsi (2023)]","Hadiniya, Ghodsi",2023,https://arxiv.org/pdf/2308.06484,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
66,The Subset-Sum Problem,1,Subset Sum,,,,1,1,O(n*2^(n/2)),,,[https://ieeexplore.ieee.org/document/1676456 Karnin (1984)],Karnin,1984,https://ieeexplore.ieee.org/document/1676456,,,,0,0,4,n: 4,O(n*2^(n/2)),O(n*2^(n/2)),,https://onlinelibrary.wiley.com/doi/pdf/10.1002/cpe.3201,O(n*2^(2n/3)),,https://www.sciencedirect.com/science/article/pii/S0377221705008258,no,"n: the number of integers in the set
t: target sum",n,,,CREW PRAM?,,words,3,n: 3,O(n),"Keep track of triangles in current triangulation, based on which points have been added so far and which triangles to remove (see other incremental algos)",1,0,,0,,0,,0,1,O(2^(n/6)),,0,0,,,,,,,,,,,,,9965,,,,,,,,,4,,,Combinatorics
66,The Subset-Sum Problem,1,Subset Sum,,,,1,1,O(n*2^n/p)?,,,[https://link.springer.com/chapter/10.1007/3-540-52921-7_57 Djokić et al [enumeration of subsets] (1990)],Djokić et al [enumeration of subsets],1990,https://link.springer.com/chapter/10.1007/3-540-52921-7_57,,,,0,0,4,n: 4,O(n*2^n/p)?,O(n),,,O(n*2^n)?,,,no,"n: the number of integers in the set
t: target sum
p: number of processors; 1≤p≤2^n",n,,,CREW PRAM?,,words,3,n: 3,O(n),"Keep track of triangles in current triangulation, based on which points have been added so far and which triangles to remove (see other incremental algos)",1,0,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,9965,,,,,,,,,4,,,Combinatorics
66,The Subset-Sum Problem,1,Subset Sum,,,,1,1,O(n*2^(n*eps/2)),,,[https://ieeexplore.ieee.org/document/73593 Ferreira (1991)],Ferreira,1991,https://ieeexplore.ieee.org/document/73593,,,,0,0,4,n: 4,O(n*2^(n*eps/2)),O(n),,https://ieeexplore.ieee.org/document/73593,O(n*2^(n/2)),,,no,"n: the number of integers in the set
t: target sum
eps: processor parameter",n,,,CREW SIMD PRAM,120,words,3,n: 3,O(n),"Keep track of triangles in current triangulation, based on which points have been added so far and which triangles to remove (see other incremental algos)",1,0,,0,,0,,0,1,O(n*2^(n*(1-eps)/2)),,0,0,,,,,,,,,,,,,9965,,,,,,,,,4,,,Combinatorics
66,The Subset-Sum Problem,1,Subset Sum,,,,1,1,O(n * 2^(n/2) * sigma(2^(n/2))/p),,,"[https://www.sciencedirect.com/science/article/abs/pii/S0743731596901501 Ferreira, Robson (1996)]","Ferreira, Robson",1996,https://www.sciencedirect.com/science/article/abs/pii/S0743731596901501,,,,0,0,4,n: 4,O(n * 2^(n/2) * sigma(2^(n/2))/p),O(n * 2^(n/4) * sigma(2^(n/2))),,https://www.sciencedirect.com/science/article/abs/pii/S0743731596901501,O(n * 2^(n/2) * sigma(2^(n/2))),,,no,"n: the number of integers in the set
t: target sum
p: number of processors; 1≤p≤2^(n/4)
sigma(m): sorting overhead in parallel sorting; optimal is O(1)",n,,,EREW PRAM,110,words,3,n: 3,O(n),"Keep track of triangles in current triangulation, based on which points have been added so far and which triangles to remove (see other incremental algos)",1,0,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,9965,,,,,,,,,4,,,Combinatorics
66,The Subset-Sum Problem,1,Subset Sum,,,,1,1,O(2^(n/2)/p),,,"[https://www.sciencedirect.com/science/article/pii/S0377221705008258 Sanches, Soma, Yanasse (2007)]","Sanches, Soma, Yanasse",2007,https://www.sciencedirect.com/science/article/pii/S0377221705008258,,,,0,0,4,n: 4,O(2^(n/2)/p),O(n),,https://www.sciencedirect.com/science/article/pii/S0377221705008258,O(2^(n/2)),,,no,"n: the number of integers in the set
t: target sum
p: number of processors; 1≤p≤2^(n/2)/n and p is a power of 2",n,,,CREW PRAM,120,words,3,n: 3,O(n),"Keep track of triangles in current triangulation, based on which points have been added so far and which triangles to remove (see other incremental algos)",1,0,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,9965,,,,,,,,,4,,,Combinatorics
66,The Subset-Sum Problem,1,Subset Sum,,,,1,1,O(2^(3n/8)),,,[https://www.sciencedirect.com/science/article/pii/S0167819107001238 Chedid (2008)],Chedid,2008,https://www.sciencedirect.com/science/article/pii/S0167819107001238,,,,0,0,4,n: 4,O(2^(3n/8)),O(2^(3n/8)),,https://www.sciencedirect.com/science/article/pii/S0167819107001238,O(2^(n/2)),,https://www.sciencedirect.com/science/article/pii/S0167819107001238,yes,"n: the number of integers in the set
t: target sum",n,,,CREW SIMD PRAM,120,words,3,n: 3,O(n),"Keep track of triangles in current triangulation, based on which points have been added so far and which triangles to remove (see other incremental algos)",1,0,,0,,0,,0,1,O(2^(n/8)),,0,0,,,,,,,,,,,,,9965,,,,,,,,,4,,,Combinatorics
66,The Subset-Sum Problem,1,Subset Sum,,,,1,1,O(2^(n(1+eps)/4)),,,"[https://link.springer.com/article/10.1007/BF02973436 Li, Li, Li (2008)]","Li, Li, Li",2008,https://link.springer.com/article/10.1007/BF02973436,,,,,,,,O(2^(n(1+eps)/4)),O(2^(n/4)),,https://link.springer.com/article/10.1007/BF02973436,O(2^(n/2)),,https://link.springer.com/article/10.1007/BF02973436,yes,"n: the number of integers in the set
t: target sum
eps: processor parameter",n,,,EREW PRAM,110,words,3,n: 3,O(n),"Keep track of triangles in current triangulation, based on which points have been added so far and which triangles to remove (see other incremental algos)",1,0,,0,,0,,0,1,O(2^(n(1-eps)/4)),,0,0,,,,,,,,,,,,,9965,,,,,,,,,4,,,Combinatorics
66,The Subset-Sum Problem,1,Subset Sum,,,,1,1,O(n/p * (c - w_min) + (c + w_max - w_min)/p + n + log p),,,"[https://www.sciencedirect.com/science/article/pii/S0304397508004854 Sanches, Soma, Yanasse [Algorithm 1] (2008)]","Sanches, Soma, Yanasse [Algorithm 1]",2008,https://www.sciencedirect.com/science/article/pii/S0304397508004854,,,,0,0,4,n: 4,O(n/p * (c - w_min) + (c + w_max - w_min)/p + n + log p),O(n/w_min * (c - w_min) + (c + w_max - w_min)/w_min + n + log(w_min)),,,O(n(c - w_min) + (c + w_max - w_min) + n)?,,,no,"n: the number of integers in the set
w_min: minimum weight
w_max: maximum weight
c: capacity
p: number of processors; 1≤p≤w_min",n,,,CREW PRAM,120,words,3,n: 3,O(n),"Keep track of triangles in current triangulation, based on which points have been added so far and which triangles to remove (see other incremental algos)",1,0,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,9965,,,,,,,,,4,,,Combinatorics
66,The Subset-Sum Problem,1,Subset Sum,,,,1,1,O(n/p * (c - 2*w_min) + c/p + n),,,"[https://www.sciencedirect.com/science/article/pii/S0304397508004854 Sanches, Soma, Yanasse [Algorithm 2a] (2008)]","Sanches, Soma, Yanasse [Algorithm 2a]",2008,https://www.sciencedirect.com/science/article/pii/S0304397508004854,,,,0,0,4,n: 4,O(n/p * (c - 2*w_min) + c/p + n),O((c - 2*w_min) + c/n + n),,,O(n(c - 2*w_min) + c + n)?,,,no,"n: the number of integers in the set
w_min: minimum weight
w_max: maximum weight
c: capacity
p: number of processors; log n≤p≤n",n,,,EREW PRAM,110,words,3,n: 3,O(n),"Keep track of triangles in current triangulation, based on which points have been added so far and which triangles to remove (see other incremental algos)",1,0,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,9965,,,,,,,,,4,,,Combinatorics
66,The Subset-Sum Problem,1,Subset Sum,,,,1,1,O((n-2 log c)(c - 2*w_min)/p + c/p + n - 2 log c + log^2 c),,,"[https://www.sciencedirect.com/science/article/pii/S0304397508004854 Sanches, Soma, Yanasse [Algorithm 3] (2008)]","Sanches, Soma, Yanasse [Algorithm 3]",2008,https://www.sciencedirect.com/science/article/pii/S0304397508004854,,,,0,0,4,n: 4,O((n-2 log c)(c - 2*w_min)/p + c/p + n - 2 log c + log^2 c),O((n-2 log c)(c - 2*w_min)/n + c/n + n - 2 log c + log^2 c),,,O((n-2 log c)(c - 2*w_min) + c + n - 2 log c + log^2 c)?,,,no,"n: the number of integers in the set
w_min: minimum weight
w_max: maximum weight
c: capacity
p: number of processors; log(n - 2 log c)≤p≤n - 2 log c",n,,,CREW PRAM,120,words,3,n: 3,O(n),"Keep track of triangles in current triangulation, based on which points have been added so far and which triangles to remove (see other incremental algos)",1,0,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,9965,,,,,,,,,4,,,Combinatorics
66,The Subset-Sum Problem,1,Subset Sum,,,,1,1,O(nt/p),,,[https://onlinelibrary.wiley.com/doi/pdf/10.1002/cpe.2800 Bokhari (2012)],Bokhari,2012,https://onlinelibrary.wiley.com/doi/pdf/10.1002/cpe.2800,,,,0,0,4,n: 4,O(nt/p),O(n),,,O(nt),,,no,"n: the number of integers in the set
t: target sum
p: number of processors; 1≤p≤t",n,,,CREW PRAM?,,words,3,n: 3,O(n),"Keep track of triangles in current triangulation, based on which points have been added so far and which triangles to remove (see other incremental algos)",1,0,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,9965,,,,,,,,,4,,,Combinatorics
66,The Subset-Sum Problem,1,Subset Sum,,,,1,1,O(2^(n/2-eps)),,,[https://link.springer.com/chapter/10.1007/978-3-642-33065-0_16 Chedid (2012)],Chedid,2012,https://link.springer.com/chapter/10.1007/978-3-642-33065-0_16,,,,0,0,4,n: 4,O(2^(n/2-eps)),O(n^2),,https://link.springer.com/chapter/10.1007/978-3-642-33065-0_16,O(2^(n/2)),,https://link.springer.com/chapter/10.1007/978-3-642-33065-0_16,yes,"n: the number of integers in the set
t: target sum
eps: processor parameter; 0 ≤ eps ≤ n/2 - 2 log n + 2",n,,,CREW PRAM,120,words,3,n: 3,O(n),"Keep track of triangles in current triangulation, based on which points have been added so far and which triangles to remove (see other incremental algos)",1,0,,0,,0,,0,1,2^eps,,0,0,,,,,,,,,,,,,9965,,,,,,,,,4,,,Combinatorics
66,The Subset-Sum Problem,0.001,Subset Sum,,,,1,1,O(2^(n/2)/p),,,"[https://onlinelibrary.wiley.com/doi/pdf/10.1002/cpe.3201 Wan, Li, Liu. Li (2014)]","Wan, Li, Liu. Li",2014,https://onlinelibrary.wiley.com/doi/pdf/10.1002/cpe.3201,,,,0,0,4,n: 4,O(2^(n/2)/p),O(n),,https://onlinelibrary.wiley.com/doi/pdf/10.1002/cpe.3201,O(2^(n/2)),,,no,"n: the number of integers in the set
t: target sum
p: number of processors; 1≤p≤2^(n/2)/n",n,,,CUDA-based GPU?,,words,3,n: 3,O(n),"Keep track of triangles in current triangulation, based on which points have been added so far and which triangles to remove (see other incremental algos)",1,0,,0,,0,,0,1,p,,0,1,,,,,,,,,,,,,9965,,,,,,,,,4,,,Combinatorics
66,The Subset-Sum Problem,1,Subset Sum,,,,1,1,O(n(m-w_min)/p),,,"[https://onlinelibrary.wiley.com/doi/full/10.1002/cpe.3636 Curtis, Sanches (2015)]","Curtis, Sanches",2015,https://onlinelibrary.wiley.com/doi/full/10.1002/cpe.3636,,,,0,0,4,n: 4,O(n(m-w_min)/p),O(n),,https://onlinelibrary.wiley.com/doi/full/10.1002/cpe.3636,O(n(m-w_min)),,,no,"n: the number of integers in the set
w_min: minimum weight
c: capacity
m: min(c, sum of weights minus c)
p: number of processors; 1≤p≤m-w_min",n,,,CRCW PRAM,130,words,3,n: 3,O(n),"Keep track of triangles in current triangulation, based on which points have been added so far and which triangles to remove (see other incremental algos)",1,0,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,9965,,,,,,,,,4,,,Combinatorics
66,The Subset-Sum Problem,0.001,Subset Sum,,,,1,1,O(2^(n/2)/(p*k)),,,"[https://www.sciencedirect.com/science/article/pii/S0743731516300880#br000125 Wan, Li, Li (2016)]","Wan, Li, Li",2016,https://www.sciencedirect.com/science/article/pii/S0743731516300880#br000125,,,,0,0,4,n: 4,O(2^(n/2)/(p*k)),?,,,O(2^(n/2)),,,no,"n: the number of integers in the set
t: target sum
p: number of compute nodes
k: number of threads per node",n,,,"""hybrid CPU-GPU cluster""?",,words,3,n: 3,O(n),"Keep track of triangles in current triangulation, based on which points have been added so far and which triangles to remove (see other incremental algos)",1,0,,0,,0,,0,1,O(pk)?,,0,1,,,,,,,,,,,,,9965,,,,,,,,,4,,,Combinatorics
72,The Vertex Cover Problem,1,The Vertex Cover Problem,,,,1,1,4 log n + O(k^k),,,"[https://link.springer.com/content/pdf/10.1007/BFb0057945.pdf Cesati, Ianni (1998)]","Cesati, Ianni",1998,https://link.springer.com/content/pdf/10.1007/BFb0057945.pdf,,,,,,,,4 log n + O(k^k),4 log n + O(k^k),,https://link.springer.com/chapter/10.1007/978-3-319-48749-6_35,O(n^2(log n + k^k))?,,,no,"n: number of vertices
m: number of edges
k: size of vertex cover (worst case O(n))",n,,,PRAM (CREW?),,,,,,,,,,0,,0,,0,1,O(n^2),,0,0,https://link.springer.com/chapter/10.1007/978-3-319-48749-6_35,,,,,,,,,,,,,,,,,,,,,,,,
72,The Vertex Cover Problem,0.001,The Vertex Cover Problem,,,,1,1,O(((1.325)^k k^2 + kn)/p)?,,,[https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=5ae76bd80f9c074902c4aa079c3f485a3e3657bd Cheetham et. al. (2003)],Cheetham et. al.,2003,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=5ae76bd80f9c074902c4aa079c3f485a3e3657bd,,,,,,,,O(((1.325)^k k^2 + kn)/p)?,,,,,,,no,"n: number of vertices
m: number of edges
k: size of vertex cover (worst case O(n))
p: number of processors",n,,,BSP/CGM,,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
72,The Vertex Cover Problem,0.001,The Vertex Cover Problem,,,,1,1,,,,"[https://www.inderscienceonline.com/doi/abs/10.1504/IJHPCN.2006.013490 Nagy, Akl (2007)]","Nagy, Akl",2007,https://www.inderscienceonline.com/doi/abs/10.1504/IJHPCN.2006.013490,,,,,,,,,,,,,,,,"n: number of vertices
m: number of edges
k: size of vertex cover (worst case O(n))",n,,,,,,,,,,,,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
72,The Vertex Cover Problem,0.001,The Vertex Cover Problem,,,,1,1,,,,[https://www.researchgate.net/profile/Henrique-Mongelli/publication/228439792_An_Alternative_Implementation_for_the_FPT_k-Vertex_Cover_Parallel_Algorithm/links/0a85e53584fdabd8da000000/An-Alternative-Implementation-for-the-FPT-k-Vertex-Cover-Parallel-Algorithm.pdf Mongelli et. al. (2009)],Mongelli et. al.,2009,https://www.researchgate.net/profile/Henrique-Mongelli/publication/228439792_An_Alternative_Implementation_for_the_FPT_k-Vertex_Cover_Parallel_Algorithm/links/0a85e53584fdabd8da000000/An-Alternative-Implementation-for-the-FPT-k-Vertex-Cover-Parallel-Algorithm.pdf,,,,,,,,,,,,,,,no,"n: number of vertices
m: number of edges
k: size of vertex cover (worst case O(n))
p: number of processors",n,,,BSP/CGM,,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
72,The Vertex Cover Problem,1,The Vertex Cover Problem,,,,1,1,O(k log^3 n),,,[https://link.springer.com/chapter/10.1007/978-3-319-48749-6_35 Abu-Khzam et. al. (2016)],Abu-Khzam et. al.,2016,https://link.springer.com/chapter/10.1007/978-3-319-48749-6_35,,,,,,,,O(k log^3 n),O(k log^3 n),,https://link.springer.com/chapter/10.1007/978-3-319-48749-6_35,O(km log^3 n),,,no,"n: number of vertices
m: number of edges
k: size of vertex cover (worst case O(n))",n,,,PRAM (CREW?),,,,,,,,,,0,,0,,0,1,O(m),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
72,The Vertex Cover Problem,0.001,The Vertex Cover Problem,,,,1,1,,,,"[https://ieeexplore.ieee.org/abstract/document/8411079 Abu-Khzam, Kim, Perry, Wang, Shaw (2018)]","Abu-Khzam, Kim, Perry, Wang, Shaw",2018,https://ieeexplore.ieee.org/abstract/document/8411079,,,,,,,,,,,,,,,,"n: number of vertices
m: number of edges
k: size of vertex cover (worst case O(n))",n,,,??,,,,,,,,,,0,,0,,0,1,,,0,1,,,,,,,,,,,,,,,,,,,,,,,,,
72,The Vertex Cover Problem,0.001,The Vertex Cover Problem,,,,1,1,,,,"[https://ieeexplore.ieee.org/abstract/document/9820627 Yamout, Barada, Jaljuli, Mouawad, El Hajj (2022)]","Yamout, Barada, Jaljuli, Mouawad, El Hajj",2022,https://ieeexplore.ieee.org/abstract/document/9820627,,,,,,,,,,,,,,,,"n: number of vertices
m: number of edges
k: size of vertex cover (worst case O(n))",n,,,??,,,,,,,,,,0,,0,,0,1,,,0,1,,,,,,,,,,,,,,,,,,,,,,,,,
78,Stable Matching Problem,0.001,Almost Stable Matching Problem,619,,,1,0,O(1),,,"[https://arxiv.org/pdf/0812.4893.pdf Valentin Polishchuk, and Jukka Suomela (2008)]","Valentin Polishchuk, and Jukka Suomela",2008,https://arxiv.org/pdf/0812.4893.pdf,,,,0,0,1,n: 1,$O(1+\Delta/\epsilon)$,$O(1+\Delta/\epsilon)$,,https://arxiv.org/pdf/0812.4893.pdf,??,,https://arxiv.org/pdf/0812.4893.pdf,no,"n: number of people in set
Delta: maximum number of acceptable partners for one participant (usually O(1))
eps: error term",n,,,,,words,1,n: 1,O(1),derived: must be \leq time complexity,1,0,,0,,1,2 + \epsilon,0,1,,,0,0,,,,,,,,,,,,,1,,,,,,,,,4,,,Combinatorics
78,Stable Matching Problem,0.001,Stable Matching Problem,618,,,1,1,O(n^2),,,[https://link.springer.com/content/pdf/10.1007/BF02136029.pdf S. S. TSENG and R. C. T. LEE (1984)],S. S. TSENG and R. C. T. LEE,1984,https://link.springer.com/content/pdf/10.1007/BF02136029.pdf,,,,0,0,5,n: 5,O(n^2),,,,,,,,n: number of men and number of women,n,,,Word RAM,,words,3,n: 3,$O(n)$ per processor?,Only need to keep track of current (provisional) matchings,1,0,,0,,0,,0,1,,,0,0,https://di.ku.dk/forskning/Publikationer/tekniske_rapporter/tekniske-rapporter-1997/97-05.pdf,,,,,,,,,,,,1000000,,,,,,,,,4,,,Combinatorics
78,Stable Matching Problem,1,Stable Matching Problem,620,,,1,1,O(n^{0.5}),,,"[http://theory.stanford.edu/~megiddo/pdf/soda94.pdf Tomas Feder, Nimrod Megiddo, Serge A. Plotkin (1994)]","Tomas Feder, Nimrod Megiddo, Serge A. Plotkin",1994,http://theory.stanford.edu/~megiddo/pdf/soda94.pdf,,,,0,0,2.5,n: 2.5,$O(\Delta^{0.5} \log^3(\Delta)$,$O(\Delta^{0.5} \log^3(\Delta)$,,http://theory.stanford.edu/~megiddo/pdf/soda94.pdf,$O(\Delta^{4.5} \log^3(\Delta)$?,,http://theory.stanford.edu/~megiddo/pdf/soda94.pdf,no,"n: number of men and number of women
Delta: maximum number of acceptable partners for one participant",n,,,Word RAM,,words,2.5,n: 2.5,$O(n^{0.5})$ auxiliary per processor?,bounded by runtime,1,0,,0,,0,,0,1,$\Delta^4$,,0,0,,,,,,,,,,,,,31.62,,,,,,,,,4,,,Combinatorics
78,Stable Matching Problem,0.001,Stable Matching Problem,,,,1,1,,,,[https://www.researchgate.net/publication/2757845_A_Parallel_Approach_to_the_Stable_Marriage_Problem Larsen (1997)],Larsen,1997,https://www.researchgate.net/publication/2757845_A_Parallel_Approach_to_the_Stable_Marriage_Problem,,,,,,,,,,,,,,,,"n: number of men and number of women
Delta: maximum number of acceptable partners for one participant",n,,,MIMD,,words,2.5,n: 2.5,$O(n^{0.5})$ auxiliary per processor?,bounded by runtime,1,0,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,31.62,,,,,,,,,4,,,Combinatorics
79,Longest Path,0.001,,,,,,,,,,,"Fieger, Balyo, Schulz, Schreiber",2019,https://ojs.aaai.org/index.php/SOCS/article/view/18503,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
80,Maximum Subarray Problem,1,1D Maximum Subarray,628,,,1,1,O(log n),^see above,^see above,[https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.24.1291&rep=rep1&type=pdf Perumalla and Deo (1995)],Perumalla and Deo,1995,https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.24.1291&rep=rep1&type=pdf,,,,0,0,2,n: 2,O(\log n),$O(\log n)$,,https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.24.1291&rep=rep1&type=pdf,$O(n)$,,https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.24.1291&rep=rep1&type=pdf,yes,n: length of array,n,,,EREW PRAM,110,words,3,n: 3,O(n) auxiliary,constant number of arrays as outlined in algorithm,1,0,,0,,0,,0,1,O(n/log n),,0,0,,,,,,,,,,,,,9965,,,,,,,,,3,,,Combinatorics
80,Maximum Subarray Problem,0.001,1D Maximum Subarray,629,,,1,1,O(log n),^see above,^see above,"[https://ieeexplore.ieee.org/document/6972008 Ferreira, Camargo, Song (2014)]","Ferreira, Camargo, Song",2014,https://ieeexplore.ieee.org/document/6972008,,,,0,0,2,n: 2,O(\log n),,,,,,,,n: length of array,n,,,EREW PRAM?,,words,3,n: 3,O(n) auxiliary,constant number of arrays as outlined in algorithm,1,0,,0,,0,,0,1,O(n/log n),,0,1,,,,,,,,,,,,,9965,,,,,,,,,3,,,Combinatorics
80,Maximum subarray problem,1,1-dimensional,,,,1,1,O(log n),"""Any distribution/runtime same regardless of input""",(same general behavior regardless of input),[https://www.sciencedirect.com/science/article/abs/pii/016781919400063G Wen (1995)],Wen,1995,https://www.sciencedirect.com/science/article/abs/pii/016781919400063G,,,,,,,,O(log n),$O(\log n)$,,https://www.sciencedirect.com/science/article/abs/pii/016781919400063G,$O(n)$,,https://www.sciencedirect.com/science/article/abs/pii/016781919400063G,??,n: length of array,,,,EREW PRAM,110,words,,,,,,,,0,,0,,0,1,O(n/log n),,0,0,,,,,,,,,,,,,,,,,,,,,,3,,,Combinatorics
80,Maximum subarray problem,1,2-dimensional,,,,1,1,O(log^2 n),^see above,^see above,[https://www.sciencedirect.com/science/article/pii/0167642387900347 Smith (1987)],Smith,1987,https://www.sciencedirect.com/science/article/pii/0167642387900347,,,,,,,,O(log^2 n),$O(\log^2 n)$,,https://www.sciencedirect.com/science/article/pii/0167642387900347,???,,https://www.sciencedirect.com/science/article/pii/0167642387900347,no?,n: dimension of array,,,,PRAM (not sure which type),,words,,,,,,,,0,,0,,0,1,?,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
80,Maximum subarray problem,1,2-dimensional,,,,1,1,O(log n),^see above,^see above,[https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.24.1291&rep=rep1&type=pdf KALYAN PERUMALLA and NARSINGH DEO (1995)],KALYAN PERUMALLA and NARSINGH DEO,1995,https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.24.1291&rep=rep1&type=pdf,,,,,,,,O(log n),$O(\log n)$,,https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.24.1291&rep=rep1&type=pdf,$O(n^3)$,,https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.24.1291&rep=rep1&type=pdf,yes,n: dimension of array,,,,CREW PRAM,120,words,,,,,,,,0,,0,,0,1,O(n^3 / log n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
80,Maximum subarray problem,1,2-dimensional,,,,1,1,O(log n),^see above,^see above,[https://www.sciencedirect.com/science/article/abs/pii/016781919400063G Wen (1995)],Wen,1995,https://www.sciencedirect.com/science/article/abs/pii/016781919400063G,,,,,,,,O(log n),$O(\log n)$,,https://www.sciencedirect.com/science/article/abs/pii/016781919400063G,$O(n^3)$,,https://www.sciencedirect.com/science/article/abs/pii/016781919400063G,??,n: dimension of array,,,,EREW PRAM,110,words,,,,,,,,0,,0,,0,1,O(n^3 / log n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
80,Maximum subarray problem,1,2-dimensional,,,,1,1,O(log n),,,"[https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=ab94754349b43861551a4ec5adde65381addf10c Qiu, Akl (1999)]","Qiu, Akl",1999,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=ab94754349b43861551a4ec5adde65381addf10c,,,,,,,,O(log n),$O(\log n)$,,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=ab94754349b43861551a4ec5adde65381addf10c,$O(n^3)$,,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=ab94754349b43861551a4ec5adde65381addf10c,yes,n: dimension of array,,,,"Hypercube, Star, or Pancake interconnection network",700,words,,,,,,,,0,,0,,0,1,O(n^3 / log n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
80,Maximum subarray problem,1,1-dimensional,,,,1,1,O(n/p),,,"[https://link.springer.com/chapter/10.1007/978-3-540-30218-6_24 Alves, Caceres, Song (2004)]","Alves, Caceres, Song",2004,https://link.springer.com/chapter/10.1007/978-3-540-30218-6_24,,,,,,,,O(n / p),O(n / p),,https://link.springer.com/chapter/10.1007/978-3-540-30218-6_24,$O(n)$,,https://link.springer.com/chapter/10.1007/978-3-540-30218-6_24,??,"n: dimension of array
p: number of processors",,,,BSP,400,words,,,,,,,,0,,0,,0,1,arbitrary p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
80,Maximum subarray problem,1,2-dimensional,,,,1,1,O(n^3/p),,,"[https://link.springer.com/chapter/10.1007/978-3-540-30218-6_24 Alves, Caceres, Song (2004)]","Alves, Caceres, Song",2004,https://link.springer.com/chapter/10.1007/978-3-540-30218-6_24,,,,,,,,O(n^3 / p),O(n^3 / p),,https://link.springer.com/chapter/10.1007/978-3-540-30218-6_24,$O(n^3)$,,https://link.springer.com/chapter/10.1007/978-3-540-30218-6_24,??,"n: dimension of array
p: number of processors",,,,BSP,400,words,,,,,,,,0,,0,,0,1,arbitrary p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
80,Maximum subarray problem,1,2-dimensional,,,,1,1,O(n^3/p),,,"[https://link.springer.com/chapter/10.1007/978-3-319-21404-7_29 Lima, Branco, Caceres (2015)]","Lima, Branco, Caceres",2015,https://link.springer.com/chapter/10.1007/978-3-319-21404-7_29,,,,,,,,O(n^3 / p),O(n^3 / p),,https://link.springer.com/chapter/10.1007/978-3-319-21404-7_29,$O(n^3)$,,https://link.springer.com/chapter/10.1007/978-3-319-21404-7_29,??,"n: dimension of array
p: number of processors",,,,BSP,400,words,,,,,,,,0,,0,,0,1,arbitrary p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
80,Maximum subarray problem,0.001,2-dimensional,,,,1,1,,,,"[https://scholar.google.com/scholar?cluster=18407123903621316241&hl=en&as_sdt=40000005&sciodt=0,22 Bae, Takaoka (2003)]","Bae, Takaoka",2003,"https://scholar.google.com/scholar?cluster=18407123903621316241&hl=en&as_sdt=40000005&sciodt=0,22",,,,,,,,,,,,,,,??,n: dimension of array,,,,,,words,,,,,,,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
80,Maximum subarray problem,1,2-dimensional,,,,1,1,O(n^3/p),,,[https://ir.canterbury.ac.nz/items/31430f74-3e1f-4f81-b50c-799f7efcf2f1 Bae (2007)],Bae,2007,https://ir.canterbury.ac.nz/items/31430f74-3e1f-4f81-b50c-799f7efcf2f1,,,,,,,,O(n),O(n),,https://ir.canterbury.ac.nz/items/31430f74-3e1f-4f81-b50c-799f7efcf2f1,$O(n^3)$,,https://ir.canterbury.ac.nz/items/31430f74-3e1f-4f81-b50c-799f7efcf2f1,??,n: dimension of array,,,,BSP,400,words,,,,,,,,0,,0,,0,1,O(n^2),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
80,Maximum subarray problem,1,2-dimensional,,,,1,1,O(n^3/p),,,[https://crpit.scem.westernsydney.edu.au/confpapers/CRPITV152Takaoka.pdf Takaoka (2014)],Takaoka,2014,https://crpit.scem.westernsydney.edu.au/confpapers/CRPITV152Takaoka.pdf,,,,,,,,O(n^3 / p),O(n),,https://crpit.scem.westernsydney.edu.au/confpapers/CRPITV152Takaoka.pdf,$O(n^3)$,,https://crpit.scem.westernsydney.edu.au/confpapers/CRPITV152Takaoka.pdf,yes,"n: dimension of array
p: number of processors",,,,BSP,400,words,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
80,Maximum subarray problem,1,"2-dimensional, K-maximum",,,,1,1,O(Kn),,,"[https://ieeexplore.ieee.org/abstract/document/1300488 Bae, Takaoka (2004)]","Bae, Takaoka",2004,https://ieeexplore.ieee.org/abstract/document/1300488,,,,,,,,O(Kn),O(Kn),,https://ieeexplore.ieee.org/abstract/document/1300488,$O(Kn^3)$,,https://ieeexplore.ieee.org/abstract/document/1300488,yes,"n: dimension of array
K: number of sums to return",,,,VLSI circuit (CREW PRAM?),,words,,,,,,,,0,,0,,0,1,O(n^2),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
81,Constructing Suffix Trees,1,Constructing Suffix Trees,,,,1,1,O(log n),,,"[https://dl.acm.org/doi/10.1145/12130.12152 Landau, Vishkin (1986)]","Landau, Vishkin",1986,https://dl.acm.org/doi/10.1145/12130.12152,,,,0,0,2.03,n: 2.03,O(log n),O(log n),,https://dl.acm.org/doi/10.1145/12130.12152,O(n^2)?,,,no,n: length of string,n,,,CRCW PRAM,130,words,3,n: 3,O(n),https://www.sciencedirect.com/science/article/pii/S0022000097914963,0,1,,0,,0,,0,1,O(n^2/log n),,0,0,,,,,,,,,,,,,9860.7,,,,,,,,,4,,,Combinatorics
81,Constructing Suffix Trees,1,Constructing Suffix Trees,,,,1,1,O(log n),,,"[https://link.springer.com/chapter/10.1007/3-540-18088-5_26 Landau, Schieber, Vishkin (1987)]","Landau, Schieber, Vishkin",1987,https://link.springer.com/chapter/10.1007/3-540-18088-5_26,,,,,,,,O(log n),O(log n),,https://link.springer.com/chapter/10.1007/3-540-18088-5_26,O(n log n)?,,,no,n: length of string,n,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
81,Constructing Suffix Trees,1,Constructing Suffix Trees,,,,1,1,O((log n)/eps),,,"[https://link.springer.com/article/10.1007/BF01762122 Apostolico, Iliopoulos, Landau, Schieber, Vishkin (1988)]","Apostolico, Iliopoulos, Landau, Schieber, Vishkin",1988,https://link.springer.com/article/10.1007/BF01762122,,,,0,0,2.03,n: 2.03,O((log n)/eps),O((log n)/eps),,https://link.springer.com/article/10.1007/BF01762122,O((n log n)/eps),,https://epubs.siam.org/doi/abs/10.1137/1.9781611972917.5,no,"n: length of string
eps: (exponent on space usage) - 1",n,,,CRCW PRAM,130,words,3,n: 3,O(n),https://www.sciencedirect.com/science/article/pii/S0022000097914963,0,1,,0,,0,,0,1,O(n),,0,0,,,,,,,,,,,,,9860.7,,,,,,,,,4,,,Combinatorics
81,Constructing Suffix Trees,1,Constructing Suffix Trees,,,,1,1,O(log^2(n)),,,"[https://epubs.siam.org/doi/abs/10.1137/1.9781611972917.5 Blelloch, Shun (2011)]","Blelloch, Shun",2011,https://epubs.siam.org/doi/abs/10.1137/1.9781611972917.5,,,,,,,,O(log^2(n)),O(log^2(n)),,https://epubs.siam.org/doi/abs/10.1137/1.9781611972917.5,O(n),,https://epubs.siam.org/doi/abs/10.1137/1.9781611972917.5,no?,n: length of string,n,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
81,Constructing Suffix Trees,1,Constructing Suffix Trees,635,,,1,1,O(log^4(n)),,,[https://www.sciencedirect.com/science/article/pii/S0022000097914963 Hariharan (1997)],Hariharan,1997,https://www.sciencedirect.com/science/article/pii/S0022000097914963,,,,0,0,2.03,n: 2.03,O(log^4(n)),$O(\log^4(n))$,,https://www.sciencedirect.com/science/article/pii/S0022000097914963,$O(n)$,,https://www.sciencedirect.com/science/article/pii/S0022000097914963,yes,n: length of string,n,,,CREW PRAM,120,words,3,n: 3,O(n),https://www.sciencedirect.com/science/article/pii/S0022000097914963,0,1,,0,,0,,0,1,$O(n/\log^4(n))$?,,0,0,,,,,,,,,,,,,9860.7,,,,,,,,,4,,,Combinatorics
81,Constructing Suffix Trees,1,Constructing Suffix Trees,636,,,1,1,O(log^2(n)),,,[https://link.springer.com/content/pdf/10.1007/3-540-57811-0_3.pdf Süleyman Cenk Sahinalp ; Uzi Vishkin (1994)],Süleyman Cenk Sahinalp ; Uzi Vishkin,1994,https://link.springer.com/content/pdf/10.1007/3-540-57811-0_3.pdf,,,,1,0,2.01,n: 2.01,$O(n^\epsilon)$,$O(n^\epsilon)$,,https://link.springer.com/content/pdf/10.1007/3-540-57811-0_3.pdf,$O(n \log^* n)$,,https://link.springer.com/content/pdf/10.1007/3-540-57811-0_3.pdf,no,"n: length of string
epsilon: time/space parameter",n,,,CRCW PRAM,130,words,4.01,n: 4.01,$O(n^{(1+\eps)})$ for any fixed eps>0,https://link.springer.com/content/pdf/10.1007/3-540-57811-0_3.pdf,0,1,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,99.3,100.3524673,,397.2674256,0,,893.8517077,0,,4,,,Combinatorics
81,Constructing Suffix Trees,1,Constructing Suffix Trees,637,,,1,1,O(log n),,,[https://www.cs.rutgers.edu/~farach/pubs/PRAMSuffixICALP.pdf Farach (1997)],Farach,1997,https://www.cs.rutgers.edu/~farach/pubs/PRAMSuffixICALP.pdf,,,,0,0,2,n: 2,O(\log n),$O(\log n)$,,https://people.cs.rutgers.edu/~farach/pubs/PRAMSuffixICALP.pdf,$O(n)$,,https://people.cs.rutgers.edu/~farach/pubs/PRAMSuffixICALP.pdf,yes,n: length of string,n,,,CRCW PRAM,130,words,3,n: 3,O(n),https://www.cs.rutgers.edu/~farach/pubs/PRAMSuffixICALP.pdf,0,1,,1,Las Vegas,0,,0,1,$O(n)$?,,0,0,,,,,,,,,,,,,1000,,,,,,,,,4,,,Combinatorics
81,Constructing Suffix Trees,1,Constructing Suffix Trees,638,,,1,1,O(logn),,,[https://www.researchgate.net/publication/228945502_On_parallel_transformations_of_suffix_arrays_into_suffix_trees Rytter (2004)],Rytter,2004,https://www.researchgate.net/publication/228945502_On_parallel_transformations_of_suffix_arrays_into_suffix_trees,,,,1,6->7,2,n: 2,O(\log n),$O(\log n)$,,https://www.researchgate.net/publication/228945502_On_parallel_transformations_of_suffix_arrays_into_suffix_trees,$O(n\log n)$,,https://www.researchgate.net/publication/228945502_On_parallel_transformations_of_suffix_arrays_into_suffix_trees,no,n: length of string,n,,,CREW PRAM,130,words,3,n: 3,O(n),https://www.researchgate.net/publication/228945502_On_parallel_transformations_of_suffix_arrays_into_suffix_trees,0,1,,0,,0,,0,1,$O(n)$,,0,0,,,,,,,,,,,,,9.965,1000,,19.93156857,0,,29.89735285,0,,4,,,Combinatorics
86,Graph Isomorphism Problem,0.001,Subgraph Isomorphism,665,,,1,1,"Asymptotics not given, actual times. Check",,,[https://dl.acm.org/doi/10.1145/321921.321925 Ullman (1976)],Ullman,1976,https://dl.acm.org/doi/10.1145/321921.321925,,,,1,0,#VALUE!,,,,,,,,,,"n: max number of vertices between the two graphs
m: min number of vertices between the two graphs",n,,,Word RAM,,words, 3m,"n: 3
m: 3",O(mn)?,"Stores a constant number of n*m matrices, along with a constant number of vectors of length O(m+n)",1,0,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
98,The Set-Covering Problem,1,,774,,,1,1,O(n^2),,,[https://www.semanticscholar.org/paper/An-efficient-distributed-algorithm-for-computing-Cardoso-Abreu/ce32696c1176800c5b90fab026bf93f282e2b161 Cardoso; Nuno; Abreu; Rui (2014)],Cardoso; Nuno; Abreu; Rui,2014,https://www.semanticscholar.org/paper/An-efficient-distributed-algorithm-for-computing-Cardoso-Abreu/ce32696c1176800c5b90fab026bf93f282e2b161,,,,0,0,5,n: 5,O(n^2),,,,,,,,,n,,,,,,#VALUE!,,,,,,,0,,0,,1,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
107,Point-in-Polygon,1,Point-in-Polygon,,,,,,,,,,Puri,2015,https://scholarworks.gsu.edu/cgi/viewcontent.cgi?article=1099&context=cs_diss,,,,,,,,O(log n),O(log n),,,O(n log n),,,,n: number of edges in the polygon,,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,n,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
107,Point-in-Polygon,1,Point-in-Polyhedron,,,,,,,,,,"Li, Wang",2017,https://www.sciencedirect.com/science/article/pii/S0010448517300210,,,,,,,,O(n/p),O(n/p),,,O(n),,,,n: number of edges in the polyhedron,,,,not listed,,,,,,,,,,0,,0,,0,1,p,,0,1,,,,,,,,,,,,,,,,,,,,,,,,,
107,Point-in-Polygon,1,Point-in-Polygon,,,,,,,,,,"Chen, Davis, Kruskal",1993,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=184775,,,,,,,,O(log n),O(log n),,,O(n log n),,,,n: number of edges in the polygon,,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,n,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
107,Point-in-Polygon,1,Point-in-Polygon,,,,,,,,,,"Aghajarian, Puri, Prasad (parallel ray casting)",2016,https://dl.acm.org/doi/pdf/10.1145/2996913.2996982,,,,,,,,O(n/p),O(n/p),,,O(n),,,,n: number of edges in the polygon,,,,not listed,,,,,,,,,,0,,0,,0,1,p,,0,1,,,,,,,,,,,,,,,,,,,,,,,,,
117,Maximum Cut,1,,,,,1,1,O(log n),,,[https://research.iaun.ac.ir/pd/saeed-nasri/pdfs/UploadFile_9325.pdf Akl (1989)],Akl,1989,https://research.iaun.ac.ir/pd/saeed-nasri/pdfs/UploadFile_9325.pdf,,,,,,,,O(log n),O(log n),,https://research.iaun.ac.ir/pd/saeed-nasri/pdfs/UploadFile_9325.pdf,O(n),,https://research.iaun.ac.ir/pd/saeed-nasri/pdfs/UploadFile_9325.pdf,yes,n: number of vertices,n,,,SIMD,,,,,,,,,,0,,0,,0,1,O(n/log n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
117,Maximum Cut,0.001,,,,,1,1,O(log n),,,[https://link.springer.com/chapter/10.1007/3-540-46674-6_4  (1999)],,1999,https://link.springer.com/chapter/10.1007/3-540-46674-6_4,,,,,,,,,,,,,,,,n: number of vertices,,,,CRCW PRAM,130,,,,,,,,,,,1,1.333...,0,1,O(n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
117,Maximum Cut,1,,,,,1,1,,,,[https://www.proquest.com/docview/1026593769?pq-origsite=gscholar&fromopenview=true Tangwongsan (2011)],Tangwongsan,2011,https://www.proquest.com/docview/1026593769?pq-origsite=gscholar&fromopenview=true,,,,,,,,,O(log(n+m)),,https://www.proquest.com/docview/1026593769?pq-origsite=gscholar&fromopenview=true,O(n+m),,https://www.proquest.com/docview/1026593769?pq-origsite=gscholar&fromopenview=true,,"n: number of vertices
m: number of edges",,,,PRAM,,,,,,,,,,1,Atlantic City?,0,,0,1,,,0,0,,,Section 4.3 of textbook,,,,,,,,,,,,,,,,,,,,,,
119,Determinants,1,Determinant of Matrices with Integer Entries(/over a Field of characteristic 0),,,,1,1,O((log n)^2),,,[https://epubs.siam.org/doi/10.1137/0205040 Csanky (1976)],Csanky,1976,https://epubs.siam.org/doi/10.1137/0205040,,,,,,,,O((log n)^2),O((log n)^2),,https://epubs.siam.org/doi/10.1137/0205040,O(n^4 (log n)^2)?,,,0,n: dimension of matrix,n,https://epubs.siam.org/doi/10.1137/0205040,0,CRCW PRAM?,,,,,,,,,,0,,0,,0,1,O(n^4),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
119,Determinants,1,Determinant of Matrices with Integer Entries,,,,1,1,O((log n)^2),,,"[https://www.sciencedirect.com/science/article/pii/0020019078900790 Preparata, Sarwate (1977)]","Preparata, Sarwate",1977,https://www.sciencedirect.com/science/article/pii/0020019078900790,,,,,,,,O((log n)^2),O((log n)^2),,https://www.sciencedirect.com/science/article/pii/0020019078900790,O(n^(log_2(7) + 0.5) (log n)^2)?,,,0,n: dimension of matrix,n,https://www.sciencedirect.com/science/article/pii/0020019078900790,0,CRCW PRAM?,,,,,,,,,,0,,0,,0,1,O(n^(log_2(7) + 0.5)) ~ O(n^(3.31)),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
119,Determinants,1,Determinant of Matrices with Integer Entries(/over a Field),,,,1,1,O((log n)^2),,,"[https://ieeexplore.ieee.org/abstract/document/4568376 Borodin, von zur Gathem, Hopcroft (1982)]","Borodin, von zur Gathem, Hopcroft",1982,https://ieeexplore.ieee.org/abstract/document/4568376,,,,,,,,O((log n)^2),O((log n)^2),,https://ieeexplore.ieee.org/abstract/document/4568376,??,,,0,n: dimension of matrix,n,https://ieeexplore.ieee.org/abstract/document/4568376,0,CRCW PRAM?,,,,,,,,,,0,,0,,0,1,poly(n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
119,Determinants,1,Determinant of Matrices with Integer Entries,,,,1,1,O((log n)^2),,,[https://www.sciencedirect.com/science/article/pii/0020019084900188 Berkowitz (1984)],Berkowitz,1984,https://www.sciencedirect.com/science/article/pii/0020019084900188,,,,,,,,O((log n)^2),O((log n)^2),,https://www.sciencedirect.com/science/article/pii/0020019084900188,O(n^(3.496)),,https://www.sciencedirect.com/science/article/pii/0020019084900188,0,n: dimension of matrix,n,https://www.sciencedirect.com/science/article/pii/0020019084900188,0,CRCW PRAM?,,,,,,,,,,0,,0,,0,1,O(n^(3.496))?,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
119,Determinants,1,Determinant of Matrices with Integer Entries over some Linear Space,,,,1,1,O((log k)^2) + log n + log p ,,,[https://link.springer.com/article/10.1007/BF02576204 Bini (1985)],Bini,1985,https://link.springer.com/article/10.1007/BF02576204,,,,,,,,O((log k)^2) + log n + log p ,O((log k)^2) + log n + log p ,,https://link.springer.com/article/10.1007/BF02576204,"O(max(p(n+k), n(k^2+1)) * (log n + log p + (log k)^2))?",,,0,"n: dimension of matrix
k: tensor rank minus n
p: number of linearly independent matrices generating linear space",n,https://link.springer.com/article/10.1007/BF02576204,0,CRCW PRAM?,,,,,,,,,,0,,0,,0,1,"max(p(n+k), n(k^2+1))",,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
119,Determinants,1,Determinant of Matrices with Integer Entries,,,,1,1,O((log n)^2),,,[https://www.sciencedirect.com/science/article/pii/0304397587900193 Pan (1987)],Pan,1987,https://www.sciencedirect.com/science/article/pii/0304397587900193,,,,,,,,O((log n)^2),O((log n)^2),,https://www.sciencedirect.com/science/article/pii/0020019078900790,O(n^(omega+0.5) (log n)^2)?,,,0,n: dimension of matrix,n,https://www.sciencedirect.com/science/article/pii/0020019078900790,0,CRCW PRAM?,,,,,,,,,,0,,0,,0,1,O(n^(omega + 0.5)) ~ O(n^(2.872)) (omega denotes exponent on matrix mult),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
119,Determinants,1,Determinant of Matrices with Integer Entries,,,,1,1,O((log n)^2),,,"[https://www.sciencedirect.com/science/article/pii/0020019089901737 Galil, Pan (1989)]","Galil, Pan",1989,https://www.sciencedirect.com/science/article/pii/0020019089901737,,,,,,,,O((log n)^2),O((log n)^2),,https://www.sciencedirect.com/science/article/pii/0020019089901737,o(n^(2.851) (log n)^2)?,,,0,n: dimension of matrix,n,https://www.sciencedirect.com/science/article/pii/0020019089901737,0,CRCW PRAM?,,,,,,,,,,0,,0,,0,1,o(n^(2.851)),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
119,Determinants,1,Determinant of Matrices with Integer Entries,,,,1,1,O((log n)^2),,,"[http://repository.ias.ac.in/127977/1/cj97-05.pdf Mahajan, Vinay (1997)]","Mahajan, Vinay",1997,http://repository.ias.ac.in/127977/1/cj97-05.pdf,,,,,,,,O((log n)^2),O((log n)^2),,http://repository.ias.ac.in/127977/1/cj97-05.pdf,O(n^6),,http://repository.ias.ac.in/127977/1/cj97-05.pdf,0,n: dimension of matrix,n,http://repository.ias.ac.in/127977/1/cj97-05.pdf,0,EREW PRAM (also OROW PRAM),110,,,,,,,,,0,,0,,0,1,O(n^6),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
119,Determinants,0.001,Determinant of Matrices with Integer Entries,,,,1,1,O(n^2)?,,,"[https://link.springer.com/article/10.1007/s10543-015-0547-z Beliakov, Matiyasevich (2013)]","Beliakov, Matiyasevich",2013,https://link.springer.com/article/10.1007/s10543-015-0547-z,,,,,,,,O(n^2)?,O(n^2)?,,,O(n^3),,,0,n: dimension of matrix,n,,0,CRCW PRAM?,,,,,,,,,,0,,0,,0,1,O(n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
119,Determinants,0.001,Determinant of Matrices with Integer Entries,,,,1,1,,,,"[https://ieeexplore.ieee.org/abstract/document/6618713 Almalki, Alzahrani, Alabdullatif (2013)]","Almalki, Alzahrani, Alabdullatif",2013,https://ieeexplore.ieee.org/abstract/document/6618713,,,,,,,,,,,,,,,,n: dimension of matrix,n,,0,,,,,,,,,,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
119,Determinants,1,Determinant of Hessenberg Matrices with Integer Entries,,,,1,1,O(n),,,[https://epubs.siam.org/doi/pdf/10.1137/0711048 Heller [SIMD] (1974)],Heller [SIMD],1974,https://epubs.siam.org/doi/pdf/10.1137/0711048,,,,,,,,O(n),O(n),,https://epubs.siam.org/doi/pdf/10.1137/0711048,O(n^2),,https://epubs.siam.org/doi/pdf/10.1137/0711048,0,n: dimension of matrix,n,https://epubs.siam.org/doi/pdf/10.1137/0711048,0,SIMD,,,,,,,,,,0,,0,,0,1,n,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
119,Determinants,1,Determinant of Hessenberg Matrices with Integer Entries,,,,1,1,O((log n)^2),,,[https://epubs.siam.org/doi/pdf/10.1137/0711048 Heller [MIMD] (1974)],Heller [MIMD],1974,https://epubs.siam.org/doi/pdf/10.1137/0711048,,,,,,,,O((log n)^2),O((log n)^2),,https://epubs.siam.org/doi/pdf/10.1137/0711048,O(n^4 (log n)^2)?,,,0,n: dimension of matrix,n,https://epubs.siam.org/doi/pdf/10.1137/0711048,0,MIMD,,,,,,,,,,0,,0,,0,1,O(n^4),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
119,Determinants,1,Determinant of Tridiagonal Matrices with Integer Entries,,,,1,1,O(log n),,,"[https://ieeexplore.ieee.org/abstract/document/176005 Mahmood, Lynch, Philipp (1991)]","Mahmood, Lynch, Philipp",1991,https://ieeexplore.ieee.org/abstract/document/176005,,,,,,,,O(log n),O(log n),,https://ieeexplore.ieee.org/abstract/document/176005,O(n),,,0,n: dimension of matrix,n,https://ieeexplore.ieee.org/abstract/document/176005,0,CRCW PRAM?,,,,,,,,,,0,,0,,0,1,O(n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
119,Determinants,0.001,Determinant of Matrices with Integer Entries,,,,1,1,,,,"[https://ieeexplore.ieee.org/abstract/document/6142484 Pereira, de Morais, Matsumoto (2012)]","Pereira, de Morais, Matsumoto",2012,https://ieeexplore.ieee.org/abstract/document/6142484,,,,,,,,,,,,,,,,n: dimension of matrix,n,,0,,,,,,,,,,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
120,Integer Relation,1,Integer Relation Among Reals,,,,,,,,,,"Bailey, Broadhurst",2001,https://www.ams.org/journals/mcom/2001-70-236/S0025-5718-00-01278-3/S0025-5718-00-01278-3.pdf,,,,,,,,O(n^2)*number of iterations,O(n^2)*number of iterations,,,O(n^3)*number of iterations,,,,n: number of real numbers to find integer relation for,,,,interconnection network w/ distributed shared memory,700,,,,,,,,,0,,0,,0,1,n,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
123,Logarithm Calculations,1,computing discrete logarithms in the finite field GF(p),,,,,,,,,,Sorenson,1994,https://www.sciencedirect.com/science/article/pii/S0890540184710212/pdf,,,,,,,,O(log^{2d+2} n + log^3 n),O(log^{2d+2} n + log^3 n),,,exp[O(n/log^d n)],,,,"p: a prime
B = n^{log^d n}: bound for the prime base
d: a positive constant",,,,circuit,,,,,,,,,,1,with probability 1 - o(1),0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
123,Logarithm Calculations,0,,,,,,,,,,,"Gordon, McCurley",1992,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=2dd87b56a05bdd69bc4f1d3e7e2e05530e09dd92,,,,,,,,,,,,,,,,,,,,MIMD,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
123,Logarithm Calculations,0,,,,,,,,,,,"Van Oorschot, Wiener (Pollard's rho method)",1999,https://link.springer.com/content/pdf/10.1007/PL00003816.pdf,,,,,,,,O((sqrt(πp/2)/m + 1/θ)t) expected,,,,O((sqrt(πp/2) + 1/θ)t) expected,,,,,,,,,,,,,,,,,,,,,,,1,m,,,,,,,,,,,,,,,,,,,,,,,,,,,,
123,Logarithm Calculations,0,,,,,,,,,,,"Van Oorschot, Wiener (Pollard's lambda method)",1999,https://link.springer.com/content/pdf/10.1007/PL00003816.pdf,,,,,,,,O((2sqrt(b)/m + 1/θ)t) expected,,,,O((sqrt(b) + 1/θ)t) expected,,,,,,,,,,,,,,,,,,,,,,,1,m,,,,,,,,,,,,,,,,,,,,,,,,,,,,
123,Logarithm Calculations,0,,,,,,,,,,,Pollard,2000,https://link.springer.com/content/pdf/10.1007/s001450010010.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
123,Logarithm Calculations,0,,,,,,,,,,,"Chinnici, Cuomo, Laporta, Pizzirani, Migliori, di Galeria",2000,https://www.afs.enea.it/migliori/presentation/Visita_Miur_Portici_22_4_09/ProceedingsCatania2009/7)chinnici.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
123,Logarithm Calculations,0,,,,,,,,,,,Teske,2003,https://www.sciencedirect.com/science/article/pii/S0166218X02005905,,,,,,,,O(sqrt(b − a)/p) expected,,,,O(sqrt(b − a)) expected,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
140,Solutions to Nonlinear Equations,0.001,Block bordered systems,,,,,,,,,,"ZHANG, BYRD, SCHNABEL",1992,https://epubs.siam.org/doi/pdf/10.1137/0913050,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
140,Solutions to Nonlinear Equations,0,,,,,,,,,,,"Chakraborty, Allison,  Ribbens, Watson",1993,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=219760,,,,,,,,,,,,,,,,,,,,hypercube,700,,,,,,,,,,,,,,,O(n^2 + n),,,,,,,,,,,,,,,,,,,,,,,,,,,,
140,Solutions to Nonlinear Equations,0,Block bordered systems,,,,,,,,,,"Feng, Schnabel",1993,https://www.tandfonline.com/doi/pdf/10.1080/10556789308805546,,,,,,,,,,,,,,,,,,,,not listed,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
140,Solutions to Nonlinear Equations,0,,,,,,,,,,,Hu,1996,https://link.springer.com/content/pdf/10.1007/BF02943133.pdf,,,,,,,,"(for step 1.3) each processor evaluates O(N/p) rows of the Jacobian (O(N) entries, less? bc matrix is sparse), O(N^2) for 3.2",,,,,,,,,,,,shared memory MIMD,300,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,
140,Solutions to Nonlinear Equations,0,,,,,,,,,,,White,1986,https://epubs.siam.org/doi/pdf/10.1137/0607017,,,,,,,,,,,,,,,,,,,,hypercube,700,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
140,Solutions to Nonlinear Equations,0,,,,,,,,,,,"Gan, Yang, Hu",1994,https://www.sciencedirect.com/science/article/pii/0167819194900361,,,,,,,,,,,,,,,,,,,,hypercube SIMD (CM-2),700,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
140,Solutions to Nonlinear Equations,0,,,,,,,,,,,Mukai (1EP),1981,https://www.sciencedirect.com/science/article/pii/0898122181900833/pdf,,,,,,,,E = (log \tau_{[n/k]-1}) / [(k+1)/p],(log \tau_{[n/k]-1}) / [(k+1)/p],,,E = (log \tau_{[n/k]-1}) / (k+1),,,,k: some parameter <= n,,,,MIMD,,,,,,,,,,,,,,,1,p <= k+1,,,,,,,,,,,,,,,,,,,,,,,,,,,,
140,Solutions to Nonlinear Equations,0,,,,,,,,,,,Mukai (2EP),1981,https://www.sciencedirect.com/science/article/pii/0898122181900833/pdf,,,,,,,,E = (log (k+1)) / ([(n+1)/p] + k - 1),(log (k+1)) / ([(n+1)/p] + k - 1),,,E = (log (k+1)) / (n + k),,,,k: some parameter <= n,,,,MIMD,,,,,,,,,,,,,,,1,p <= k+1,,,,,,,,,,,,,,,,,,,,,,,,,,,,
142,Polynomial Interpolation,1,2-D Finite-Field Sparse Polynomial Interpolation,,,,1,1,O((log(nt))^3),,,"[https://epubs.siam.org/doi/abs/10.1137/0219073 Grigoriev, Karpinski, Singer (1990)]","Grigoriev, Karpinski, Singer",1990,https://epubs.siam.org/doi/abs/10.1137/0219073,,,,,,,,O((log(nt))^3),O((log(nt))^3),,https://epubs.siam.org/doi/abs/10.1137/0219073,O(n^2t^6(log(nt))^5)?,,,,"n: text length (block size)
q: size of finite field
t: sparsity of polynomial",n,https://epubs.siam.org/doi/abs/10.1137/0219073,0,CRCW PRAM?,,,,,,,,,,0,,0,,0,1,O(n^2t^6(log(nt))^2),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
142,Polynomial Interpolation,1,2-D Finite-Field Sparse Polynomial Interpolation,,,,1,1,O(t^2 (log p + d))?,,,"[https://dl.acm.org/doi/abs/10.1145/1837210.1837233 Javadi, Monagan (2010)]","Javadi, Monagan",2010,https://dl.acm.org/doi/abs/10.1145/1837210.1837233,,,,,,,,O(t^2 (log p + d))?,O(t^2 (log p + d))?,,,O(t^2(log p + nd)),,https://dl.acm.org/doi/abs/10.1145/1837210.1837233,0,"n: text length (block size)
q: size of finite field
t: sparsity of polynomial
d: degree bound on polynomial",n,https://dl.acm.org/doi/abs/10.1145/1837210.1837233,0,EREW PRAM?,,,,,,,,,,0,,0,,0,1,O(n)?,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
142,Polynomial Interpolation,1,2-D Polynomial Interpolation,,,,1,1,O(log n),,,"[https://link.springer.com/article/10.1007/BF02017348 Egecioglu, Gallopoulos, Koc (1990)]","Egecioglu, Gallopoulos, Koc",1990,https://link.springer.com/article/10.1007/BF02017348,,,,,,,,O(log n),O(log n),,https://link.springer.com/article/10.1007/BF02017348,O(n^2),,https://link.springer.com/article/10.1007/BF02017348,0,n: text length (block size),n,https://link.springer.com/article/10.1007/BF02017348,0,EREW PRAM,110,,,,,,,,,0,,0,,0,1,O(n^2),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
142,Polynomial Interpolation,1,2-D Polynomial Interpolation,,,,1,1,O((n^2 log n)/p),,,"[https://www.sciencedirect.com/science/article/pii/089812219400241C Jana, Sinha (1995)]","Jana, Sinha",1995,https://www.sciencedirect.com/science/article/pii/089812219400241C,,,,,,,,O((n^2 log n)/p),O(log n),,https://www.sciencedirect.com/science/article/pii/089812219400241C,O(n^2 log n),,,0,"n: text length (block size)
p: number of processors",n,https://www.sciencedirect.com/science/article/pii/089812219400241C,0,EREW PRAM?,,,,,,,,,,0,,0,,0,1,p ( = O(n^2)),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
143,Greatest Common Divisor,1,Greatest Common Divisor,,,,1,1,O((n log log n)/(log n)),,,"[https://epubs.siam.org/doi/abs/10.1137/0216002 Kannan, Miller, Rudolph (1987)]","Kannan, Miller, Rudolph",1987,https://epubs.siam.org/doi/abs/10.1137/0216002,,,,,,,,O((n log log n)/(log n)),O((n log log n)/(log n)),,https://epubs.siam.org/doi/abs/10.1137/0216002,O(n^3(log n)(log log n)),,,0,n: sum of number of bits among the two integers,n,https://epubs.siam.org/doi/abs/10.1137/0216002,0,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,n^2(log n)^2,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
143,Greatest Common Divisor,1,Greatest Common Divisor,,,,1,1,O(n/log n),,,"[https://link.springer.com/content/pdf/10.1007/BF01840374.pdf Chor, Goldreich [CRCW] (1990)]","Chor, Goldreich [CRCW]",1990,https://link.springer.com/content/pdf/10.1007/BF01840374.pdf,,,,,,,,O(n/log n),O(n/log n),,https://link.springer.com/content/pdf/10.1007/BF01840374.pdf,O(n^(2+eps)/log n) for any eps>0,,,0,n: sum of number of bits among the two integers,n,https://link.springer.com/content/pdf/10.1007/BF01840374.pdf,0,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,n^(1+eps) for any eps>0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
143,Greatest Common Divisor,1,Greatest Common Divisor,,,,1,1,O((n log log n)/(log n)),,,"[https://link.springer.com/content/pdf/10.1007/BF01840374.pdf Chor, Goldreich [CREW] (1990)]","Chor, Goldreich [CREW]",1990,https://link.springer.com/content/pdf/10.1007/BF01840374.pdf,,,,,,,,O((n log log n)/(log n)),O((n log log n)/(log n)),,https://link.springer.com/content/pdf/10.1007/BF01840374.pdf,O(n^(2+eps)(log log n)/log n) for any eps>0,,,0,n: sum of number of bits among the two integers,n,https://link.springer.com/content/pdf/10.1007/BF01840374.pdf,0,CREW PRAM,120,,,,,,,,,0,,0,,0,1,n^(1+eps) for any eps>0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
143,Greatest Common Divisor,1,Greatest Common Divisor,,,,1,1,O(n/log k + (log n)^2(log log n)),,,[https://www.sciencedirect.com/science/article/pii/S0196677484710066 Sorenson (left shift k-ary) (1994)],Sorenson (left shift k-ary),1994,https://www.sciencedirect.com/science/article/pii/S0196677484710066,,,,,,,,O(n/log k + (log n)^2(log log n)),O((log n)^2(log log n)),,https://www.sciencedirect.com/science/article/pii/S0196677484710066,O(nk^(2+o(1))(n/log k + (log n)^2(log log n))),,,,"n: sum of number of bits among the two integers
k: even power of 2 between log n and 2^n",n,https://www.sciencedirect.com/science/article/pii/S0196677484710066,0,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,nk^(2+o(1)),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
143,Greatest Common Divisor,1,Greatest Common Divisor,,,,1,1,O(n/log k + (log n)^2(log log n)),,,[https://www.sciencedirect.com/science/article/pii/S0196677484710066 Sorenson (right shift k-ary) (1994)],Sorenson (right shift k-ary),1994,https://www.sciencedirect.com/science/article/pii/S0196677484710066,,,,,,,,O(n/log k + (log n)^2(log log n)),O((log n)^2(log log n)),,https://www.sciencedirect.com/science/article/pii/S0196677484710066,O(nk^(4+o(1))(n/log k + (log n)^2(log log n))),,,,"n: sum of number of bits among the two integers
k: any number between log n and 2^n",n,https://www.sciencedirect.com/science/article/pii/S0196677484710066,0,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,nk^(4+o(1)),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
143,Greatest Common Divisor,1,Greatest Common Divisor,,,,1,1,O(n/log n),,,[https://dl.acm.org/doi/abs/10.1145/384101.384142 Sedjelmaci (2001)],Sedjelmaci,2001,https://dl.acm.org/doi/abs/10.1145/384101.384142,,,,,,,,O(n/log n),O(n/log n),,https://dl.acm.org/doi/abs/10.1145/384101.384142,O(n^(2+eps)/log n) for any eps>0,,,,n: sum of number of bits among the two integers,n,https://dl.acm.org/doi/abs/10.1145/384101.384142,0,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,n^(1+eps) for any eps>0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
143,Greatest Common Divisor,1,Greatest Common Divisor,,,,1,1,O((n log log n)/(log n)),,,[https://www.sciencedirect.com/science/article/abs/pii/S0020019009003640 Sorenson (2010)],Sorenson,2010,https://www.sciencedirect.com/science/article/abs/pii/S0020019009003640,,,,,,,,O((n log log n)/(log n)),O((n log log n)/(log n)),,https://www.sciencedirect.com/science/article/abs/pii/S0020019009003640,O(n^(7+eps)(log log n)/log n) for any eps>0,,,,n: sum of number of bits among the two integers,n,https://www.sciencedirect.com/science/article/abs/pii/S0020019009003640,0,EREW PRAM,110,,,,,,,,,0,,0,,0,1,n^(6+eps) for any eps>0,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
145,Interval Scheduling,1,"Preemptive Scheduling on One Machine, Minimize Lateness",,,,1,1,O((log n)^2),,,"[https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1676223 Dekkel, Sahni (1983)]","Dekkel, Sahni",1983,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1676223,,,,,,,,O((log n)^2),O((log n)^2),,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1676223,O(n(log n)^2),,,,n: number of tasks (intervals),n,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1676223,0,SIMD,,,,,,,,,,0,,0,,0,1,n/2,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
145,Interval Scheduling,1,"Preemptive Scheduling on Many Machines, Minimize Lateness",,,,1,1,O(log n + (log k)^3),,,[https://www.sciencedirect.com/science/article/pii/0743731588900378 Martel (1988)],Martel,1988,https://www.sciencedirect.com/science/article/pii/0743731588900378,,,,,,,,O(log n + (log k)^3),O(log n + (log k)^3),,https://www.sciencedirect.com/science/article/pii/0743731588900378,O(n(log n + (log k)^3)),,,,"n: number of tasks (intervals)
k: number of machines (resources)",n,https://www.sciencedirect.com/science/article/pii/0743731588900378,0,CREW PRAM (Shared Memory),120,,,,,,,,,0,,0,,0,1,n,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,
145,Interval Scheduling,1,"Preemptive Scheduling on Many Machines, Minimize Lateness",,,,1,1,O(log n),,,[https://docs.lib.purdue.edu/cgi/viewcontent.cgi?article=1680&context=cstech Rodger (1988)],Rodger,1988,https://docs.lib.purdue.edu/cgi/viewcontent.cgi?article=1680&context=cstech,,,,,,,,O(log n),O(log n),,https://docs.lib.purdue.edu/cgi/viewcontent.cgi?article=1680&context=cstech,O(n log n),,,1,"n: number of tasks (intervals)
k: number of machines (resources)",n,https://docs.lib.purdue.edu/cgi/viewcontent.cgi?article=1680&context=cstech,0,CREW PRAM (Shared Memory),120,,,,,,,,,0,,0,,0,1,n,,0,0,https://www.proquest.com/docview/303730556?pq-origsite=gscholar&fromopenview=true,,,,,,,,,,,,,,,,,,,,,,,,