Old Family #,Family Name,Looked at?,Subproblem,Variation,Algo ID,Algorithm Description,Final Call,Exact Problem Statement?,Exact?,Time Complexity (Average),Average Case Distribution,Reference?,,Algorithm Name,Year,Paper/Reference Link,Constants,Derived?,Paper Reference for Constants,Time Complexity Improvement?,Transition Class,Time Complexity Class,Param: Time Class,Time Complexity (Worst Only),Parallel Algorithm Span/Depth,Span Encoding (T_1),Parallel Algorithm Span References,Parallel Algorithm Work,Work Encoding (T_inf),Parallel Algorithm Work References,Reference mentions work efficiency?,Parameter definitions,Preferred Parameter,Time Complexity Reference,Derived Time Complexity?,Computational Model,Model Encoding,Unit of Space,Space Complexity Class,Param: Space Class,Space Complexity (Auxiliary),Space Complexity Reference,Derived Space Complexity?,Space Complexity in Original Paper?,Interesting Space Complexity?,Randomized?,"Type of Randomized Algorithm (e.g. Las Vegas, Monte Carlo, Atlantic City)",Approximate?,Approximation Factor (if approximate algorithm),Heuristic-based?,Parallel?,"# of
Processors",# of Proc Encoding,Quantum?,GPU-based?,Other References,Problem Statement,Title,Authors,Notes,"Algorithm family
parameters",Description of Inputs,Ratios of input parameter sizes,Space n = 1000 value,Space n = 1000 rate,Space n = 10^6 value,Space n = 10^6 rate,Space n = 10^9 value,Space n = 10^9 rate,n = 1000 value,n = 1000 scale,n = 1000 Rate,n = 10^6 value,n = 10^6 scale,n = 10^6 Rate,n = 10^9 value,n = 10^9 scale,n = 10^9 Rate,Starting Complexity,Remarks,Papers for ratio evaluations,Domains
1,Sorting,1,Comparison Sorting,Comparison Sorting,1,,,,,,,,,odd-even sort - Batcher,1968,https://link.springer.com/article/10.1007/BF00991185,,,,,,,,$O(\log^2{n})$,$O(\log^2{n})$,2,,$O(n \log^2{n})$,12,,,n: size of list,,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1675167,,sorting network,510,,,,,,,,,0,,0,,,1,$O(n \log^2{n})$,12,,,"first found in https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1675167 
mentioned in https://dl.acm.org/doi/abs/10.1145/2514.2516#sec-ref; https://link.springer.com/chapter/10.1007/978-94-009-5315-4_5 (paper starts p184 in pdf)
classified as ""merge based multi-step"" in https://dl.acm.org/doi/pdf/10.1145/181014.192329
also https://link.springer.com/chapter/10.1007/BFb0028577",,,,,1,n is the size of the array to be sorted.,,,,,,,,99,10101.0101,,,,,,,,4,,,Combinatorics
1,Sorting,1,Comparison Sorting,Comparison Sorting,2,,,,,,,,,Bitonic sort - Batcher,1968,https://dl.acm.org/doi/abs/10.1145/1468075.1468121,,,,,,,,$O(\log^2{n})$,$O(\log^2{n})$,2,,$O(n \log^2{n})$,12,,,n: size of list,,,,sorting network,510,,,,,,,,,0,,0,,,1,$O(n \log^2{n})$,12,,,"mentioned in https://dl.acm.org/doi/abs/10.1145/2514.2516#sec-ref
also https://link.springer.com/chapter/10.1007/BFb0028577",,,,,1,n is the size of the array to be sorted.,,,,,,,,1000000,1,,,,,,,,4,,,Combinatorics
1,Sorting,1,Comparison Sorting,Comparison Sorting,3,"network sorting algo, perfect shuffle",,,,,,,,Batcher's bitonic sort using perfect shuffle - Stone,1971,https://ieeexplore.ieee.org/abstract/document/1671798,,,,,,,,$O(\log^2{n})$,$O(\log^2{n})$,2,,$O(n \log{n})$,11,,,n: size of list,,https://ieeexplore.ieee.org/abstract/document/1671798,,sorting network,510,,,,,,,,,0,,0,,,1,$n/2$,10,,,mentioned in https://dl.acm.org/doi/abs/10.1145/2514.2516#sec-ref; https://link.springer.com/chapter/10.1007/978-94-009-5315-4_5 (paper starts p184 in pdf),,,,Rezaul: The first O(log(n))-depth sorting network (AKS) was not discovered until 1983. -error should be resolved now,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,4,"n-sorter network, generalization of divide-sort-merge strategy",,,,,,,,Van Voorhis,1971,https://apps.dtic.mil/sti/citations/AD0737270,,,,,,,,$O(\log^2{n})$,$O(\log^2{n})$,2,,$O(n \log^2{n})$,12,,,n: size of list,,https://dl.acm.org/doi/abs/10.1145/2514.2516#sec-ref,,sorting network,510,,,,,,,,,0,,0,,,1,$0.25 n \log^2{n}-0.372 n \log{n}+O(n)$,12,,,mentioned in https://dl.acm.org/doi/abs/10.1145/2514.2516#sec-ref; https://link.springer.com/chapter/10.1007/978-94-009-5315-4_5 (paper starts p184 in pdf),,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,5,,,,,,,,,Shellsort on sorting networks- Pratt,1972,https://apps.dtic.mil/sti/citations/AD0740110 (pdf page 42 ish),1/1.58,,https://apps.dtic.mil/sti/citations/AD0740110,,,,,$O(\log^2{n})$,$O(\log^2{n})$,2,,$O(n \log^2{n})$,12,,,n: size of list,,,,sorting network,510,,,,,,,,,0,,0,,,1,$n/2$,10,,,,,,,"Rezaul: Should be O(n log^2(n)) work. -corrected, should be resolved",,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,6,,,,,,,,,"Parallel Neighborhood sort - Baudet, Stevenson",1975,https://kilthub.cmu.edu/articles/Optimal_sorting_algorithms_for_parallel_computers/6608162/files/12099023.pdf,,,,,,,,$O(n \log{n}/p +n)$,$O(n)$,10,,$O(n \log{n})$,11,https://kilthub.cmu.edu/articles/Optimal_sorting_algorithms_for_parallel_computers/6608162/files/12099023.pdf,"if p=log n
""optimal"" - 
speedup=p
efficiency=1","n: size of list
p: number of processors",,,,SIMD; MIMD,200,,,,,,,,,0,,0,,,1,$p=\log{n}$,1,,,,,,,"Rezaul: SIMD bounds hold for MIMD models (standard parallel machines), too. -added MIMD to model",,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,7,"shared memory parallel sorting, enumeration",,,,,,,,Muller and Preperata,1975,https://dl.acm.org/doi/pdf/10.1145/321879.321882,,,,,,,,$O(\log{n})$,$O(\log{n})$,1,,$O(n^2)$,20,,,n: size of list,,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1675167,,sorting network,510,,,,,,,,,0,,0,,,1,$O(n^2)$,20,,,"first found in https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1675167, mentioned in https://dl.acm.org/doi/abs/10.1145/2514.2516#sec-ref",,,,Rezaul: Work is O(n^2). -resolved,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,8,,,,,,,,,"Drysdale, Young",1975,https://epubs.siam.org/doi/abs/10.1137/0204022; https://drive.google.com/file/d/1Ddnx6AO0IBsr4jlVvF5bBw28Av4ucakG/view,,,,,,,,$O(\log^2{n})$,$O(\log^2{n})$,2,,$O(n \log^2{n})$,12,,,n: size of list,,,,sorting network,510,,,,,,,,,0,,0,,,1,? $O(n \log^2{n})$,12,,,,,,,Rezaul: Here is a link to the article: https://drive.google.com/file/d/1Ddnx6AO0IBsr4jlVvF5bBw28Av4ucakG/view?usp=drive_link,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-comparison Sorting; Integer Sorting,9,,,,,,,,,Parallel bucket-sort - Hirschberg (1),1977,https://dl.acm.org/doi/abs/10.1145/359576.359582,,,,,,,,$O(\log{n})$,$O(\log{n})$,1,,$O(n \log{n}),11,,,"n: size of list (integers from range {0, 1, 2, ..., m - 1})",,https://dl.acm.org/doi/abs/10.1145/359576.359582,,SIMD-SM-R,210,,,,,,,,,0,,0,,,1,$n$,10,,,space complexity: O(nm),,,,"Rezaul: This is an integer sorting algorithm with integers coming from {0, 1, 2, ..., m - 1}. -included this info, should be resolved now",,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-comparison Sorting; Integer Sorting,10,"""enumeration sorting""",,,,,,,,Parallel bucket-sort - Hirschberg (2),1977,https://dl.acm.org/doi/abs/10.1145/359576.359582,,,,,,,,$O(k \log{n})$,$O(\log{n})$,1,,$O(k \log{n} n^(1+1/k))$,16.1,,,"n: size of list
m-1: largest number in list works on arbitrary integers (and arbitrary not-necessarily integers)?
k: arbitrary int >=2",,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1675167,,SIMD-SM-R,210,,,,,,,,,0,,0,,,1,$n^(1+1/k)$,16,,,"space complexity: O(nm) O(n^2)?
first found in https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1675167",,,,"Rezaul: The paper states under the inout specification for Algorithm 3 that the input numbers can be arbitrary integers. The algorithm does bucket sort on the ""count"" values which are integers in {0, 1, 2, ..., n }. So, the space requirement should be something like O(n^2). This bound needs to be carefully verified. But the bound is not O(mn) as m is not defined for these algorithms. However, I think these algorithms (starting from Algorithm 3) work for arbitrary numbers (not necessarily integers).",,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,11,"Uses Valiant's [1975] merge technique; ""enumeration sorting"", allows fetch conflicts",,,,,,,,Preperata (1),1977,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1675167&tag=1,,,,,,,,$O(\log{n})$,$O(\log{n})$,1,,$O(n \log^2{n})$,12,,,n: size of list,,,,SIMD-SM-R ? (memory fetch conflicts),210,,,,,,,,,0,,0,,,1,$n \log{n}$,11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,12,"Uses Valiant's [1975] merge technique; ""enumeration sorting"", doesn't allow fetch conflicts",,,,,,,,Preperata (2),1977,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1675167&tag=1,,,,,,,,$C/alpha \log{n} + o(\log{n})$,$O(\log{n})$,1,,$n^(1+alpha) \log{n}$,11,,,"n: size of list
0>alpha<=1
C: constant",,,,SIMD-SM ? (no memory fetch conflicts),200,,,,,,,,,0,,0,,,1,$n^(1+alpha)$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,13,,,,,,,,,s^2-way merge sort - Thompson and Kung (1),1977,https://dl.acm.org/doi/abs/10.1145/359461.359481,,,,,,,,$O(n^0.5)$,$O(n^0.5)$,6,,$O(n^1.5)$,16,,optimal within a factor of 2 for large n,"n: size of list (n=mxm, m assumed to be power of 2)",,,,"similar to ILLIAC IV machine, SIMD, mesh-connected array",200,,,,,,,,,0,,0,,,1,$n$,10,,,mentions lower bound,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,14,,,,,,,,,adaptation of Batcher's bitonic merge sort - Thompson and Kung (2),1977,https://dl.acm.org/doi/abs/10.1145/359461.359481,,,,,,,,$O(n^0.5)$,$O(n^0.5)$,6,,$O(n^1.5)$,16,,optimal within a factor of 4.5,"n: size of list (n=mxm, m assumed to be power of 2)",,,,"similar to ILLIAC IV machine, SIMD, mesh-connected array",200,,,,,,,,,0,,0,,,1,$n$,10,,,mentions lower bound,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,15,Hardware sorter,,,,,,,,"Rebound sort - Chen, Lum, Tung ",1978,"https://dl.acm.org/doi/abs/10.5555/1286643.1286685 //
https://drive.google.com/file/d/1LOwpJ7Ct7aSE07Ks0xPWbXtSx2DUZP1p/view?usp=sharing (section 2.2.3)",4,,,,,,,$O(n)$,$O(n)$,10,,$O(n^2)$,20,,,n: size of list,,,,hardware sorter,520,,,,,,,,,0,,0,,,1,$n-1$,10,,,,,,,Rezaul: Section 2.2.3 of the following thesis describes (with performance bounds) the rebound-sorter from Cehn et al.'s 1978 paper: https://drive.google.com/file/d/1LOwpJ7Ct7aSE07Ks0xPWbXtSx2DUZP1p/view?usp=sharing,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,16,,,,,,,,,"Odd-even transposition sort w/ uniform ladder - Chen, Eswaran, Lum, Tung",1978,https://link.springer.com/article/10.1007/BF00991635,,,,,,,,$(n+1)/2$,$O(n)$,10,,$O(n^2)$,20,,,n: size of list,,,,hardware sorter,520,,,,,,,,,0,,0,,,1,$n-1$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,17,,,,,,,,,Todd,1978,https://ieeexplore.ieee.org/abstract/document/5390917,,,,,,,,$2n+\log{n}-1$,$O(n)$,10,,$O(n\log{n})$,11,,,n: size of list,,,,hardware sorter,520,,,,,,,,,0,,0,,,1,$\log{n}$,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,18,adaptation of Batcher's bitonic sort on a mesh-connected processor array,,,,,,,,Nassimi and Sahni,1979,https://ieeexplore.ieee.org/abstract/document/1675216,,,,,,,,$O(n^0.5)$,$O(n^0.5)$,6,,$O(n^1.5)$,16,,,n: size of list,,,,SIMD,200,,,,,,,,,0,,0,,,1,$n$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,19,network sorter,,,,,,,,Preperata and Vuillemin,1979,https://ieeexplore.ieee.org/abstract/document/4568010,,,,,,,,$O(\log^2{n})$,$O(\log^2{n})$,2,,$O(n\log^2{n})$,12,,,n: size of list,,,,"network sorter; ""compliant with VLSI design""; Cube connected cycles",510,,,,,,,,,0,,0,,,1,$n$,10,,,mentioned in https://link.springer.com/chapter/10.1007/978-94-009-5315-4_5 (paper starts p184 in pdf),,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,20,"Hardware sorter; block access memory, has two processor-to-processor interconnections",,,,,,,,odd-even sort - Hsiao and Menon (1),1980,https://apps.dtic.mil/sti/citations/ADA090192,,,,,,,,$O(n/p \log{n/p} + n)$,$O(n)$,10,,$O(n \log{n/p} + np)$,11,,YES,"n: size of list
p: number of processors
n restricted (only) to memeory size of each processor = n/p",,,,hardware sorter ?,520,,,,,,,,,0,,0,,,1,$p$,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,21,"Hardware sorter; block access memory, has two processor-to-processor interconnections",,,,,,,,modified Stone sort - Hsiao and Menon (2),1980,https://apps.dtic.mil/sti/citations/ADA090192,,,,,,,,$O(n/p \log{n/p} + n/p \log^2{p})$,$O(\log^2{n})$,2,,$O(n \log{n/p} + n \log^2{p})$,11,,YES,"n: size of list
p: number of processors
p - has to be a power of 2
n restricted (only) to memeory size of each processor = n/p",,,,hardware sorter ?,520,,,,,,,,,0,,0,,,1,$p$,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,22,hardware sorter; only works for specific number of processors - once built works only for the given value of p,,,,,,,,specialized minimum time sort - Hsiao and Menon (3),1980,https://apps.dtic.mil/sti/citations/ADA090192,,,,,,,,$O(n/p \log{n/p})$,$O(1)$,1,,$O(n \log{n/p})$,11,,YES,"n: size of list
p: number of processors
n restricted (only) to memeory size of each processor = n/p",,,,hardware sorter ?,520,,,,,,,,,0,,0,,,1,$p$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,23,,,,,,,,,"sorting on two or more ladders - Chin, Fok",1980,https://ieeexplore.ieee.org/abstract/document/1675633,,,,,,,,$2n+1$,$O(n)$,10,,$O(n^2)$ ?,20,,,"m: loops per ladder
n: size of list",,,,hardware sorter,520,,,,,,,,,0,,0,,,1,$O((n-1)(m-1))$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,24,,,,,,,,,Kim,1980,https://koasas.kaist.ac.kr/handle/10203/33490,,,,,,,,,,,,,,,,"n: size of list
p: number of processors",,,,SIMD,200,,,,,,,,,0,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,25,two round sorting,,,,,,,,Haggkvist and Hell,1981,https://epubs.siam.org/doi/abs/10.1137/0210034,,,,,,,,2 // O(1),$O(1)$,0,,$O(n^(3/2) \log{n})$,16.1,,,,,https://link.springer.com/chapter/10.1007/978-94-009-5315-4_5,,sorting network,510,,,,,,,,,0,,0,,,1,$O(n^(3/2) \log{n})$,16.1,,,"mentioned in https://link.springer.com/chapter/10.1007/978-94-009-5315-4_5 (paper starts p184 in pdf)
mentions lower bounds",,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,26,,,,,,,,,Lee et al.,1981,https://ieeexplore.ieee.org/abstract/document/1675805,,,,,,,,$2n$,$O(n)$,10,,$O(n^2)$,20,,,n: size of list,,,,hardware sorter,520,,,,,,,,,0,,0,,,1,$n/2$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,27,,,,,,,,,Shiloach and Vishkin,1981,https://link.springer.com/chapter/10.1007/BFb0105127,,,,,,,,"$O(n/p log n + log n log p)$ for $p<=n$
$O(log^2(n)/log(p/n) + log n)$ for $p>=n$",$O(\log{n})$,1,,$O(n log n)$ if p<n or $O(p log n)$ if p>=n,11,,"optimal for p<=n/log n,
same result for p=ceiling(n^(1+1/k)) as Hirschberg '78 and Preperata '78","n: size of list
p: number of processors",,,,SIMD-R ??,210,,,,,,,,,0,,0,,,1,$p$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,28,randomized,,,0,,,https://ieeexplore.ieee.org/abstract/document/4568337,,Reischuk,1981,https://ieeexplore.ieee.org/abstract/document/4568337,,,,,,,,$O(\log{n})$,$O(\log{n})$ expected,1,,$O(n \log{n})$ expected,11,,,n: size of list,,,,CREW PRAM,130,,,,,,,,,1,,0,,,1,$n$,10,,,mentioned in https://link.springer.com/chapter/10.1007/978-94-009-5315-4_5 (paper starts p184 in pdf),,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,29,hardware sorter,,,,,,,,Dohi et al.,1982,https://dl.acm.org/doi/abs/10.1145/1067649.801730,,,,,,,,n b tau (a+1+(n-l)/2^(l-1)),n b tau (a+1+(n-l)/2^(l-1)),,,2^l n b tau (a+1+(n-l)/2^(l-1)),,,,"n: size of list (power of two)
b: length of data items in bytes
l: level of bottom processors
tau=1/T: average time to send byte from node after sorting
M: bus transfer rate
a=T/M",,,,hardware sorter,520,,,,,,,,,0,,0,,,1,2^l,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,30,,,,,,,,,Parallel enumeration sorting scheme - Yasuura et al.,1982,https://ieeexplore.ieee.org/abstract/document/1675943,,,,,,,,$2n$,$O(n)$,10,,$O(n^2)$,20,,,"n: size of list (has integer keys, binary representation)",,,,hardware sorter,520,,,,,,,,,0,,0,,,1,$n$,10,,,,,,,"Rezaul: When sorting a sequence of length n using a single sorter of size m >= n (i.e., containing m cells/processors) the time required is O(n). This is optimal assuming that the input sequence must be fed to the sorter sequentially. The paper seems to mean that data is transferred from the memory to the sorter sequentially but it does not clearly state if multiple sequences can be read from memory simultaneously. When n > m, then the input sequence is divided into n/m segments and the single sorter is used once for each of (n/m)^2 pairs of segments. Since the sorter takes O(m) time every time it is used, total time complexity is O(n^2/m). The time complexity can be reduced by using multiple sorters in parallel. However, the way they describe it is a bit confusing. The paper says that (n/m)^2 sorters will be used in parallel. But doing so will require simultaneously accessing (n/m) segments from the memory. That will require only O(m) time for reading the input and computing the c_ij values. Seems like the O(n) time complexity comes from writing the c_i values sequentially to the memory. To me it seems like one can use only n/m sorters in a pipelined sequence (like a single sorter of size n composed of n/m sorters of size m each put in sequence) and read the input only once from the memory and execute the entire algorithm like the algorithm for the original m >= n case. This will require only O(n) time. ",,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,31,,,,,,,,,"N&S sort - Nassimi, Sahni",1982,https://dl.acm.org/doi/pdf/10.1145/322326.322329,,,,,,,,$O(k \log{n})$,$O(\log{n})$,1,,$O(n^(1+1/k) k \log{n})$,15.012,,,"n: size of list (power of two ?)
1<=k<=log n",,,,"network sorter, SIMD (Cube connected and perfect shuffle)",200,,,,,,,,,0,,0,,,1,n^(1+1/k),15.011,,,"classified as ""merge based multi-step"" in https://dl.acm.org/doi/pdf/10.1145/181014.192329",,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,32,,,,,,,,,"Cheung, Dhall, Lakshmivarahan, Miller, Walker",1982,https://dl.acm.org/doi/abs/10.1145/800174.809751,,,,,,,,$O(n)$,$O(n)$,10,,$O(n\log{n})$,11,,,n: size of list,,,,binary tree network - sorting network,510,,,,,,,,,,,,,,1,$O(\log{n})$,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,33,"""sorting network""; expander graphs, epsilon-halving, epsilon-nearsort",,,,,,,,"Ajtai, Komlos, Szemeredi (AKS)",1983,https://dl.acm.org/doi/pdf/10.1145/800061.808726,"""very large""; ""unsuitable for actual implementation""",,https://dl.acm.org/doi/pdf/10.1145/800061.808726,,,,,$O(\log{n})$,$O(\log{n})$,1,https://dl.acm.org/doi/pdf/10.1145/800061.808726,$O(n \log^2{n})$ ?,12,https://dl.acm.org/doi/pdf/10.1145/800061.808726,,n: size of list,n,,,"""comparator network - deterministic sequence of switches"" ??",510,,,,,,,,,0,,0,,,1,$n \log{n}$,11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,34,,,,,,,,,Kumar and Hirschberg,1983,https://ieeexplore.ieee.org/abstract/document/1676217,,,,,,,,11n^(1/2)t_r+2log n^(1/2) t_c +5/2 n^(1/2) t_e,11n^(1/2)t_r+2log n^(1/2) t_c +5/2 n^(1/2) t_e,6,,11n^(3/2)t_r+2nlog n^(1/2) t_c +5/2 n^(3/2) t_e,16,,,"n: size of list
t_r: routing time
t_c: compare-exchange time
t_e: exchange time",,,,"network sorter, SIMD ?",200,,,,,,,,,0,,0,,,1,$n$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,35,,,,,,,,,Kruskal,1983,https://ieeexplore.ieee.org/abstract/document/1676138/authors#authors,,,,,,,,1.893 log n loglog n / logloglog n,ceiling(log n/log G)((G-1)/floor(p/n)+log((G-1)/floor(p/n))+3/log3 loglog(p^2/n) +6) +O(Gn/p) = ??,,https://ieeexplore.ieee.org/abstract/document/1676138/authors#authors,$O(n \log{n} \log{\log{n}} / \log{\log{\log{n}}}),11.09,,,"n: size of list
p: number of processors
G: number of processor groups",,,,CREW PRAM,120,,,,,,,,,0,,0,,,1,$n$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,36,,,,,,,,,Akl,1983,https://link.springer.com/article/10.1007/BF02243071,,,,,,,,$O(n^\epsilon)$,approaching O(1) ?,5.02,,$O(n \log{n})$,11,https://link.springer.com/article/10.1007/BF02243071,,"n: size of list
0<epsilon<1",,,,SIMD,200,,,,,,,,,0,,0,,,1,$n^(1-\epsilon)$,8.31,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,37,randomized,,,,O(log n),,,,Reif and Valiant,1983,https://dl.acm.org/doi/abs/10.1145/800061.808727,,,,,,,,$O(\alpha \log{n}) w/ high (1-n^(-alpha)) probability for big alpha,$O(\log{n})$ expected,1,,$O(n \log{n})$ expected,11,,,n: size of list,,,,sorting network,510,,,,,,,,,0,,0,,,1,$n$,10,,,mentioned in https://link.springer.com/chapter/10.1007/978-94-009-5315-4_5 (paper starts p184 in pdf),,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,38,,,,,,,,,"Miranker, Tang, Wong",1983,https://ieeexplore.ieee.org/abstract/document/5390461,,,,,,,,$O(n)$,$O(n)$,10,,$O(n^2)$,20,,,n: size of list,,,,hardware sorter,520,,,,,,,,,0,,0,,,1,$O(n)$,10,,,,,,,"Rezaul: Performs \Theta(n^2) work in \Theta(n) parallel time to sort n numbers. -added information, resolved",,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,39,,,,,,,,,Bollobas and Thomason,1983,https://www.sciencedirect.com/science/article/pii/0166218X83900951,,,,,,,,2 // $O(1)$,$O(1)$,0,,$O(\lfloor n^1.5 \log{n} \rfloor)$,,,,n: size of list,,https://link.springer.com/chapter/10.1007/978-94-009-5315-4_5,,sorting network,510,,,,,,,,,,,,,,1,$O(\lfloor n^1.5 \log{n} \rfloor)$,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,40,,,,,,,,,Cyclic sort - Johnsson (1),1984,http://cs-www.cs.yale.edu/publications/techreports/tr439.pdf,,,,,,,,"O(n log n/p) when p<<n
O(log^2(n)) when n~=p",$O(\log^2{n})$,2,,"O(np log n/p) when p<<n
O(nlog^2(n)) when n~=p",11,,,"n: size of list
p: number of processors (power of 2)",,,,MIMD,300,,,,,,,,,0,,0,,,1,p,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,41,,,,,,,,,Consecutive sort - Johnsson (2),1984,http://cs-www.cs.yale.edu/publications/techreports/tr439.pdf,,,,,,,,"O(n log n/p) when p<<n
O(log^2(n)) when n~=p",$O(\log^2{n})$,2,,"O(np log n/p) when p<<n
O(nlog^2(n)) when n~=p",11,,,"n: size of list
p: number of processors (power of 2)",,,,MIMD,300,,,,,,,,,0,,0,,,1,p,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-Comparison Sorting;,42,,,,,,,,,Bucket sort - Johnsson (3),1984,http://cs-www.cs.yale.edu/publications/techreports/tr439.pdf,,,,,,,,"O(n/p+L) when p<=L
O(n/p+L+log p log L) when p>L",O(n/p+L+log p log L) when p>L,,,"O(n+pL) when p<=L
O(n+pL+plog p log L) when p>L",,,,"n: size of list
p: number of processors (power of 2)
L: number of buckets elements are sorted into",,,,MIMD,300,,,,,,,,,0,,0,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,43,,,,,,,,,"re-circulating systolic sorter (RSS) - Wong, Ito",1984,https://academic.oup.com/comjnl/article/27/3/260/367818,,,,,,,,$O(n)$,$O(n)$,10,,$O(n^2)$,20,,,n: size of list,,,,sorting network,510,,,,,,,,,0,,0,,,1,$O(n)$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-Comparison Sorting; Integer Sorting,44,integer sort,,,,,,,,Reif,1985,https://ieeexplore.ieee.org/abstract/document/4568176,,,,,,,,$O(\log{n})$,$O(\log{n})$ expected,1,,$O(n)$ expected,10,,"""optimal"" - efficiency=1",n: size of list,,,,Parallel RAM,100,,,,,,,,,1,,0,,,1,$n/ \log{n}$,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,45,,,,,O(log n),,,,Reischuk,1985,https://epubs.siam.org/doi/abs/10.1137/0214030,,,,,,,,$O(\log{n})$ whp,$O(\log{n})$ expected,1,,$O(n \log{n})$ expected,11,,,n: size of list,,,,PRAM,100,,,,,,,,,1,,0,,,1,$n$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,46,,,,,,,,,n-sorter - Tseng and Lee,1985,https://link.springer.com/article/10.1007/BF00991185,,,,,,,,$O(n \log^2{mn} / \log^2{n})$,$O(n \log^2{mn} / \log^2{n})$,,,$O(n^{\log{m}/ \log{n}} \log^2{mn} / \log^2{n})$,,,,"n: arbitrary number
nm: size of list
k: number of n sorters (?)",,,,hardware sorter ?,520,,,,,,,,,0,,0,,,1,nm,10,,,,,,,"Rezaul: The summations on page 465 leads to bounds that are tighter than the bounds given in the paper. The total number of n-sorter required is O(m * (log(m) / log(n))^2) as opposed to O(m * (log(mn))^2) given in the paper, and the time complexity is O(n * (log(m) / log(n))^2) as opposed to O(n * (log(mn))^2). The summation given for the number of n-sorters should go from i = 1 to k (instead of i = 0 to k - 1). The solution to the recurrence M(nm) is correct. The analysis given in the paper basically shows that the algorithm sorts n^k numbers using \Theta((n^{k-1}) k^2)  n-sorters, and assuming an n-sorter takes O(1) time to execute the time complexity of the algorithm is \Theta(n k^2). In that case, the total work is asymptotically the same as the total number of n-sorters needed, i.e., \Theta((n^{k-1}) k^2). Since mn = n^k, we have k = log(mn) / log(n) = 1 + log(m)/log(n).",,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,47,,,,,,,,,"Lang, Schimmler, Schmeck and Schroder",1985,https://ieeexplore.ieee.org/abstract/document/1676603/,7,,https://ieeexplore.ieee.org/abstract/document/1676603/,,,,,$O(n^(1/2))$,$O(n^(1/2))$,6,,$O(n^(3/2))$,16,,,n: size of list,,,,network or hardware (VLSI) sorter ?,520,,,,,,,,,0,,0,,,1,n,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-Comparison Sorting,48,,,,,,,,,"Owens, JaJa",1985,https://ieeexplore.ieee.org/abstract/document/5009391,,,,,,,,$O(n +n^2/p^2)$,$O(n)$,10,,$O(np +n^2/p)$,20,,,"n: size of list
p: number of processors
1<=p<=n",,,,sorting network (serial memories),510,,,,,,,,,0,,0,,,1,p,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-Comparison Sorting,49,,,,,,,,,"Owens, JaJa",1985,https://ieeexplore.ieee.org/abstract/document/5009391,,,,,,,,$O(n/p^{1/2} +n^2/p^2)$,$O(n^{1/2})$,6,,$O(n p^{1/2} +n^2/p)$,20,,,"n: size of list
p: number of processors
1<=p<=n",,,,sorting network (serial memories),510,,,,,,,,,0,,0,,,1,p,16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,50,,,,,,,,,Rudolph,1985,https://ieeexplore.ieee.org/abstract/document/5009383,,,,,,,,$O(\log^2{n})$,$O(\log^2{n})$,2,,$O(n \log^2{n})$,12,,,n: size of list,,,,sorting network (fault tolerant),510,,,,,,,,,0,,0,,,1,$n/2$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,51,,,,,,,,,Han,1985,http://h.web.umkc.edu/hanyij/html/research/icpp85.pdf,,,,,,,,$O(1/ \alpha \log{n})$,$O(\log{n} \log{\log{n}})$,1.1,,$O(1/ \alpha n \log^(\alpha+1){n})$,,,,"n: size of list
alpha: arbitrary positive number <1
but O(log n loglog n)<=O(1/alpha log n) ??",,,,CREW PRAM,120,,,,,,,,,0,,0,,,1,$O(n \log^\alpha{n})$,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-comparison Sorting; Integer Sorting,52,,,,,,,,,"Wagner, Han",1986,http://h.web.umkc.edu/hanyij/html/research/icpp86.pdf,,,,,,,,O(ceiling(log m/ log(n/p + log p))(n/p+log p),"O(celing(log m/loglog n)log n) ?? [assumed n=p, could have a better result]",,,O(ceiling(log m/ log(n/p + log p))(n+p log p),,,yes,"n: size of list (ints in range 1,2,...m)
p: number of processors",,,,"EREW, CREW PRAM",110,,,,,,,,,0,,0,,,1,$p$,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,53,,,,,,,,,"Schnorr, Shamir",1986,https://dl.acm.org/doi/pdf/10.1145/12130.12156,3,https://dl.acm.org/doi/pdf/10.1145/12130.12156,,,,,,$O(n^{1/2})$,$O(n^{1/2})$,6,,$O(n^{3/2})$ ?,16,,,n: size of list,,,,"sorting network, suitable for VLSI",510,,,,,,,,,0,,0,,,1,$n$ ?,10,,,also mentions lower bounds,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,54,,,,,,,,,Kunde,1986,https://link.springer.com/chapter/10.1007/3-540-16811-7_187,12,https://link.springer.com/chapter/10.1007/3-540-16811-7_187,,,,,,$O(n^{1/3})$,$O(n^{1/3})$,5.6,,$O(n^{4/3})$,15.4,,,n: size of list,,,,sorting network,510,,,,,,,,,0,,0,,,1,$n$ ?,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,55,,,,,,,,,"2-way sorter - Akl, Schmeck",1986,https://www.sciencedirect.com/science/article/pii/0167819186900037?via%3Dihub,,,,,,,,((ceiling(m/2)+1)n+k)t,,,,,,,,"n: length of each sequence
m: number of sequences
k: bits of each number in sequence
a: area of bit-level building block
t: time of bit-level building block",,,,hardware sorter; systolic architecture,,,,,,,,,,,,,,,,area=n(k+1)a/2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,56,,,,,,,,,"Alon, Azar, Vishkin",1986,https://ieeexplore.ieee.org/abstract/document/4568241,,,,,,,,k rounds,O(1) ?,,,O(n^(1+1/k)) expected,,,,"n: size of list
p: number of processors
k: number of rounds (k>=1)",,,,PRAM,,,,,,,,,,1,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-Comparison Sorting; Integer Sorting,57,,,,,,,,,"Tsukennan, Gray, Stewart, Uren, Vaughan",1986,https://citeseerx.ist.psu.edu/viewdoc/download?repid=rep1&type=pdf&doi=10.1.1.588.7564,,,,,,,,$O(\log{n})$,$O(\log{n})$,1,,$O(n \log{\log{n}} $,10.1,,,n: number of integers (of size polynomial in n),,,,CRCW PRAM,130,,,,,,,,,0,,0,,,1,$O(n \log{log{n}}/ \log{n})$,9.05,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-Comparison Sorting; Integer Sorting,58,,,,,,,,,Hagerup,1987,https://www.sciencedirect.com/science/article/pii/0890540187900629,,,,,,,,$O(\log{n})$,$O(\log{n})$,1,,$O(n \log{\log{n}} $,10.1,,yes,n: size of list,,,,CRCW PRAM,130,,,,,,,,,0,,0,,,1,$O(n \log{log{n}}/ \log{n})$,9.05,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,59,,,,,,,,,"Akl, Santoro",1987,https://ieeexplore.ieee.org/abstract/document/5009478,,,,,,,,$O(\log^2{p}+n/p \log{n})$,$O(\log^2{n})$ ??,2,,$O(n \log{n})$,11,,optimal when p<=n/log^2(n),"n: size of list
p: number of processors",,,,EREW PRAM,110,,,,,,,,,0,,0,,,1,p,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,60,,,,,,,,,paralleldouble distributive partitioning sort - Noga,1987,https://link.springer.com/article/10.1007/BF01933729,,,,,,,,$O(n)$,$O(n)$,10,,$O(n^2)$,20,,,"n: size of list
p: number of processors",,,,MIMD,300,,,,,,,,,0,,0,,,1,p,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,61,,,,,,,,,Kunde,1988,https://link.springer.com/chapter/10.1007/BFb0040409,,,,,,,,$rn+O(n^{1-1/r})$,$rn+O(n^{1-1/r})$,,,$rn^2+O(n^{2-1/r})$,,,yes,"n: size of list
r: dimensions of processor mesh",,,,MIMD + describes comp model w/ assumptions,300,,,,,,,,,0,,0,,,,n,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,62,,,1,1,O(logn),,,[https://epubs.siam.org/doi/abs/10.1137/0217049 Parallel Merge Sort - Cole (1) (1988)],Parallel Merge Sort - Cole (1),1988,https://epubs.siam.org/doi/abs/10.1137/0217049,2-May,,https://epubs.siam.org/doi/abs/10.1137/0217049,,,,,$O(\log{n})$,$O(\log{n})$,1,https://epubs.siam.org/doi/abs/10.1137/0217049,$O(n \log{n})$,11,https://epubs.siam.org/doi/abs/10.1137/0217049,yes?,n: size of list,,,,CREW PRAM,120,words,,,,,,,,0,,0,,0,1,n,10,0,0,"classified as ""merge based multi-step"" in https://dl.acm.org/doi/pdf/10.1145/181014.192329",A sorting algorithm is an algorithm that puts elements of a list in a certain order.,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting ,1,Comparison Sorting,Comparison Sorting,63,,,1,1,O(logn),,,[https://epubs.siam.org/doi/abs/10.1137/0217049 Parallel Merge Sort - Cole (2) (1988)],Parallel Merge Sort - Cole (2),1988,https://epubs.siam.org/doi/abs/10.1137/0217049,5,,https://epubs.siam.org/doi/abs/10.1137/0217049,,,,,$O(\log{n})$,$O(\log{n})$,1,https://epubs.siam.org/doi/abs/10.1137/0217049,$O(n \log{n})$,11,https://epubs.siam.org/doi/abs/10.1137/0217049,yes?,n: size of list,,,,EREW PRAM,110,words,,,,,,,,0,,0,,0,1,n,10,0,0,"classified as ""merge based multi-step"" in https://dl.acm.org/doi/pdf/10.1145/181014.192329",A sorting algorithm is an algorithm that puts elements of a list in a certain order.,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,64,,,,,,,,,Francis and Mathieson,1988,https://ieeexplore.ieee.org/abstract/document/9738,,,,,,,,$O(n \log{n}/p + n \log{p}/p)$,$O(\log{n})$,1,,$O(n \log{n})$,11,,yes,"n: size of list
p: number of processors",,,,MIMD,300,,,,,,,,,0,,0,,,1,p,10,,,space complexity = 2n,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,65,,,,,,,,,parallel shellsort - Quinn,1988,https://www.sciencedirect.com/science/article/pii/0167819188900750,,,,,,,,$O(n^{3/2})$,$O(n^{3/2})$,16,,$O(p n^{3/2})$,,,,"n: size of list
p: number of processors",,,,"""tightly coupled multiprocessor model""",300,,,,,,,,,0,,0,,,1,$p$,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,66,,,,,,,,,Quicksort with quickmerge - Quinn,1988,https://www.sciencedirect.com/science/article/pii/0167819188900750,,,,,,,,$O((n/p)^2+p \log{n/p}+n \log{p} + p)$,O(n \log{n}),11,,$O(n^2/p+p^2 \log{n/p}+np \log{p} + p^2)$,20,,,"n: size of list
p: number of processors",,,,"""tightly coupled multiprocessor model""",300,,,,,,,,,0,,0,,,1,p,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,67,,,,,,,,,"Balanced bin sort - Won, Sahni",1988,https://link.springer.com/article/10.1007/BF00156678,,,,,,,,O((n/p)^2+p log p) ?,O(n log n) ?,,,O(n^2/p+p^2 log p) ?,,,,"n: size of list
p: number of processors",,,,"sorting network, hypercube multicomputer",,,,,,,,,,,,,,,1,p,,,,discusses space complexity,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,68,,,,,,,,,Jagadish,1988,https://www.computer.org/csdl/proceedings-article/iccd/1988/00025654/12OmNwdtwk0,,,,,,,,$O(n)$,$O(n)$,10,,$O(np)$,,,,"n: size of list
p: number of processors $p>=O(n/p)$",,,,nearest neighbor connected array; MIMD,300,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,69,,,,,,,,,"Saxena, Bhatt, Prasad",1988,https://link.springer.com/content/pdf/10.1007/3-540-50517-2_77.pdf,,,,,,,,$O(\log{n}/\log{\log{m}})$,$O(\log{n}/\log{\log{n}})$,0.9,,$O(nm \log{n}/\log{\log{m}})$,,,,"n: size of list
m: uses m-way merge??
$\log{m}/\log{\log{m}}>=\log{\log{n}}$",,,,CRCW SIMD?,220,,,,,,,,,,,,,,1,$O(nm)$,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-Comparison Sorting; Integer Sorting,70,,,,,O(log n),,,,"Rajesekaran, Reif",1989,https://epubs.siam.org/doi/abs/10.1137/0218041,,,,,,,,$O(\alpha \log{n})$ w/ high $(1-n^(-\alpha))$ probability,$O(\log{n})$ expected,1,,$O(n)$ expected,10,,,"n: size of list
\alpha>1",,,,CRCW PRAM,130,,,,,,,,,1,,0,,,1,$n/ \log{n}$,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,71,,,,,O(log n /loglog n),,,,"Rajesekaran, Reif",1989,https://epubs.siam.org/doi/abs/10.1137/0218041,,,,,,,,$O(\alpha \log{n} / \log{\log{n}})$ w/ high $(1-n^{-\alpha})$ probability,$O(\log{n}/ \log{log{n}})$ expected,0.9,,$O(n(\log{n})^(1+\epsilon)/ \log{\log{n}})$ expected,11.41,,,"n: size of list
epsilon>0
alpha>1",,,,CRCW PRAM,130,,,,,,,,,1,,0,,,1,$n (\log{n})^\epsilon,10.04,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-Comparison Sorting; Integer Sorting,72,,,,,O(log n /loglog n),,,,"Rajesekaran, Reif",1989,https://epubs.siam.org/doi/abs/10.1137/0218041,,,,,,,,$O(\alpha \log{n} / \log{log{n}}) w/ high $(1-n^{-\alpha})$ probability,$O(\log{n}/ \log{log{n}})$ expected,0.9,,$O(n \log{\log{n}})$ expected,10.1,,,"n: size of list
alpha>1",,,,CRCW PRAM,130,,,,,,,,,1,,0,,,1,$n(\log{\log{n}})^2/\log{n}$,9.06,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,73,,,,,,,,,"shearsort - Scherson, Sen",1989,https://ieeexplore.ieee.org/abstract/document/16500,,,,,,,,,,,,,,,,,,,,"SIMD, MIMD",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,74,,,,,,,,,"Hagerub, Rub",1989,https://www.sciencedirect.com/science/article/pii/0020019089901385,,,,,,,,$O(\log^2{n})$,$O(\log^2{n})$,2,,$n \log{n} +O(n \log{\log{n}})$,11,https://www.sciencedirect.com/science/article/pii/0020019089901385,yes,,,,,EREW PRAM,110,,,,,,,,,0,,0,,,1,$O(n/ \log{n})$,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,75,,,1,1,O(log²n),,,"[https://epubs.siam.org/doi/abs/10.1137/0218014 Bitonic Merge Sort Parallel Implementation - Bilardi, Nicolau (1989)]","Bitonic Merge Sort Parallel Implementation - Bilardi, Nicolau",1989,https://epubs.siam.org/doi/abs/10.1137/0218014,2,,https://epubs.siam.org/doi/abs/10.1137/0218014,0,0,2,n: 2,$O((n \log{n})/p)$,$O(\log^2{n})$,2,https://epubs.siam.org/doi/abs/10.1137/0218014,$O(n \log{n})$,11,https://epubs.siam.org/doi/abs/10.1137/0218014,no,"n: size of list
p: number of processors",n,,,PRAC (shared-memory multiprocessor of the EREW PRAM variety),110,words,1,n: 1,O(1),"Paper claims ""logspace uniform"", so with O(log n) words, this is constant # of words",0,1,,0,,0,,0,1,"p, at most $O(n/ \log{n})$",9,0,0,-,A sorting algorithm is an algorithm that puts elements of a list in a certain order.,,,,1,n is the size of the array to be sorted.,,,,,,,,9965,100.3512293,,,,,,,,4,,,Combinatorics
1,Sorting,1,Non-comparison Sorting,Non-Comparison Sorting; Integer Sorting,76,,,,,,,,,Parallel iterated bucket sort - Chlebus,1989,https://www.sciencedirect.com/science/article/pii/0020019089901208,,,,,,,,$O(\log{n})$,$O(\log{n})$,1,,$O(n)$,10,,,"n: size of list
(polynomial range integers ?)",,,,CRCW PRAM,130,,,,,,,,,1,,0,,,1,$O(n/ \log{n})$,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,77,,,,1,O(n/p log p +log^3(p) loxg(n/p)),,,,SmoothSort - Plaxton (adaptive),1989,https://www.proquest.com/docview/303808287?pq-origsite=gscholar&fromopenview=true,,,,,,,,$O(n/p \log^2{p}/ \loxg{n/p} + \log^3{p} \loxg{n/p})$,$O(\log^3{n})$ ?,3,,$O(n \log^2{p}/ \loxg{n/p} + p \log^3{p} \loxg{n/p})$,,,,"n: size of list
p: number of processors (upper bound n=pq ?)",,,,sorting network,510,,,,,,,,,0,,0,,,1,p,,,,"classified as ""merge based multi-step"" in https://dl.acm.org/doi/pdf/10.1145/181014.192329",,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,78,,,,,,,,,SmoothSort - Plaxton (nonadaptive),1989,https://www.proquest.com/docview/303808287?pq-origsite=gscholar&fromopenview=true,,,,,,,,$O(n/p \log^2{p} / \log{n/(p \log{p})})$,$O(\log^2{n}/ \log{log{n}})$ ?,,,$O(n \log^2{p} / \log{n/(p \log{p})})$,9,,,"n: size of list
p: number of processors",,,,sorting network,510,,,,,,,,,0,,0,,,1,p,,,,"classified as ""merge based multi-step"" in https://dl.acm.org/doi/pdf/10.1145/181014.192329",,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,79,,,,,,,,,SquareSort - Plaxton,1989,https://www.proquest.com/docview/303808287?pq-origsite=gscholar&fromopenview=true,,,,,,,,$O(\log^2{n})$,$O(\log^2{n})$,2,,$O(n \log^2{n})$,12,,,n: size of list,,,,sorting network,510,,,,,,,,,0,,0,,,1,$n$,10,,,"classified as ""merge based multi-step"" in https://dl.acm.org/doi/pdf/10.1145/181014.192329",,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,80,,,,,O(n/p log(n/p) t_c +n/p t_s/r),,,,"parallel binsort 0 - Seidel, George (1)",1989,https://dl.acm.org/doi/abs/10.1145/63047.63102,,,,,,,,,$O(1)$ expected ?,0,,$O(n \log{n/p} t_c +n t_s/r)$ expected,,,yes,"n: size of list
p=2^d (d-dimensional): number of processors
t_c: unit of computational cost
t_s/r unit of simultaneuos send and recieve cost",,,,sorting network (hypercube),510,,,,,,,,,0,,0,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,81,,,,,O(n/p log n t_c +n/p t_s/r),,,,"parallel binsort 1 - Seidel, George (2)",1989,https://dl.acm.org/doi/abs/10.1145/63047.63102,,,,,,,,,$O(\log{n})$ expected ?,1,,$O(n \log{n} t_c +n t_s/r)$ expected,,,yes,"n: size of list
p=2^d (d-dimensional): number of processors
assumes sample size s<<m/n
t_c: unit of computational cost
t_s/r unit of simultaneuos send and recieve cost",,,,sorting network (hypercube),510,,,,,,,,,1,,0,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,82,,,,,O(n/p log n t_c +n/p t_s/r),,,,"parallel binsort 2 - Seidel, George (3)",1989,https://dl.acm.org/doi/abs/10.1145/63047.63102,,,,,,,,,$O(\log{n})$ expected ?,1,,$O(n \log{n} t_c +n t_s/r)$ expected,,,yes,"n: size of list
p=2^d (d-dimensional): number of processors
assumes sample size s<<m/n
t_c: unit of computational cost
t_s/r unit of simultaneuos send and recieve cost",,,,sorting network (hypercube),510,,,,,,,,,1,,0,,,1,p,,,,https://dl.acm.org/doi/abs/10.1145/800221.806719,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,83,,,,,,,,,"Periodic Balanced Sorting Network - Dowd, Perl, Rudolph, Saks",1989,https://dl.acm.org/doi/abs/10.1145/76359.76362,,,,,,,,$O(\log^2{n})$,$O(\log^2{n})$,2,,$O(n \log^4{n})$,14,,,n: size of list,,,,sorting network,510,,,,,,,,,0,,0,,,1,$n/2 \log^2{n}$,12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,84,,,,,,,,,"Aggarwal, Chandra, Snir",1989,https://dl.acm.org/doi/pdf/10.1145/72935.72937,,,,,,,,$O(n \log{n} /p + l \log{p})$,$O(l \log{n})$,,https://dl.acm.org/doi/pdf/10.1145/72935.72937,$O(np \log{n}/p + lp \log{p})$,,,,"n: size of list
p: number of processors
l: number of elements in a block ?
",,,,Block PRAM,100,,,,,,,,,0,,0,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,85,,,,,O(log n),,,,"Martel, Gusfield",1989,https://www.sciencedirect.com/science/article/pii/0020019089901166,3 ?,,https://www.sciencedirect.com/science/article/pii/0020019089901166 (based on https://dl.acm.org/doi/abs/10.1145/5925.5930 ),,,,,$O(\log{n})$ expected,$O(\log{n})$ expected,1,,$O(n \log{n})$ expected,11,,,n: size of list,,,,CRCW PRAM,130,,,,,,,,,1,,0,,,1,$n$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,86,two-round sorting?,,,,,,,,"Takefuji, Lee",1990,https://ieeexplore.ieee.org/abstract/document/62417,,,,,,,,2,$O(1)$,0,,$O(n^2)$,20,,,,,,,neural network?,510,,,,,,,,,0,,0,,,1,"$O(n^2) - n^2$ neurons, $n(n-2)/2$ comparators",20,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,87,,,,,,,,,"Takefuji, Lee, Tanaka",1990,https://ieeexplore.ieee.org/abstract/document/5726926?casa_token=oYObtFxF3TIAAAAA:HVNZphHaWr5qQTicDCBB5dqHgjub4CmipxOEJ8UwRUnzokUuFQl9x8GCkgTV0UFlAFCZFYuggw,,,,,,,,2,O(1),,,O(n^2),,,,n: size of list,,,,neural network,510,,,,,,,,,,,,,,1,$O(n^2)$ binary neurons,20,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-Comparison Sorting; Integer Sorting,88,,,,,,,,,"Hagerup, Shen",1990,https://www.sciencedirect.com/science/article/pii/002001909090097H,,,,,,,,$O(\log{n})$,$O(\log{n})$,1,,$O(n)$,10,,,n: size of list,,,,EREW PRAM,110,,,,,,,,,0,,0,,,1,$O(n/ \log{n})$,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-Comparison Sorting; Integer Sorting,89,,,,,O(log n/loglog n+loglog m),,,,Raman,1990,https://link.springer.com/chapter/10.1007/3-540-53487-3_42,,,,,,,,$O(\log{n}/ \log{\log{n}}+ \log{\log{m}})$ w/ very high probability,$O(\log{n}/ \log{\log{n}}+\log{\log{m}})$ expected,,,$O(n \log{\log{m}})$ expected,,,,"n: size of list
ints in range 0...m-1",,,,CRCW PRAM,130,,,,,,,,,1,,0,,0,1,$O(\log{n}/(n \log{\log{m}} \log{\log{n}}) +n)$,,,,O(n) space complexity,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,90,,,,,,,,,"Sharesort - Cypher, Plaxton",1990,https://dl.acm.org/doi/pdf/10.1145/100216.100240,,,,,,,,$O(\log{n} (\log{\log{n}})^2)$,$O(\log{n} (\log{\log{n}})^2)$,1.15,,$O(n \log{n} (\log{\log{n}})^2)$,11.2,,,n: size of list,,,,"network sorter (hypercube, shuffle-exchange or CCC), ""SIMD fashion""",200,,,,,,,,,0,,0,,,1,$n$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,91,,,,,O(log n),,,,"Leighton, Plaxton",1990,https://ieeexplore.ieee.org/abstract/document/89545,,,,,,,,$O(\log{n})$ w/ very high probability,$O(\log{n}) expected,1,,$O(n \log{n})$ expected,11,,,n: size of list,,,,sorting network,510,,,,,,,,,1,,0,,,1,$n$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,92,,,,,O(m + log n),,,,"Leighton, Plaxton",1990,https://ieeexplore.ieee.org/abstract/document/89545,,,,,,,,$O(m + \log{n})$ w/ very high probability,$O(m+\log{n})$ expected,,,$O(mn \log{n} + n \log^2{n})$ expected,,,,"n: size of list
of m-bit records",,,,sorting network,510,,,,,,,,,1,,0,,,1,$n \log{n}$,11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,Comparison Sorting,Comparison Sorting,93,,,,,,,,,Peterson,1990,https://link.springer.com/article/10.1007/BF01840378,,,,,,,,$O(\log{n})$,$O(\log{n})$,1,,$O(n \log{n})$,11,,,n: size of list,,,,sorting network,510,,,,,,,,,,,,,,1,$n$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,94,,,,,,,,,"Abali, Ozguner, Bataineh",1990,https://ieeexplore.ieee.org/abstract/document/555388,,,,,,,,$O(n \log{n}/p + p \log^2{n)})$,"$O(n \log{n}/p + p \log^2{n}) ??
$O(n \log{n})$ ???",,,$O(n \log n)$ ?? assuming n>>p,11,,,"n: size of list
p=2^d: number of processors on a d-dimensional hypercube
n>>p",,,,sorting network,510,,,,,,,,,0,,0,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,95,,,,,,,,,"AGGARWAL, CHANDRA, SNIR",1990,https://www.sciencedirect.com/science/article/pii/030439759090188N,,,,,,,,$O(n \log{n} /p)$,$O(\log{n})$ ?,1,,$O(n \log{n}/(p \log{n/p}))$,,https://www.sciencedirect.com/science/article/pii/030439759090188N,,"n: size of list
p: number of processors
1<=p<=n",,,,LPRAM,120,,,,,,,,,0,,0,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-Comparison Sorting,96,,,,,,,,,"Kruskal, Rudolph, Snir",1990,https://link.springer.com/article/10.1007/BF01840376,,,,,,,,$O(n/p \log{n}/ \log{n/p} +m/p)$,$O(\log{n} +m/n)$,,,$O(n \log{n}/ \log{n/p} +m)$,,,,"n: size of list
in range 0...m-1
p: number of processors
p<=n/2",,,,"EREW PRAM, MIMD machine",110,,,,,,,,,0,,0,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,97,,,,,,,,,"Wang, Chen, Lin",1990,https://scholars.lib.ntu.edu.tw/bitstream/123456789/118003/1/09.pdf,,,,,,,,$O(1)$,$O(1)$,0,,$O(n^3)$,30,,,n: size of list,,,,processor array (with reconfigurable bus system),510,,,,,,,,,0,,0,,,1,$n^3$,30,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,98,,,,,,,,,"Dey, Srimani",1990,https://academic.oup.com/comjnl/article/33/3/241/365150,4,,https://academic.oup.com/comjnl/article/33/3/241/365150,,,,,$O(\log{n})$,$O(\log{n})$,1,,$O(n^2)$,20,,,n: size of list,,,,SIMD,200,,,,,,,,,0,,0,,,1,$n^2/ \log{n}$,19,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,99,,,,,,,,,"Parasort - Wheat, Evans",1990,https://www.sciencedirect.com/science/article/pii/016781919290114M,,,,,,,,$O((n/p)^2 +(5n/(3p) + 2 \log^2{n/p} +1) \log{p+1} + 2 \log^3{p+1}/3 + p)$,$O(n)$,10,,$O(n^2/p +(5n/3 + 2p \log^2{n/p} +p) \log{p+1} + 2p \log^3{p+1}/3 + p)$,,,,"n: size of list
p: number of processors",,,,MIMD,300,,,,,,,,,0,,0,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,Comparison Sorting,Comparison sorting,100,,,,,n log n/(k log k),,,,"Beigel, Gill",1990,https://ieeexplore.ieee.org/abstract/document/53587?casa_token=9GnOrfv-aycAAAAA:z4VGcYl6keco84NPIoAMrWx6_DhaQh7yoBV5KtnnkiTkrjeUeynas8o5FQxLC39YGfmHTSCNLA,,,,,,,,4n/k log_k(n),4n/k log_k(n),,,,,,,k-sorter: sorts k elements in constant time,,,,hardware sorter ?,520,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,101,,,,,,,,,Powers,1990,https://sites.cs.ucsb.edu/~gilbert/cs140/old/cs140Win2009/sortproject/ParallelQuicksort.pdf,,,,,,,,$O(\log{n})$,$O(\log{n})$,1,,$O(n \log{n})$,11,,,n: size of list,,,,CRCW PRAM,130,,,,,,,,,0,,0,,,1,$n$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,102,,,,,,,,,Paterson,1990,https://link.springer.com/article/10.1007/BF01840378,"""still too high to be practical""",,,,,,,$O(\log{n})$,$O(\log{n})$,1,,$O(n \log{n})$,11,,,n: size of list,,,,sorting network,510,,,,,,,,,0,,0,,,1,$n$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,103,,,,,O(log n),,,,"Heidelberger, Norton, Robinson",1990,https://ieeexplore.ieee.org/abstract/document/46289?casa_token=EH1cXGJiDmcAAAAA:cWEfm3FxEXfMA9Q9165CWoFfbV9KAvcsrKzyFUgJAHIpKw7wzvzmSVzulfwDa5Dr0RbLMc1MKA,,,,,,,,$O(\log^2{n)})$,$O(\log{n})$ expected,1,,$O(n \log{n})$ expected,11,,,n: size of list,,,,CRCW PRAM (assuming O(1) time feth-and-add),130,,,,,,,,,0,,0,,,1,$n$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,104,,,,,,,,,Tang,1990,https://www.computer.org/csdl/proceedings-article/dmcc/1990/00555389/12OmNBZpH74,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-Comparison Sorting; Integer Sorting,105,,,,,,,,,Chen,1990,https://link.springer.com/content/pdf/10.1007/3-540-53504-7_101.pdf,,,,,,,,$O(\log{n})$,$O(\log{n})$,1,,$O(n)$,10,,,n: number of integers (in range linear to n),,,,EREW PRAM,110,,,,,,,,,0,,0,,,1,$O(n/ \log{n})$,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-Comparison Sorting; Integer Sorting,106,,,,,,,,,Chen,1990,https://link.springer.com/content/pdf/10.1007/3-540-53504-7_101.pdf,,,,,,,,$O(\log{n}/ \log{\log{n}})$,$O(\log{n}/ \log{\log{n}})$,0.9,,$O(n)$,10,,,"n: number of integers (in range linear to n and a
constant upper bounded number of integers have a constant lower bounded multiplicity)",,,,CRCW PRAM,130,,,,,,,,,0,,0,,,1,$O(n \log{\log{n}}/ \log{n}$,9.05,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,107,,,,,,,,,"Huang, Kleinrock",1990,https://www.sciencedirect.com/science/article/pii/016781919090098T,,,,,,,,$O(n \log{n} /p)$,$O(\log{n})$,1,,$O(n \log{n})$,11,,,n: size of list,,,,EREW PRAM,110,,,,,,,,,0,,0,,,1,p,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,108,,,,,,,,,"Lin, Lin",1990,https://www.sciencedirect.com/science/article/pii/016781919090064G,,,,,,,,$O(n)$,$O(n)$,10,,$O(n^2)$,20,,,n: size of list,,,,hardware sorter,520,,,,,,,,,,,,,,1,$n/2$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-Comparison Sorting; Integer Sorting,109,,,,,,,,,"Bhatt, Diks, Hagerup, Prasad, Radzik, Saxena",1991,https://www.sciencedirect.com/science/article/pii/089054019190031V,,,,,,,,$O(\log{n}/ \log{\log{n}} + \log{\log{m}})$,$O(\log{n}/ \log{\log{n}} + \log{\log{m}})$,,,$O(n \log{\log{m}})$,,https://www.sciencedirect.com/science/article/pii/089054019190031V,yes,"n: size of list - 
integers from {0,...,m-1}",,,,arbitrary CRCW PRAM,131,,,,,,,,,0,,0,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-Comparison Sorting; Integer Sorting,110,,,,,O(log n loglog m) expected,,,,"Matias, Vishkin (random)",1991,https://www.sciencedirect.com/science/article/pii/019667749190034V,,,,,,,,$O(\log{n} \log{\log{m}})$ expected,$O(\log{n} \log{\log{m}})$ expected,,,$O(n \log{\log{m}})$ expected,,https://www.sciencedirect.com/science/article/pii/019667749190034V,"yes, ""slower but more efficient by a factor of O(log n/loglog m)""","n: size of list
integers in range 1..m",,,,arbitrary-CRCW PRAM,131,,,,,,,,,1,,0,,,1,$O(n/ \log{n})$,9,,,space complexity = O(n),,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-Comparison Sorting; Integer Sorting,111,,,,,,,,,"Matias, Vishkin (deterministic)",1991,https://www.sciencedirect.com/science/article/pii/019667749190034V,,,,,,,,$O(\log{n})$,$O(\log{n})$,1,,$O(n \log{\log{m}})$,,,,"n: size of list
integers in range 1..m",,,,min-CRCW PRAM,130,,,,,,,,,,,0,,,1,$n \log{\log{m}} / \log{n}$,,,,space complexity = O(nm^(1/c)) for fixed c>=1,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,112,,,,,,,,,"Nakano, Masuzawa, Takura",1991,https://search.ieice.org/bin/summary.php?id=e74-d_11_3894,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,Comparison Sorting,Comparison sorting,113,,,,,,,,,"Quick-Merge Sort (QMS) - Loots, Smith",1991,https://www.sciencedirect.com/science/article/pii/016781919290101C,,,,,,,,$O(n/p \log{n}) + O(n)$,$O(n)$,10,,$O(n log n) + O(np)$,,https://www.sciencedirect.com/science/article/pii/016781919290101C,,"n: size of list
p: number of processors",,,,sorting network,510,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,114,,,,,,,,,"Deo, Sarkar",1991,https://www.sciencedirect.com/science/article/pii/002002559190028S,,,,,,,,$O(n/p \log{n/p} + (n/p + \log{p} \log{n}) \log{n/p}$,$O(\log^2{n})$ ?,2,,$O(n \log{n/p} + (n + p \log{p} \log{n}) \log{n/p})$,,,,"n: size of list
p: number of processors",,,,EREW PRAM,110,,,,,,,,,0,,0,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,115,,,,,,,,,"Parallel Quicksort - Chlebus, Vrt'o",1991,https://www.sciencedirect.com/science/article/pii/074373159190040G,,,,,,,,$O(\log{n})$ w/ high probability,$O(\log{n})$ expected,1,,$O(n \log{n})$ expected,11,,,n: size of list,,,,CRCW PRAM,130,,,,,,,,,1,,0,,,1,$n$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,116,,,,,,,,,"Das, Moser, Melliar-Smith",1991,https://link.springer.com/article/10.1007/BF01407814,,,,,,,,$O(n \log^2{n}/p)$,$O(\log^2{n})$ ?,2,,$O(n \log^2{n})$,12,,,"n: size of list
p: number of processors",,,,"""Intersecting
Broadcast Machine""; MIMD",300,,,,,,,,,,,,,,1,$p$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,117,,,1,1,O(nlogn),,,"[https://www.sciencedirect.com/science/article/pii/0196677492900166?via%3Dihub Cube Sort Parallel Implementation - Cypher, Sanz (1992)]","Cube Sort Parallel Implementation - Cypher, Sanz",1992,https://www.sciencedirect.com/science/article/pii/0196677492900166?via%3Dihub,,,,0,0,4,n: 4,$O(n \log^2{n} / (p \log{n/p})$,$O(\log^2{n})$,2,,$O(n \log^2{n} / \log{n/p})$,11,https://www.sciencedirect.com/science/article/pii/0196677492900166?via%3Dihub,,"n: size of list
p: number of processors",n,,,Parallel RAM,100,words,3,n: 3,O(n),(can be easily derived),1,0,,0,,0,,0,1,p,9,0,0,https://en.wikipedia.org/wiki/Cubesort,A sorting algorithm is an algorithm that puts elements of a list in a certain order.,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,118,,,,,,,,,"Varman, Doshi",1992,https://www.computer.org/csdl/journal/tc/1992/01/t0097/13rRUILLkD1,,,,,,,,$O(n \log{n}/p + \log^2{p})$,$O(\log^{n})$,2,,$O(n \log{n})$,11,,,"n: size of list
p: number of processors",,,,"distributed-memory parallel architecture, pipelined hypercube",700,,,,,,,,,,,,,,1,p,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,119,,,,,,,,,"Parallel sorting by regular sampling (PSRS) - Shi, Schaeffer",1992,https://www.sciencedirect.com/science/article/pii/074373159290075X,,,,,,,,$O(n/p \log{n})$,$O(\log{n})$,1,,$O(n \log{n})$,11,,assymptotically optimal when n>=p^3,"n: size of list
p: number of processors",,,,MIMD,300,,,,,,,,,0,,0,,,1,p,10,,,"classified as ""merge based single-step"" in https://dl.acm.org/doi/pdf/10.1145/181014.192329",,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,120,,,,,,,,,"MeshSort (generalized Bitonic and Shear Sort) - Corbett, Scherson",1992,https://www.computer.org/csdl/journal/td/1992/05/l0626/13rRUxly9dj,,,,,,,,$k^2 n \log{n}/2$,$k^2 n \log{n}/2$,,,$O(n^{k+1}k^2 \log{n})$,,,,"$n^k$: number of elements ?
$n>=16$",,,,multidimensional mesh-connected multiprocessors (MMCM); SIMD,200,,,,,,,,,,,,,,1,$n^k$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-Comparison Sorting; Integer Sorting,121,,,,,,,,,"Rajesekaran, Sen",1992,https://www.cse.iitd.ac.in/~sSen/journals/acta.pdf,,,,,,,,$O(n \log{n} \log{\log{\log{n}}} / (p \log{\log{n}}))$,$O(\log{n} \log{\log{\log{n}}})$,1.05,,$O(n \log{n} \log{\log{\log{n}}} / \log{\log{n}})$,10.95,,yes,"n: size of list
p: number of processors",,,,CRCW and EREW PRAM,110,,,,,,,,,0,,0,,,1,p<=n/ \log{\log{n}},9.1,,,"space complexity = O(n)
also gives another (randomized) algo ",,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,122,,,,,O(log n / log k),,,,"Hagerup, Raman (comparsion)",1992,https://pure.mpg.de/pubman/faces/ViewItemOverviewPage.jsp?itemId=item_1834884,,,,,,,,$O(\log{n} / \log{k})$ w/ high probability,$O(1)$ expected,0,,$O(kn \log{n}/ \log{k})$ expected,,,,"n: size of list
2<=k<=n",,,,arbitrary CRCW PRAM,131,,,,,,,,,1,,0,,,1,$kn$,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-Comparison Sorting; Integer Sorting,123,,,,,O(log*n),,,,"Hagerup, Raman (random ints)",1992,https://pure.mpg.de/pubman/faces/ViewItemOverviewPage.jsp?itemId=item_1834884,,,,,,,,$O(\log*{n})$ w/ high probability,$O(\log*{n})$ expected,1,,$O(n)$ expected,10,https://pure.mpg.de/pubman/faces/ViewItemOverviewPage.jsp?itemId=item_1834884,,n: size of list,,,,OR CRCW PRAM,130,,,,,,,,,1,,0,,,1,,9,,,space complexity = O(n),,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-Comparison Sorting; Integer Sorting,124,,,,,O(1),,,,"Hagerup, Raman (ints in range)",1992,https://pure.mpg.de/pubman/faces/ViewItemOverviewPage.jsp?itemId=item_1834884,,,,,,,,$O(1)$ w/ high probability,$O(1)$ expected,0,,$O(n)$ expected,10,,,"n: size of list
integers in range 1..n",,,,OR CRCW PRAM,130,,,,,,,,,1,,0,,,1,$n$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-Comparison Sorting; Integer Sorting,125,,,,,O(loglog n/log k),,,,"Hagerup, Raman (ints in range, stable)",1992,https://pure.mpg.de/pubman/faces/ViewItemOverviewPage.jsp?itemId=item_1834884,,,,,,,,$O(\log{\log{n}/ \log{k})$ w/ high probability,$O(1)$ expected,,,$O(kn \log{\log{n}}/ \log{k})$ expected,,,,"n: size of list
integers in range 1..n
2<=k<=log n",,,,OR CRCW PRAM,130,,,,,,,,,1,,0,,,1,$kn$,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-Comparison Sorting; Integer Sorting,126,,,,,,,,,"Chen, Das",1992,https://www.sciencedirect.com/science/article/pii/002001909290078A,,,,,,,,$O(n/p +\log{n})$,$O(\log{n})$,1,https://www.sciencedirect.com/science/article/pii/002001909290078A,$O(n)$,10,,yes,"n: size of list
p: number of processors",,,,EREW PRAM,110,,,,,,,,,0,,0,,,1,O(p),9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,127,,,,,,,,,Pairwise Sorting Network - Parberry,1992,https://www.worldscientific.com/doi/abs/10.1142/S0129626492000337,,,,,,,,$(\log{n}(\log{n}+1)/2$,$(\log{n}(\log{n}+1)/2$,2,,$n\log{n}(\log{n}-1)/4 + n-1$,12,,,n: size of list,,,,Sorting Network,510,,,,,,,,,,,,,,1,$n\log{n}(\log{n}-1)/4 + n-1$,12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,128,,,,,,,,,"Padded-sort - Hagerup, Raman",1993,https://dl.acm.org/doi/pdf/10.1145/165231.157380,,,,,,,,$n \log{n}/ \log{k} (\log{\log{k})^5(2^(O(\log*{n}-\log*{k}+1)))$,$O(n (\log{\log{n}})^5)$ ?,10.5,,$kn^2 \log{n}/ \log{k} (\log{\log{k}})^5(2^(O(\log*{n}-\log*{k}+1)))$,,,,"n: size of list
4<k<n",,,,"CRCW PRAM (TOLERANT PRAM submodel, also works on ARBITRARY and PRIORITY PRAMs)",130,,,,,,,,,0,,0,,,,$kn$,,,,also includes approximate and random algos,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,Comparison Sorting,Comparison sorting,129,,,,,,,,,"Kale, Krishnan",1993,https://ieeexplore.ieee.org/abstract/document/4134268,,,,,,,,local sort time + ceiling(log_k(p))O(log n)(time per histogram) + data movement and merging,,,,,,,,,,,,MIMD,300,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,130,,,,,,,,,"Vaidyanathan, Hartmann, Varshney",1993,https://ieeexplore.ieee.org/abstract/document/262880,,,,,,,,$O(t(n) \log{m})$,$O(t(n) \log{m})$,,,$O(m t(n)p(n)/ \log{n})$,,,,"n: size of list
m: size (in bits) of numbers (lower bounded by log(n) and upper bounded by poly of n)
p(n) and t(n): number of processors  and time needed for deterministic algo to sort n log(n)-bit numbers stably (integer sort) on the specific PRAM submodel",,,,PRAM,100,,,,,,,,,0,,0,,,,$mp(n)/( \log{n} \log{m})$,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,131,,,,,,,,,"Snakesnort: Normal sort - Blackston, Ranade (best for cubes)",1993,https://ieeexplore.ieee.org/abstract/document/4134269,,,,,,,,O(k log k) + k(log N +1),,,,O(Nk log k),,,,"p=2^n: nodes
each node holds k keys
k lower bounded by N^2log N
=>kN: size of list",,,,sorting network (requires hamiltonian path),,,,,,,,,,,,,,,1,N,,,,"classified as ""merge based multi-step"" in https://dl.acm.org/doi/pdf/10.1145/181014.192329",,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,132,,,,,,,,,"Snakesnort: Gray sort - Blackston, Ranade (best for meshes)",1993,https://ieeexplore.ieee.org/abstract/document/4134269,,,,,,,,O(k log k) + k(2 log N),,,,O(Nk log k),,,,"N=2^n: nodes
each node holds k keys
k lower bounded by Nlog N
=>kN: size of list",,,,sorting network (requires hamiltonian path),,,,,,,,,,,,,,,1,N,,,,"classified as ""merge based multi-step"" in https://dl.acm.org/doi/pdf/10.1145/181014.192329",,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,133,,,,,O(k log k) +k(2 n^(1/2) + o(n^(1/2))),,,,"Snakesnort: Fast Shearsort - Blackston, Ranade",1993,https://ieeexplore.ieee.org/abstract/document/4134269,,,,,,,,O(k log k) +k(2 n^(1/2) + o(n^(1/2))) w/ high probability,,,,,,,,"N: nodes
each node holds k keys
k lower bounded by N^(1/2)logN
=>kN: size of list",,,,sorting network (requires hamiltonian path),,,,,,,,,,1,,,,,1,N,,,,"classified as ""merge based multi-step"" in https://dl.acm.org/doi/pdf/10.1145/181014.192329",,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,Comparison Sorting,Comparison sorting,134,,,,,,,,,"T&B sort - Tridgell, Brent",1993,https://openresearch-repository.anu.edu.au/handle/1885/40793,,,,,,,,,,,,,,,yes (experimentally),"n: size of list
p: number of processors",,,,MIMD,,,,,,,,,,,,,,,,p,,,,"classified as ""merge based multi-step"" in https://dl.acm.org/doi/pdf/10.1145/181014.192329",,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,135,,,,,,,,,"generalized bitonic sort - Liszka, Batcher",1993,https://ieeexplore.ieee.org/abstract/document/4134122?casa_token=cM5nTlnQteIAAAAA:kjHWCIc38Nd4SBQs76oK3j-6jsAIXuIM-m_cT3J9kU5wa4Y55SqT--IrK7EOsder37jZYEWC_w,,,,,,,,$O(\log^2{n})$,$O(\log^2{n})$,2,,$O(n \log^4{n})$,14,,,n: size of list,,,,sorting network,510,,,,,,,,,0,,0,,,1,$O(n \log^2{n})$,12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,136,,,,,,,,,"Chen, Reif",1993,https://ieeexplore.ieee.org/abstract/document/366877,,,,,,,,$O(\log{n})$ expected,$O(\log{n})$ expected,1,,$O(n \log{\log{n/H})$,,,,"n: size of list
L: max length of each key (L<=n^O(1))
H: binary entropy",,,,CRCW PRAM,130,,,,,,,,,0,,0,,,1,$O(n \log{\log{n}/H}/ \log{n})$,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,137,,,,,,,,,"Tianzhen, Zhou, Xiozhen",1993,https://ieeexplore.ieee.org/abstract/document/320089,,,,,,,,$O(1)$,$O(1)$,0,,,,,,,,,,SIMD,200,,,,,,,,,,,,,,,$n$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,Non-comparison Sorting,"Comparison sorting, Non-comparison sorting",138,,,,,,,,,"Parallel Sorting by OverPartitioning (PSOP) - Li, Sevcik (Quicksort / PQOP)",1994,https://dl.acm.org/doi/pdf/10.1145/181014.192329,,,,,,,,CQn log n /p+CQpsk log(psk)+CQpk log(pk) +2t_r psk/W +t_r n/(pW),,,,,,,,"C: constant factor in quicksort
Q: unit cost in quicksort
n: size of list
p: number of processors
s: oversampling ratio
k: overpartitioning ratio
t_r: mean time to access remote memory
W: number of integers per cache line",,,,,,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,Non-comparison Sorting,"Comparison sorting, Non-comparison sorting",139,,,,,,,,,"Parallel Sorting by OverPartitioning (PSOP) - Li, Sevcik (Radix sort / PROP)",1994,https://dl.acm.org/doi/pdf/10.1145/181014.192329,,,,,,,,R_b n/p +R_b ceilling((32-H)/B)n/p+CQ(H-1)2^(H-1)+2t_r ps/W+t_r n/(pW),,,,,,,,"R_b: unit cost in b-bit radix sort
n: size of list
p: number of processors
H: corresponds to first H bits, smaller than cache size ??
B: corresponds to the B bits radix sort performs on ??
C: constant factor in quicksort
Q: unit cost in quicksort
t_r: mean time to access remote memory
s: oversampling ratio
W: number of integers per cache line",,,,,,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,140,,,,,,,,,"Chien, Oruc",1994,https://ieeexplore.ieee.org/abstract/document/285603,,,,,,,,,,,,,,,,,,,,"""new model"": adaptive sorting network",510,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,141,,,,,,,,,"Chen, Chen",1994,https://ieeexplore.ieee.org/document/286307/citations#citations,,,,,,,,O(1),O(1),0,,O(n^(3/2)),16,,,n: size of list,,,,3-d reconfigurable mesh; sorting network,510,,,,,,,,,0,,0,,,1,O(n^(3/2)),16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,142,,,,,,,,,"Chen, Chen (generalized)",1994,https://ieeexplore.ieee.org/document/286307/citations#citations,,,,,,,,O(4^(k+1)),O(1),0,,O(n^(1+1/(k-1))),,,,"n: size of list
k: mesh dimensions (k>=4)",,,,k-d reconfigurable mesh; sorting network,510,,,,,,,,,0,,0,,,1,O(n^(1+1/(k-1))),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,Comparison Sorting,Comparison Sorting,143,,,,,,,,,"Gibbons, Matias, Ramachandran",1994,https://dl.acm.org/doi/abs/10.1145/181014.181382,,,,,,,,O(log^2(n)/loglog(n)),O(log^2(n)/loglog(n)),,,O(n log n),11,https://dl.acm.org/doi/abs/10.1145/181014.181382,mentions improvement over EREW PRAM model algos,n: size of list,,,,queue-read queue write (QRQW) PRAM [CRCW PRAM but with additional cost in proportion to number of readers/writers to location],130,,,,,,,,,1,,,,,1,?,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,144,,,,,,,,,"Gibbons, Matias, Ramachandran",1994,https://dl.acm.org/doi/abs/10.1145/181014.181382,,,,,,,,O(log n),O(log n),1,,O(n log n),11,https://dl.acm.org/doi/abs/10.1145/181014.181382,mentions improvement over EREW PRAM model algos,n: size of list,,,,CRQW PRAM,100,,,,,,,,,1,,0,,,1,O(n) ?,10,,,,,,,claims to improve space bound to O(n) over CREW PRAM model algos,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,145,,,,,,,,,"Gibbons, Matias, Ramachandran",1994,https://dl.acm.org/doi/abs/10.1145/181014.181382,,,,,,,,O(log n),O(log n),1,,O(n log n),11,https://dl.acm.org/doi/abs/10.1145/181014.181382,mentions improvement over EREW PRAM model algos,n: size of list,,,,QRQW ASYNCRONOUS PRAM,100,,,,,,,,,1,,0,,,1,O(n) ?,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,146,,,,,,,,,"Nikolopoulos, Danielopoulos",1994,https://www.sciencedirect.com/science/article/pii/0165607494900124,,,,,,,,$O(\log^2{n})$,$O(\log^2{n})$,2,,$O(n \log^2{n})$,12,,,n: size of list,,,,EREW PRAM,110,,,,,,,,,0,,0,,,1,$n/2$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-Comparison Sorting; Integer Sorting,147,,,,,,,,,Han and Shen,1995,https://link.springer.com/chapter/10.1007/BFb0030847,,,,,,,,"O(n log log min(m,n)/p + log n)",O(log n),1,,"O(n min(log log n, log log m/log n))",,https://link.springer.com/chapter/10.1007/BFb0030847,yes,"n: size of list
p: number of processors
0<=ints<=m-1",,,,CRCW PRAM; arbitrary CRCW PRAM,131,,,,,,,,,0,,0,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-Comparison Sorting; Integer Sorting,148,,,,,,,,,"Bast, Hagerup",1995,https://www.infona.pl/resource/bwmeta1.element.elsevier-27dbeebf-1d67-3c08-a222-c630ae81af5c,,,,,,,,$O(\log{n}/ \log{\log{n}})$ whp,$O(\log{n}/ \log{\log{n}})$,0.9,,$O(n)$,10,,,n: number of integers in range 1...n,,,,CRCW PRAM,130,,,,,,,,,1,,0,,,1,$O(n \log{\log{n}}/ \log{n})$,9.05,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,149,,,,,,,,,"Das, Sinha",1995,https://ieeexplore.ieee.org/abstract/document/395908,,,,,,,,3n^(1/3) log(n^(1/3))+14n^(1/3)+O(n^(1/3)),3n^(1/3) log(n^(1/3))+14n^(1/3)+O(n^(1/3)),,,3n^(4/3) log(n^(1/3))+14n^(4/3)+O(n^(4/3)),,,,n: size of list,,,,"Multi-Mesh network, SIMD",200,,,,,,,,,0,,0,,,1,n,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-Comparison Sorting; Integer Sorting,150,,,,,,,,,"Andersson, Hagerup, Nilsson, Raman (1)",1995,https://dl.acm.org/doi/pdf/10.1145/225058.225173,,,,,,,,O(log n),O(log n),1,,O(n loglog n),10.1,,,"n: number of integers in range 0...2^w-1
w: word length in bits (w>=log n)",,,,CRCW PRAM,130,,,,,,,,,0,,0,,,1,O(n log n /loglog n) ??,9.05,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-Comparison Sorting; Integer Sorting,151,,,,,,,,,"Andersson, Hagerup, Nilsson, Raman (2)",1995,https://dl.acm.org/doi/pdf/10.1145/225058.225173,,,,,,,,O(log n) expected,O(log n) expected,1,,O(n) expected,10,,,"n: number of integers in range 0...2^w-1
w: word length in bits (w>=(log n)^(2+epsilon))
for a fixed epsilon>0",,,,EREW PRAM,110,,,,,,,,,1,,0,,,1,O(n/log n) ??,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,152,,,,,,,,,"MM-sort - Zhang, Zheng",1995,https://ieeexplore.ieee.org/abstract/document/530744?casa_token=fWv_XUrk-IsAAAAA:VrU2_Uiu4y99b7ZD6KtQPQ4JDX6-zWPqwFlrtWs8pl3FDAd4YtsmHuOi4MQC9bURA7xhuf9g5g,,,,,,,,O(n/p log p),O(log n),1,,O(n log p),,,,"n: size of list
p: number of local queues // number of processors equivalent",,,,fixed-size sorting network (inner sorter),510,,,,,,,,,0,,0,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,153,,,,,,,,,"Jang, Prasanna",1995,https://www.sciencedirect.com/science/article/abs/pii/S0743731585710271,,,,,,,,O(1),O(1),0,,O(n^2),20,,,n: size of list,,,,sorting network (reconfigurable mesh),510,,,,,,,,,0,,0,,,1,n^2,20,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,154,,,,,,,,,"(padded sorting) Goldberg, Zwick",1995,https://ieeexplore.ieee.org/abstract/document/377028,,,,,,,,O(log n/(log k) loglog^3(k) 2^(O(log*n-log*k)),O(loglog^3(n)) ? (if k=n) ?,0.3,,O(kn log n/(log k) loglog^3(k) 2^(O(log*n-log*k)),,,,n: size of list,,,,COMMON CRCW PRAM,132,,,,,,,,,0,,0,,,1,kn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,155,,,,,,,,,"Tridgell, Brent",1995,https://www.worldscientific.com/doi/abs/10.1142/S0129053395000166,,,,,,,,$O(n/p \log{n/p} +n)$,$O(n)$,10,,$O(n \log{n/p} +np)$,11,,,"n: size of list
p: number of processors",,,,MIMD,300,,,,,,,,,,,,,,1,p,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,156,,,,,,,,,Parallel Sorting by Median-Median (PSMM) - Min,1995,https://www.dbpia.co.kr/Journal/articleDetail?nodeId=NODE09537281,,,,,,,,$O(n/p \log{n/p} +p^2 \log{n/p})$,$O(n^{2/3} \log{n^{2/3}})$,,,$O(n \log{n/p} +p^3 \log{n/p})$,11,,,"n: size of list
p: number of processors",,,,EREW PRAM,110,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,157,,,,,,,,,"Louri, Hatch, Na",1995,https://ieeexplore.ieee.org/abstract/document/387690,,,,,,,,$O(1)$,$O(1)$,0,,$O(n^2)$ ?,20,,,n: size of list,,,,OPTICAL hardware sorter,520,,,,,,,,,,,,,,1,$O(n^2)$ ?,20,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison Sorting,158,,,,,,,,,"Zhang, Zheng",1995,https://ieeexplore.ieee.org/abstract/document/530744,,,,,,,,$O(n/p \log{n})$,$O(\log{n})$,1,,$O(n\log{n})$,11,,,"n: size of list
p: number of local queues // number of processors ?",,,,hardware sorter,520,,,,,,,,,,,,,,1,p,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,159,,,,,,,,,Goodrich,1996,https://dl.acm.org/doi/pdf/10.1145/237814.237870,,,,,,,,O(n log(n)/p + (L+gn/p)(log(n)/(log(n/p))),O(log n) ?,1,,O(n log(n) + (Lp+gn)(log(n)/(log(n/p))),,,yes ,"n: size of list
p: number of processors
g: time “gap” between consecutive messages received by a
processor in a communication round
L: worst-case time needed to send one processor-to-processor message (network latency)",,,,"Bulk-Synchronous Parallel (BSP)
[has section on comp model]",400,,,,,,,,,0,,0,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,160,,,,,,,,,"Gerbessiotis, Siniolakis",1996,https://dl.acm.org/doi/pdf/10.1145/237502.237561,,,,,,,,(1+floor(e(1-e)^(-1))(e/2) +o(1))(T_seq/p) computation + O(gT_seq/(p log n)) communication = O(n log n/p) computation + O(g n/p) communication ?,O(log n)  computation + O(g) communication ?,1,,O(n log n) computation + O(gn) communication,11,,yes,"n: size of list
p: number of processors
0<e<1
g: ratio of the total throughput of the system
T_seq: time required by sequential computation",,,,BSP,400,,,,,,,,,0,,0,,,1,p,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,161,,,,,,,,,"Olariu, Schwing",1996,https://www.sciencedirect.com/science/article/abs/pii/S0743731596900155,,,,,,,,O(1),O(1),0,,$O(n^2)$,20,,,n: size of list,,,,"reconfigurable mesh, SIMD",200,,,,,,,,,,,,,,1,$n^2$,20,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,162,,,,,,,,,Jianxian,1996,https://link.springer.com/article/10.1007/BF02900871,,,,,,,,O(n log n/p) + O(n),O(n),10,,O(n log n),11,,,"n: size of list
p: number of processors",,,,sorting network (hypercube),510,,,,,,,,,0,,0,,,1,p,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,163,,,,,,,,,"JaJa, Ryu, Vishkin (1)",1996,https://www.sciencedirect.com/science/article/pii/0304397594002630,,,,,,,,O(log^2 n/loglog n),O(log^2 n/loglog n),,,O(n log n +m),,https://www.sciencedirect.com/science/article/pii/0304397594002630,,"n: size of list of strings
m: number of symbols in the alphabet",,,,COMMON CRCW PRAM,132,,,,,,,,,0,,0,,,1,O(n loglog n /log n) ??,,,,O(nlog n +m) space complexity,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,164,,,,,,,,,"JaJa, Ryu, Vishkin (2)",1996,https://www.sciencedirect.com/science/article/pii/0304397594002630,,,,,,,,O(log n),O(log n),1,,O(n log n +m),,https://www.sciencedirect.com/science/article/pii/0304397594002630,,"n: size of list of strings
m: number of symbols in the alphabet",,,,COMMON CRCW PRAM,132,,,,,,,,,0,,0,,,1,O(n) ??,10,,,O(nlog n +m) space complexity,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,165,,,,,,,,,"samplesort - Helman, JaJa, Bader (1)",1996,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=1ff21105c4a94c83e227dd52fd1aca13091f14af,,,,,,,,$O(n/p \log{n} + \tau + n/p \sigma)$ whp,$O(\log{n})$ ?,1,,$O(n \log{n})$,11,,,"n: size of list (has to be floats?)
p: number of processors, $p^2<n/(3\log{n})$ ??
\sigma and \tau ?? probably small and ignorable?",,,,communication model similar to LogP and BSP,700,,,,,,,,,0,,0,,,1,p,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,166,,,,,,,,,"regular sampling - Helman, JaJa, Bader (2)",1996,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=1ff21105c4a94c83e227dd52fd1aca13091f14af,,,,,,,,$O(n/p \log{n} + \tau + n/p \sigma)$,$O(\log{n})$ ?,1,,$O(n \log{n})$,11,,,"n: size of list (has to be floats?)
p: number of processors
\sigma and \tau ?? probably small and ignorable?",,,,communication model similar to LogP and BSP,700,,,,,,,,,0,,0,,,1,p,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-Comparison Sorting; Integer Sorting,167,,,,,,,,,"Folwell, Guha, Suzuki",1996,https://www.tandfonline.com/doi/abs/10.1080/01495739708941425,,,,,,,,$O(n^0.5)$,$O(n^0.5)$,6,,$O(n^2.5)$,26.5,,,n: number of integerst in range 1... n^0.5,,,,SIMD,200,,,,,,,,,0,,0,,,1,$n^2$,20,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,168,,,,,,,,,Shear-sort - De et al.,1997,https://ieeexplore.ieee.org/abstract/document/628397,58,,https://ieeexplore.ieee.org/abstract/document/628397,,,,,O(n^(1/4)),O(n^(1/4)),,,,,,,,,,,SIMD,200,,,,,,,,,,,,,,1,sqrt(n) ??,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-Comparison Sorting; Integer Sorting,169,,,,,,,,,"Albers, Hagerup (1)",1997,https://www.sciencedirect.com/science/article/pii/S0890540197926328,,,,,,,,"O(t)
t>=log n loglog n",O(log n loglog n),,,O(n sqrt(log n loglog n) + n log^2(n)/t),,https://www.sciencedirect.com/science/article/pii/S0890540197926328,,"n: size of list
t>=log n loglog n
0<=ints<=n",,,,EREW PRAM,110,,,,,,,,,0,,0,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-Comparison Sorting; Integer Sorting,170,,,,,,,,,"Albers, Hagerup (2)",1997,https://www.sciencedirect.com/science/article/pii/S0890540197926328,,,,,,,,"O(t)
t>=log n",O(log n),,,O(n sqrt(log n) + n log n/2^(t/log n)),,https://www.sciencedirect.com/science/article/pii/S0890540197926328,,"n: size of list
0<=ints<=n
t>=log n",,,,CREW PRAM,120,,,,,,,,,0,,0,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-Comparison Sorting; Integer Sorting,171,,,,,,,,,"Albers, Hagerup (3)",1997,https://www.sciencedirect.com/science/article/pii/S0890540197926328,,,,,,,,O(log^2(n)),O(log^2(n)),2,,O(n),10,https://www.sciencedirect.com/science/article/pii/S0890540197926328,,"n: size of list
0<=ints<=m",,,,"EREW PRAM
(nonstandard  word length of O(log n loglog n log m) bits",110,,,,,,,,,0,,0,,,1,,8.9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-Comparison Sorting,172,,,,,,,,,"Jang, Kim",1997,https://ieeexplore.ieee.org/abstract/document/651519,,,,,,,,O(4^k),O(4^k),0,,O(4^k n^(k+1)),10,,,n^k: size of list,,,,sorting network,510,,,,,,,,,0,,0,,,1,n^(k+1),10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,Comparison Sorting,Comparison sorting,173,,,,,,,,,"sloping-and-shaking - Gao, Liu",1997,https://link.springer.com/article/10.1007/BF02916597,,,,,,,,,,,,$1 + (p-1)k + 1/2 (p-2)(p-1) \left\lceil \log{k} \right\rceil$ ?,,,,"n=k^p: size of list
k: arbitrary prime",,,,hardware sorter,520,,,,,,,,,,,,,,1,$k^{p-1}$,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,174,,,,,,,,,"variation of sample sort - Helman, Bader, JaJa",1998,https://www.sciencedirect.com/science/article/abs/pii/S0743731598914629; https://api.drum.lib.umd.edu/server/api/core/bitstreams/2997ecff-e9a8-4d9f-8b87-b3706834bd51/content,,,,,,,,"O(n/p log(n)) ?
""with high probability""",O(tau) ? might be a constant?,0,,O(nlog(n)),11,,lots of experimental data,"n: size of list
p: number of processors
p^2<n/(3ln(n))",,,,some type of message passing,700,,,,,,,,,1,,0,,,1,p,11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,175,,,,,,,,,"Helman, Bader, JaJa",1998,https://dl.acm.org/doi/abs/10.1145/297096.297128,,,,,,,,O(n/p log(n/p) + tau +n/p sigma) for n>p^3 and p<=s<=n/p^3 WHP,,,,,,,,"n: size of list
p: number of processors
s: number of samples",,,,sorting network ?? Communication network,510,,,,,,,,,,,,,,1,p,,,,,,,,lots of experimental evaluation,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,176,,,,,,,,,"Load Balanced Parallel Radix Sort - Sohn, Kodama",1998,https://dl.acm.org/doi/pdf/10.1145/277830.277903,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,177,,,,,,,,,"ZZ-sort - Zheng, Calidas, Zhang",1999,https://link.springer.com/article/10.1023/A:1008173729055,,,,,,,,O(n/p log p (f(p)+log(n/p)),O(log n f(n)),,,O(n log p (f(p)+log(n/p)),,,,"n: size of list
p: number of processors
n>=p
f(p): time to sort p elements, one per processor",,,,"""distributed memory parallel computer""",700,,,,,,,,,0,,0,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,178,,,,,,,,,"Zhang, Zheng",1999,https://downloads.hindawi.com/archive/2000/014617.pdf,,,,,,,,O(n/p log p),O(log n),1,,O(n log p),,,,"n: size of list
p: number of queues =number of processors",,,,(fixed-size) sorting network,510,,,,,,,,,0,,0,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,Non-comparison Sorting,Non-comparison sorting,179,,,,,,,,,"partitioned parallel radix (PPR) sort - Lee, Jeon, Sohn, Kim",2000,https://link.springer.com/chapter/10.1007/3-540-39999-2_14 (page 176 of pdf),,,,,,,,ceilling(b/g) rounds,,,,ceilling(b/g)*p + communication,,,,"n: size of list
p: number of processors
b: number of bits in integer keys
g: group of bits used each round",,,,distributed-memory multiprocessors,700,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,Comparison Sorting,Comparison sorting,180,,,,,,,,,"Olarlu, Pinotti, Zheng",2000,https://ieeexplore.ieee.org/abstract/document/895849,,,,,,,,$O(n \log{n}/(p \log{p}))$,,,,,,,,"n: size of list
p: size of p-sorter or IO size of sorting network with depth $\log^2{p}$
assumes n>=p^2",,,,hardware sorter,520,,,,,,,,,,,,,,1,p ?,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,181,,,,,,,,,"Sinkha, Mukherjee",2000,https://www.sciencedirect.com/science/article/abs/pii/S0743731500916368,,,,,,,,$O((t^2-3t+2)n)$,$O((t^2-3t+2)n)$,,,$O((t^2-3t+2)n^{t+1})$,,,,"n^t: size of list
t: dimensions of mesh",,,,"sorting network, t-dimensional mesh",510,,,,,,,,,0,,0,,,1,$n^t$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,Non-comparison Sorting,Non-Comparison Sorting; Integer Sorting,182,,,,,,,,,Han,2001,https://www.sciencedirect.com/science/article/pii/S0890540101930536,,,,,,,,O(log^2(n)),O(log^2(n)),2,,O(n(log log n)^2/log log log n),,https://www.sciencedirect.com/science/article/pii/S0890540101930536,,"n: number of integers in range {1...m-1}
m=Omega(log^2(n))",,,,EREW PRAM,110,,,,,,,,,,,,,,1,O(n(log log n)^2/(log^2(n) log log log n)) ??,,,,,,,,O(n) space,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,Comparison Sorting,Comparison sorting,183,,,,,"$(1+2/\omeg_n) n \log{n}/p + O(n/p(\delta \log{\log{n}} +m^2 +\log{n}/ \log{n/p} + \log{n/p}/ \log^0.5{n}) + \log{n}\log{p}/ \log{n/p} + L\log{n} + L\log{n}\log{p}/ \log{n/p})$ computation
$O(L\log{n}\log{p}/\log{n/p} + L\log{n} + g n/p \log{n}/ \log{n/p} + g\log{n}\log{p}/ \log{n/p} + g\log{n} + n/p mg)$ communication if $l=r$

$(1-1/2^m)(1+2/\omega_n)n\log{n}/p + O(n/p \log^4{\log{n}} + n/p \log{n}/\log{n/p} + \log{n}\log{p}/\log{n/p} + L\log{n} + L\log{n}\log{p}/\log{n/p})$ computation
$O(gn/p \log^4{\log{n}} + L\log{n}\log{p}/\log{n/p} +L\log{n} + gn/p \log{n}/\log{n/p} + g\log{n}\log{p}/\log{n/p} + g\log{n})$ communication if $l=/r$ and $N<=\log^{\log{\log{n}}}{n}$",,,,"Gerbessiotis, Siniolakis",2001,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=a867d950e57eacf0da9dd17cc80073f124d438ce,,,,,,,,"""$(1+2/\omeg_n) n \log{n}/p + O(n/p(\delta \log{\log{n}} +m^2 +\log{n}/ \log{n/p} + \log{n/p}/ \log^0.5{n}) + \log{n}\log{p}/ \log{n/p} + L\log{n} + L\log{n}\log{p}/ \log{n/p})$ computation
$O(L\log{n}\log{p}/\log{n/p} + L\log{n} + g n/p \log{n}/ \log{n/p} + g\log{n}\log{p}/ \log{n/p} + g\log{n} + n/p mg)$ communication if $l=r$

$(1-1/2^m)(1+2/\omega_n)n\log{n}/p + O(n/p \log^4{\log{n}} + n/p \log{n}/\log{n/p} + \log{n}\log{p}/\log{n/p} + L\log{n} + L\log{n}\log{p}/\log{n/p})$ computation
$O(gn/p \log^4{\log{n}} + L\log{n}\log{p}/\log{n/p} +L\log{n} + gn/p \log{n}/\log{n/p} + g\log{n}\log{p}/\log{n/p} + g\log{n})$ communication if $l=/r$ and $N<=\log^{\log{\log{n}}}{n}$""",,,,,,,,"n: number of ints in range [0,...R-1]
p: number of processors
r=ceilling(lg R/ lg max{ceilling(n/p), t ceilling(log_t p)})
t: int; 2<=t<=p",,,,BSP,400,,,,,,,,,1,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,184,,,,,,,,,Cerin,2002,https://ieeexplore.ieee.org/abstract/document/1015576,,,,,,,,,,,,,,,,,,,,"""parallel disk model (PDM)""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-Comparison Sorting; Integer Sorting,185,,,,,,,,,"Han, Shen",2002,https://epubs.siam.org/doi/abs/10.1137/S0097539799352449,,,,,,,,O(log n),O(log n),1,,O(n sqrt((log n)/k)),,,,"n: number of ints in range {0,..,m-1}
word length=k log (m+n), 1<=k<l=log n",,,,EREW PRAM,110,,,,,,,,,0,,0,,,1,O(n sqrt(1/k log n)),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,186,,,,,,,,,Canturk,2002,https://www.proquest.com/docview/2665127548?pq-origsite=gscholar&fromopenview=true,,,,,,,,O(n/p log(np)+tau+sigma n/p),O(log(n^2)) ?,,,O(n log(np)) ?,,,,"n: size of list
p: number of processors",,,,MIMD,300,,,,,,,,,0,,0,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,187,,,,,,,,,"load balanced parallel merge sort - Jeon, Kim",2003,https://link.springer.com/article/10.1023/A:1021734202931,,,,,,,,k_1 n/p log p + k_2 (n/p + delta) log p,O(log n),1,,k_1 n log p + k_2 (n + p delta) log p,,,,"n: size of list
p: number of processors
k_1: average time to transmit one key
k_2: average time per key to merge keys
delta: load imbalance / number of keys over n/p that a processor has to merge",,,,PRAM ?,100,,,,,,,,,0,,0,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,188,,,,,,,,,"Parallel Sorting by Exact Splitting (PSES) - Dian, Zhizhong",2004,https://ieeexplore.ieee.org/abstract/document/1300464,,,,,,,,$O(n/p \log{n/p} + p^2 \log{p}\log{n/2p} + n/p \log{p})$,$O(n^0.5 \log^2{n^0.5})$,,,"$O(n\log{n/p} + p^2\log{p}\log{n/2p} + n\log{p})$
$2(p-1)^2+4p(p-1)\log{n/2p} + p(p-1) +n)$ communication",11,,compares to PSRS,"n: size of list
p: number of processors",,,,MIMD,300,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,189,,,,,,,,,"Chen, Levcopoulos",2005,https://link.springer.com/chapter/10.1007/3-540-55895-0_452,,,,,,,,O(log n),O(log n),1,,O(n log n),11,https://link.springer.com/chapter/10.1007/3-540-55895-0_452,"yes, optimal in respect to Osc","n: size of list
Osc(x): number of oscillations in sequence x (the list)",,,,arbitrary CRCW PRAM,131,,,,,,,,,0,,0,,,1,O(n/log(n) log(Osc(x)/n)),10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,190,,,,,,,,,"Cheng, Shah, Gilbert, Edelman",2007,https://sites.cs.ucsb.edu/~gilbert/cs140resources/old/cs140Win2011/slides/ViralParallelSort.pdf,,,,,,,,"O(n log n /p + gn/p +log n max(L,gp^2 log(n))","O(log n max(L,gp^2 log(n)) ?",,,"O(n log n + gn +log n max(Lp,gp^3 log(n))",,,yes,"n: size of list
p: number of processors
L: minimum amount of time between subsequent rounds of communication
g: measure of bandwidth in time per message size",,,,BSP,400,,,,,,,,,0,,0,,,1,p,,,,Space complexity: O(p^2 +n/p),,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,191,,,,,,,,,"partition and concurrent merging (PCM) - Herruzo, Ruiz, Benavides, Plata",2007,https://ieeexplore.ieee.org/abstract/document/4135254,,,,,,,,O(n/p log (n/p)) + O(n),O(n),10,,O(n log (n/p) +np),,,yes,"n: size of list
p: number of processors",,,,sorting network ?,510,,,,,,,,,0,,0,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,192,,,,,,,,,"Aligned-access sort (AA-sort) - Inoue, Moriyama, Komatsu, Nakatani",2007,https://ieeexplore.ieee.org/abstract/document/4336211,,,,,,,,O(n log n /k),O(log n),,,O(n log n),,https://ieeexplore.ieee.org/abstract/document/4336211,,"n: size of list
b: number of blocks (constant)
k: number of parallel threads (=processors?)
k<=n/b",,,,SIMD,200,,,,,,,,,,,,,,1,k,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,193,,,,,,,,,"Damrudi, Aval",2007,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=7a87c4f687886a0812dfdacc9660c00780065b02,,,,,,,,O(sqrt(n/4)),O(sqrt(n/4)),6,,O(n/4 sqrt(n/4)),16,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=7a87c4f687886a0812dfdacc9660c00780065b02,,n: size of list,,,,for ILLIAC architecture; processor array; EREW PRAM ?,110,,,,,,,,,0,,0,,,1,n/4,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,194,,,,,,,,,"partition and concurrent merging (PCM) - Herruzo, Ruiz, Benavides, Plata",2007,https://ieeexplore.ieee.org/abstract/document/4135254,,,,,,,,$O((n/p)\log{n/p})+O(n)$,$O(n)$,10,,$O((n)\log{n/p} + np)$,,,,"n: size of list
p: number of processors",,,,shared memory multiprocessor,100,,,,,,,,,0,,0,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,195,,,,,,,,,"Wei, Xiao, Zhang",2008,https://ieeexplore.ieee.org/abstract/document/4529859,,,,,,,,sqrt(2n) + O(n^(3/4)),sqrt(2n) + O(n^(3/4)),,,(sqrt(2n) + O(n^(3/4)))n,,,,n: size of list,,,,Biswapped Network (BSN); BSN-mesh,510,,,,,,,,,0,,0,,,1,n,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,196,,,,,,,,,"Hongwei, Yafeng",2008,https://ieeexplore.ieee.org/abstract/document/4736981,,,,,,,,log^2(n) + log n,log^2(n) + log n,2,,(log^2(n) + log n)^2 n/4 ??,14,,,n: size of list,,,,sorting network,510,,,,,,,,,0,,0,,,1,(log^2(n) + log n)n/4,12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,197,,,,,,,,,"Li, Peng, Chu",2009,https://link.springer.com/chapter/10.1007/978-3-642-03095-6_36 (page 389 of pdf),,,,,,,,O(2^k + m)^2 computational + O(2^k m(2k+1) +k)^2 communication,O(2^k + m)^2 computational + O(2^k m(2k+1) +k)^2 communication,,,O(2^k + m)^2 (2^(2^k m +k) + O(2^k m(2k+1) +k)^2,,,,"k: dimension of high level nodes (classes)
m: dimesnsion of low level nodes (clusters)
number of nodes=size of list=2^(2^k m +k)",,,,sorting network; metacube,510,,,,,,,,,0,,0,,,1,2^(2^k m +k),10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,198,,,,,,,,,"Dynamic Communication-Efficient parallel Sorting (DCES) - Thanakulwarapas, Werapun",2009,https://ieeexplore.ieee.org/abstract/document/5166986,,,,,,,,O(n/p log (n/p) + n/p log p),O(log n),1,,O(n log (n/p) + n log p),,,,"n: size of list
p: number of processors",,,,model? to be implemented on a Sympetric Multiprocessor (SMP),300,,,,,,,,,0,,0,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,199,,,,,,,,,Multi-sort - Rakesh,2010,https://link.springer.com/article/10.1007/s11227-010-0404-4,,,,,,,,O(n^(1/4)),O(n^(1/4)),5.5,,O(n^(5/4)),15.25,,,n: size of list,,,,"SIMD, multi-mesh of trees (MMT) architecture",200,,,,,,,,,0,,0,,,,n ?,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,200,,,,,,,,,"Parallel Sorting by Approximate Selection (PSAS) - Wu, Wu, Shang, Fang",2010,https://ieeexplore.ieee.org/abstract/document/5533008,,,,,,,,O(n + n/p log(n/p)),O(n),10,,O(np + n log(n/p)),,,,"n: size of list
p: number of processors",,,,PRAM,100,,,,,,,,,0,,0,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,201,,,,,,,,,"Li, Peng, Chu",2010,https://ieeexplore.ieee.org/abstract/document/5704410?casa_token=A6hsJa3ZVl4AAAAA:DOBWUTA6SbQNXTJyTP4P0DKDgGg4fsoyKlIXpqyFmlAXdaQPKxrP0-VaA1num5Kab4SOpEuoPg,,,,,,,,O((m2^k)^2) computation + O((km2^k)^2) communication,O((m2^k)^2) computation + O((km2^k)^2) communication,,,O((m2^k)^2)*2^(2^k m + 2^k -1) computation + O((km2^k)^2) communication,,,,"size of list=number of nodes (processors) = 2^(2^k m + 2^k -1)
m: dimension of base network (m-cube)
k: number of levels in network",,,,"Sorting Network, Recursive Dual-Net (RDN)",510,,,,,,,,,0,,0,,,1,2^(2^k m + 2^k -1),10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,,,202,,,,,,,,,"Man, Ito, Nakano",2011,https://www.worldscientific.com/doi/abs/10.1142/S0129054111008568,,,,,,,,$O(n/p(\log{n/p} +\log{p}) + p^2k\log{p} + p\log{n/p})$,$O(n)$,10,,$O(n \log{n})$,11,,,"n: szie of list
p: number of processors
k: arbitrary integer k>0",,,,MIMD ?,300,,,,,,,,,0,,0,,,1,p,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,203,,,,,,,,,"Siebert, Wolf",2011,https://link.springer.com/chapter/10.1007/978-3-642-24449-0_20 (page 184 of pdf),,,,,,,,O(log^2 (n)),O(log^2 (n)),2,,O(n log^2 (n)),12,,,n:size of list,,,,model? to be implemented on Message Passing Interface (MPI),700,,,,,,,,,0,,0,,,1,n,10,,,memory complexity = O(1) ?,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,204,,,,,,,,,adaptive bitonic sorting - Zachmann,2011,https://media.suub.uni-bremen.de/handle/elib/7043,,,,,,,,$O(n \log{n}/p)$,$O(\log{n})$,1,,$O(n \log{n})$,11,,,n:size of list,,,,EREW PRAM,110,,,,,,,,,0,,0,,,1,p,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,205,,,,,,,,,Bansal,2012,https://ieeexplore.ieee.org/abstract/document/6492330,,,,,,,,$O(\log^2{n})$,$O(\log^2{n})$,2,,$O(n \log^2{n}),12,,,n:size of list,,,,sorting network,510,,,,,,,,,0,,0,,,1,$n/2 \log^2{n}$,12,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,206,,,,,,,,,"Interval Based Rearrangement (IBR) bitonic sort - Peters, Schulz-Hildebrandt, Luttenberger",2012,https://ieeexplore.ieee.org/abstract/document/6267838,,,,,,,,$O(\log{n})$,$O(\log{n})$,1,,$O(n \log{n})$,11,,,n:size of list,,,,shared memory,100,,,,,,,,,0,,0,,,1,n,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,207,,,,,,,,,"Cache-efficient Parallel Sort - Odeh, Green, Mwassi, Shmueli, Birk",2012,https://ieeexplore.ieee.org/abstract/document/6270834,,,,,,,,O(n/p log n + n/c log p log c),O(log n),1,,O(n log n + np/c log p log c),,,,"n: size of list
p: number of processors
c: cache size",,,,CREW PRAM,120,,,,,,,,,0,,0,,,1,p,,,,cache-afficient,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-Comparison Sorting; Integer Sorting,208,,,,,,,,,Gerbessiotis,2012,https://www.sciencedirect.com/science/article/abs/pii/S0020019012002608,,,,,,,,$O(\log{n})$ expected,$O(\log{n})$ expected,1,,$O(n)$ expected,10,,,n: number of integers,,,,CRCW PRAM,130,,,,,,,,,1,,0,,,1,$n/ \log{n}$,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-Comparison Sorting; Integer Sorting,209,,,,,,,,,"Han, He",2012,https://link.springer.com/chapter/10.1007/978-3-642-29700-7_26,,,,,,,,$O(\log^1.5{n}/ \log{\log{n}})$,$O(\log^1.5{n}/ \log{\log{n}})$,,,$O(n (\log{n}/ \log{\log{n}})^0.5)$,,,,"n: number of integers in range {0,1,2,..., n^0.5}",,,,CREW PRAM,120,,,,,,,,,0,,0,,,1,$O(n \log^0.5{\log{n}}/ \log{n})$,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-Comparison Sorting; Integer Sorting,210,,,,,,,,,"Han, He",2012,https://link.springer.com/chapter/10.1007/978-3-642-29700-7_26,,,,,,,,$O(\log^1.5{n}/ \log{\log{n}})$,$O(\log^1.5{n}/ \log{\log{n}})$,,,$O(n (\log{n}/ \log{\log{n}})^0.5 \log{\log{\log{n}}})$,,,,"n: number of integers in range {0,1,2,..., n-1}",,,,CREW PRAM,120,,,,,,,,,0,,0,,,1,$O(n \log^0.5{\log{n}} \log{\log{\log{n}}}/ \log{n})$,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,Comparison Sorting,Comparison sorting,211,,,,,,,,,"Bosakova-Ardenska, Vasilev, Kostadinova-Georgieva",2014,https://www.elibrary.ru/item.asp?id=25518905,,,,,,,,,,,,,,,,,,,,Multiple Program Multiple Data (MPMD) model,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,212,,,,,,,,,"Axtmann, Bingmann, Sanders, Schulz",2015,https://dl.acm.org/doi/abs/10.1145/2755573.2755595,,,,,,,,O(alpha log p + beta n/sqrt(p) + n/p log (n/p)),O(alpha log n + beta sqrt(n)),6,,O(p(alpha log p + beta n/sqrt(p)) + n log (n/p)) ?,,,,"n: size of list
p: number of processors
sending message of size l takes alpha+beta*l",,,,generalization of BSP,400,,,,,,,,,0,,0,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,213,,,,,,,,,"Blelloch, Fineman, Gibbons, Gu, Shun (1 - PRAM))",2015,https://dl.acm.org/doi/abs/10.1145/2755573.2755604,,,,,,,,O((n log n+ kn)/p +k log n),O(k log n),1,,O(nlog n + kn),11,https://dl.acm.org/doi/abs/10.1145/2755573.2755604,,"n: size of list
p: number of processors
k: cost of writes",,,,"CRCW PRAM w/ asymetric write costs (writes cost k, other instructions cost 1)",130,,,,,,,,,0,,0,,,1,p,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,214,,,,,,,,,"SPMS - Cole, Ramachandran",2017,https://dl.acm.org/doi/abs/10.1145/3040221,,,,,,,,O(log n loglog n),O(log n loglog n),1.1,,O(n log n),11,,,n: size of list,,,,shared memory,100,,,,,,,,,0,,0,,,1,n/loglog n ?,9.1,,,"considers cache efficiency. a LOT on caches, scheduling, work-stealing",,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,215,,,,,,,,,"Siebert, Wolf",2017,https://www.researchgate.net/profile/Christian-Siebert-10/publication/48268999_A_scalable_parallel_sorting_algorithm_using_exact_splitting/links/5a37b64e458515919e70a258/A-scalable-parallel-sorting-algorithm-using-exact-splitting.pdf,,,,,,,,O(n/p log n + p log^2(n)),$O(n^0.5 \log^2.5{n})$,,,O(n log n + p log^2(n)) ?,11,,,"n: size of list
p: number of processors",,,,MIMD,300,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,216,,,,,,,,,Parallel modified merge sort - Marszalek,2017,https://www.mdpi.com/2073-8994/9/9/176,,,,,,,,2n - log n -2,O(n),10,,O(n^2),20,,,n: size of list,,,,PRAM,100,,,,,,,,,0,,0,,,1,n/2,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,217,,,,,,,,,Saukas-Song Selection Algorithm - Boxer,2017,https://www.researchgate.net/profile/Laurence-Boxer/publication/321510698_The_Saukas-Song_Selection_Algorithm_and_Coarse_Grained_Parallel_Sorting/links/5a383e0ba6fdccdd41fdebfa/The-Saukas-Song-Selection-Algorithm-and-Coarse-Grained-Parallel-Sorting.pdf,,,,,,,,"O(n/p^(1/2) log p + n/p log n)
",$O(\log{n})$ ?,1,,O(n p^(1/2) log p + n log n),11,,,"n: size of list
p: number of processors",,,,coarse grained multicomputer model (CGM) [w/ a PRAM architecture?],100,,,,,,,,,,,,,,1,p,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,218,,,,,,,,,"Fully Flexible Parallel Merge Sort - Marszalek, Wozniak, Polap",2018,https://downloads.hindawi.com/journals/complexity/2018/8679579.pdf,,,,,,,,O(n/p log^2(n)),O(log^2(n)),2,,O(n log^2(n)),12,,,"n: size of list
p: number of processors",,,,CREW PRAM,120,,,,,,,,,0,,0,,,1,p,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,,,219,,,,,,,,,"Kim, Choi, Bae",2018,https://dl.acm.org/doi/pdf/10.1145/3229710.3229730,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,220,,,,,,,,,"S-ARRAY - Sharma, Mishra, Mittal",2018,https://books.google.com/books?hl=lv&lr=&id=uMFVDwAAQBAJ&oi=fnd&pg=PA479&dq=%22parallel+sorting%22&ots=cqjzB_wJDz&sig=sbyzoHOHn3hX9ftj944Gf2lVZ30#v=onepage&q=%22parallel%20sorting%22&f=false,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-comparison sorting,221,,,,,,,,,"Maurya, Singh",2018,https://j.mecs-press.net/ijmecs/ijmecs-v10-n4/IJMECS-V10-N4-5.pdf,,,,,,,,O(n/p) + O(p log_3(n/p)),O(n) ?,10,,O(n) + O(p^2 log_3(n/p)),,,,"n: size of list
p: number of processors",,,,shared memory multiprocessor (PRAM or similar?),100,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,Non-comparison Sorting,Non-comparison sorting,222,,,,,,,,,"Bulk-sort - Ihirri, Errami, Khaldoun",2018,https://link.springer.com/chapter/10.1007/978-981-13-1165-9_66,,,,,,,,,,,,O(n),10,,,,,,,hardware sorter?,520,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-comparison sorting,223,,,,,,,,,"Regions sort - Obeya, Kahssay, Fan, Shun",2019,https://dl.acm.org/doi/abs/10.1145/3323165.3323198,,,,,,,,O((n/K+log K)log r),O((n/K+log K)log r),,https://dl.acm.org/doi/abs/10.1145/3323165.3323198,O(n log r),,https://dl.acm.org/doi/abs/10.1145/3323165.3323198,,"n: size of list (integers)
r: range [0...r-1]
K: algorithm parameter",,,,sorting network ?,510,,,,,,,,,0,,0,,,1,n ?,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,224,,,,,,,,,"Histogram Sort with Sampling (HSS) - Harsh, Kale, Solomonik",2019,https://dl.acm.org/doi/abs/10.1145/3323165.3323184?casa_token=OLHora1rGUwAAAAA:z0VGaR4DSjr1kzByhZhURzLjoje2SVXXD7YSGaQ7JiW6zeDLvp1Tis09aCFEuYcsEdJE1kK_xImXgg,,,,,,,,O(k) supersteps,O(1) supersteps ?,0,,O(kp(log p/epsilon)^(1/k)log n) computational + O(kp(log p/epsilon)^(1/k)) communicstion,,https://dl.acm.org/doi/abs/10.1145/3323165.3323184?casa_token=OLHora1rGUwAAAAA:z0VGaR4DSjr1kzByhZhURzLjoje2SVXXD7YSGaQ7JiW6zeDLvp1Tis09aCFEuYcsEdJE1kK_xImXgg,,"n: size of list
p: number of processors
k: number of rounds
epsilon: ? ""epsilon-balanced"", normally O(1) ??",,,,BSP,400,,,,,,,,,1,,0,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-comparison sorting,225,,,,,,,,,"Han, Mishra, Sayed",2019,https://6login.easychair.org/publications/download/77zm,,,,,,,,O(log^(1+epsilon) n),O(log^(1+epsilon) n),,,O(n log n / sqrt(loglog n)),,https://6login.easychair.org/publications/download/77zm,,n: size of list (real numbers),,,,CREW PRAM,120,,,,,,,,,0,,0,,,1,O(n/(log^epsilon(n)*sqrt(loglog n)),,,,,,,,sorts real numbers,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,226,,,,,,,,,"modified parallel merge sort - Marszalek, Capizzi",2019,https://link.springer.com/chapter/10.1007/978-3-030-30275-7_33,,,,,,,,n -1/3,O(n),10,,O(n^2),20,,,n: size of list,,,,CREW PRAM,120,,,,,,,,,0,,0,,,1,n,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-Comparison Sorting; Integer Sorting,227,,,,,,,,,Goyal,2020,https://www.proquest.com/docview/2418759164?pq-origsite=gscholar&fromopenview=true,,,,,,,,O(1),O(1),0,,O(n log m),,,,n: number of integers in range {0...m-1},,,,arbitrary CRCW PRAM,131,,,,,,,,,0,,0,,,1,O(n log m),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-Comparison Sorting; Integer Sorting,228,,,,,,,,,Goyal,2020,https://www.proquest.com/docview/2418759164?pq-origsite=gscholar&fromopenview=true,,,,,,,,O(loglog m/ log(p/n)),O(1),0,,O(p loglog m/ log(p/n)),,,,"n: number of integers in range {0...m-1}
p: number of processors",,,,priority CRCW PRAM,133,,,,,,,,,0,,0,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,229,,,,,,,,,"An, Oruc",2020,https://arxiv.org/abs/2011.11144,,,,,,,,O(1),O(1),0,,O(n^2),20,,,n: size of list,,,,hardware sorter,520,,,,,,,,,0,,0,,,1,O(n^2),20,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-Comparison Sorting; Integer Sorting,230,,,,,,,,,"Parallel Quick Sort Algorithm
(PQSA) and Merging Subarrays from Quick Sort Algorithm
(MSQSA) - Zeng",2021,https://ieeexplore.ieee.org/abstract/document/9498124,,,,,,,,O(n/p log(n/p)),O(1),0,,O(n log(n/p)),11,,,"n: size of list
p: number of threads (->procesors)",,,,shared memory (implements OpenMP),100,,,,,,,,,0,,0,,,1,p,11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-Comparison Sorting,231,,,,,,,,,"Moghaddam, Moghaddam",2021,https://www.researchsquare.com/article/rs-530919/v1,,,,,,,,O(n log p) + O(n log(log p /p)),O(n),10,,O(np log p) + O(np log(log p /p)),,,,"n: size of list
p: number of processors",,,,CREW PRAM,120,,,,,,,,,0,,0,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Non-comparison Sorting,Non-Comparison Sorting; Integer Sorting,232,,,,,,,,,"Han, He",2022,https://www.worldscientific.com/doi/abs/10.1142/S0129054122500071,,,,,,,,O((log n)^(3/2)/ loglog n),O((log n)^(3/2)/ loglog n),,,O(n (log n/ loglog n)^(1/2)),,https://www.worldscientific.com/doi/abs/10.1142/S0129054122500071,,"n: number of integers in range {0,...n^(1/2)} or {0,...,n-1}",,,,CREW PRAM,120,,,,,,,,,0,,0,,,1,O(n (loglog n)^(1/2) / log n),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,233,,,,,,,,,Kunapuli,2022,https://www.proquest.com/docview/2760564135?fromopenview=true&pq-origsite=gscholar&parentSessionId=fzYBUp1qawX4RG%2BojNv7T8nMX1f%2BPbvngyjuJvA6luc%3D,,,,,,,,O(c),O(1),0,,O(n^2 log^c(n)),25,,,"n: size of list (real numbers)
c: a constant",,,,Common CRCW PRAM,132,,,,,,,,,0,,0,,,1,O(n^2 log^c(n)),25,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0,,,234,,,,,,,,,"2mm - Mubarak, Iqbal, Naeem, Hussain",2022,https://www.sciencedirect.com/science/article/abs/pii/S0304397522000512,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,235,,,,,,,,,"Parallel D&C Bubble Sort - Ganapathi, Chowdhury (1)",2022,https://academic.oup.com/comjnl/article/65/10/2709/6334046,,,,,,,,$O(n^2/p +n)$,$O(n)$,10,,$O(n^2)$,20,,,n: size of list,,,,shared-memory multicore machine in the binary-forking model ,,,,,,,,,,0,,0,,,1,p,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,236,,,,,,,,,"Parallel D&C Selection Sort - Ganapathi, Chowdhury (2)",2022,https://academic.oup.com/comjnl/article/65/10/2709/6334046,,,,,,,,$O(n^2/p +n)$,$O(n)$,10,,$O(n^2)$,20,,,n: size of list,,,,shared-memory multicore machine in the binary-forking model ,,,,,,,,,,0,,0,,,1,p,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,237,,,,,,,,,"Parallel D&C Insertion Sort - Ganapathi, Chowdhury (3)",2022,https://academic.oup.com/comjnl/article/65/10/2709/6334046,,,,,,,,$O(n^2/p +n)$,$O(n)$,10,,$O(n^\log{3})$,,,,n: size of list,,,,shared-memory multicore machine in the binary-forking model ,,,,,,,,,,0,,0,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,238,,,,,,,,,Kasani (1),2022,https://www.proquest.com/docview/2668922234?pq-origsite=gscholar&fromopenview=true,,,,,,,,$O(1)$,$O(1)$,0,,$O(n^3)$,30,,,n: number of real numbers,,,,PRAM,100,,,,,,,,,0,,0,,,1,$n^3$,30,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,239,,,,,,,,,Kasani (2),2022,https://www.proquest.com/docview/2668922234?pq-origsite=gscholar&fromopenview=true,,,,,,,,$O(\log{\log{n}})$,$O(\log{\log{n}})$,0.1,,$O(n^2 \log{\log{n}})$,2.1,,,n: number of real numbers,,,,PRAM,100,,,,,,,,,0,,0,,,1,$n^2$,20,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,1,Comparison Sorting,Comparison sorting,240,,,,,,,,,"Goodrich, Jacob",2023,https://dl.acm.org/doi/abs/10.1145/3558481.3591093,,,,,,,,O(log n) w/ high probability,O(log n) w/ high probability,1,https://dl.acm.org/doi/abs/10.1145/3558481.3591093,O(nlog n) w/ high probability,11,https://dl.acm.org/doi/abs/10.1145/3558481.3591093,,n: size of list,,,,CREW PRAM,120,,,,,,,,,1,,0,,,1,$n$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Sorting,0.001,Comparison Sorting,Comparison sorting,241,,,,,,,,,"Multi-Deque Partition DualDeque Merge Sorting algorithm (MPDMSort) - Ketchaya, Rattanatranurak",2023,https://www.nature.com/articles/s41598-023-33583-4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://www.emerald.com/insight/content/doi/10.1108/ACI-10-2021-0288/full/html,,,,,,,,,,,,,,,,,,,,,,,,,,
2,kth Order Statistic,2,kth Order Statistic,kth Order Statistic,242,,,1,1,O(n^eps),,,[https://www.sciencedirect.com/science/article/pii/0020019084901285 Akl (1983)],Akl,1983,https://www.sciencedirect.com/science/article/pii/0020019084901285,,,,,,,,O(n^eps),O(n^eps),5.02,https://www.sciencedirect.com/science/article/pii/0020019084901285,O(n),10,https://www.sciencedirect.com/science/article/pii/0020019084901285,yes,"n: size of list
eps: processor parameter",n,,,"SIMD (synch, CRCW)",220,words?,3,n: 3,$O(n)$,"Derived: solving the optimal triangulation problem of a convex polygon where there are $n+1$ vertices and $n+1$, so total $O(n)$ auxiliary space",1,0,,0,,0,,0,1,O(n^(1-eps)),8.3,0,0,,the kth order statistic of a statistical sample is equal to its kth-smallest value.,,,,,,,,,,,,,9.965,Inf,,,,,,,,1,,,Combinatorics
2,kth Order Statistic,2,kth Order Statistic,kth Order Statistic,243,,,1,1,O(log n log log n),,,[https://archive.org/details/optimalparallela00vish/mode/2up Vishkin (1983)],Vishkin,1983,https://archive.org/details/optimalparallela00vish/mode/2up,,,,,,,,O(log n log log n),O(log n log log n),1.1,https://archive.org/details/optimalparallela00vish/mode/2up,O(n),10,,no,n: size of list,n,,,EREW PRAM,110,words?,3,n: 3,$O(n)$,"Derived: solving the optimal triangulation problem of a convex polygon where there are $n+1$ vertices and $n+1$, so total $O(n)$ auxiliary space",1,0,,0,,0,,0,1,O(n/(log n log log n)),8.95,0,0,,the kth order statistic of a statistical sample is equal to its kth-smallest value.,,,,,,,,,,,,,9.965,Inf,,,,,,,,1,,,Combinatorics
2,kth Order Statistic,2,kth Order Statistic,kth Order Statistic,244,,,1,1,O(log n log* n),,,"[https://dl.acm.org/doi/10.1145/12130.12151 Cole, Vishkin (1986)]","Cole, Vishkin",1986,https://dl.acm.org/doi/10.1145/12130.12151,,,,,,,,O(log n log* n),O(log n log* n),1.001,https://dl.acm.org/doi/10.1145/12130.12151,O(n),10,https://dl.acm.org/doi/10.1145/12130.12151,yes,n: size of list,n,,,EREW PRAM,110,words?,3,n: 3,$O(n)$,"Derived: solving the optimal triangulation problem of a convex polygon where there are $n+1$ vertices and $n+1$, so total $O(n)$ auxiliary space",1,0,,0,,0,,0,1,O(n/(log n log* n)),8.99,0,0,,the kth order statistic of a statistical sample is equal to its kth-smallest value.,,,,,,,,,,,,,9.965,Inf,,,,,,,,1,,,Combinatorics
2,kth Order Statistic,0.001,kth Order Statistic,kth Order Statistic,245,,,1,1,,,,"[https://journal.mcast.edu.mt/api/files/view/1411627.pdf Cortis, Inguanez, Farrugia (2020)]","Cortis, Inguanez, Farrugia",2020,https://journal.mcast.edu.mt/api/files/view/1411627.pdf,,,,,,,,,,,,,,,no,n: size of list,n,,,,,words?,3,n: 3,$O(n)$,"Derived: solving the optimal triangulation problem of a convex polygon where there are $n+1$ vertices and $n+1$, so total $O(n)$ auxiliary space",1,0,,0,,0,,0,1,,,0,0,,the kth order statistic of a statistical sample is equal to its kth-smallest value.,,,,,,,,,,,,,9.965,Inf,,,,,,,,1,,,Combinatorics
3,Matrix Chain Multiplication,1,MCOP,MCOP,246,,,1,1,O(log^2 n),,,"[https://epubs.siam.org/doi/10.1137/0212043 Valiant, Skyum, Berkowitz, Rackoff [implicit] (1983)]","Valiant, Skyum, Berkowitz, Rackoff [implicit]",1983,https://epubs.siam.org/doi/10.1137/0212043,,,,0,0,2,n: 2,O(log^2 n),O(log^2 n),2,,O(n^9 log^2 n)?,92,,no,n: number of matrices in chain,n,,,CRCW PRAM?,130,words?,3,n: 3,$O(n)$,"Derived: solving the optimal triangulation problem of a convex polygon where there are $n+1$ vertices and $n+1$, so total $O(n)$ auxiliary space",1,0,,0,,0,,0,1,O(n^9),90,0,0,,"Matrix chain multiplication (or Matrix Chain Ordering Problem; MCOP) is an
 optimization problem that can be solved using dynamic programming.
 Given a sequence of matrices; the goal is to find the most efficient
 way to multiply these matrices.",,,,,,,,,,,,,9.965,Inf,,,,,,,,1,,,Combinatorics
3,Matrix Chain Multiplication,1,MCOP,MCOP,247,,,1,1,O(log^2 n),,,[https://www.sciencedirect.com/science/article/pii/0304397588901478 Rytter (1988)],Rytter,1988,https://www.sciencedirect.com/science/article/pii/0304397588901478,,,,0,0,2,n: 2,O(log^2 n),O(log^2 n),2,https://www.sciencedirect.com/science/article/pii/0304397588901478,O(n^6 log n)?,61,,no,n: number of matrices in chain,n,,,CREW PRAM,120,words?,3,n: 3,$O(n)$,"Derived: solving the optimal triangulation problem of a convex polygon where there are $n+1$ vertices and $n+1$, so total $O(n)$ auxiliary space",1,0,,0,,0,,0,1,O(n^6/log n),59,0,0,,"Matrix chain multiplication (or Matrix Chain Ordering Problem; MCOP) is an
 optimization problem that can be solved using dynamic programming.
 Given a sequence of matrices; the goal is to find the most efficient
 way to multiply these matrices.",,,,,,,,,,,,,9.965,Inf,,,,,,,,1,,,Combinatorics
3,Matrix Chain Multiplication,1,MCOP,MCOP,248,,,1,1,O(log^2 n),,,"[https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=277784&tag=1 Huang, Liu, Viswanathan (1990)]","Huang, Liu, Viswanathan",1990,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=277784&tag=1,,,,0,0,2,n: 2,O(log^2 n),O(log^2 n),2,https://www.computer.org/csdl/journal/td/1994/03/l0326/13rRUwbaqUh,O(n^6/log^3 n),57,,no,n: number of matrices in chain,n,,,CREW PRAM,120,words?,3,n: 3,$O(n)$,"Derived: solving the optimal triangulation problem of a convex polygon where there are $n+1$ vertices and $n+1$, so total $O(n)$ auxiliary space",1,0,,0,,0,,0,1,O(n^6/log^5 n),55.5,0,0,https://cse.hkust.edu.hk/mjg_lib/bibs/DPSu/DPSu.Files/00288295.pdf,"Matrix chain multiplication (or Matrix Chain Ordering Problem; MCOP) is an
 optimization problem that can be solved using dynamic programming.
 Given a sequence of matrices; the goal is to find the most efficient
 way to multiply these matrices.",,,,,,,,,,,,,9.965,Inf,,,,,,,,1,,,Combinatorics
3,Matrix Chain Multiplication,0.001,MCOP,MCOP,249,,,1,1,O(log^2 n),,,"[ Galil, Park (1992)]","Galil, Park",1992,,,,,0,0,2,n: 2,O(log^2 n),O(log^2 n),2,,O(n^6/log^4 n)?,56,,no,n: number of matrices in chain,n,,,CREW PRAM?,120,words?,3,n: 3,$O(n)$,"Derived: solving the optimal triangulation problem of a convex polygon where there are $n+1$ vertices and $n+1$, so total $O(n)$ auxiliary space",1,0,,0,,0,,0,1,O(n^6/log^6 n),55.4,0,0,https://cse.hkust.edu.hk/mjg_lib/bibs/DPSu/DPSu.Files/00288295.pdf,"Matrix chain multiplication (or Matrix Chain Ordering Problem; MCOP) is an
 optimization problem that can be solved using dynamic programming.
 Given a sequence of matrices; the goal is to find the most efficient
 way to multiply these matrices.",,,,,,,,,,,,,9.965,Inf,,,,,,,,1,,,Combinatorics
3,Matrix Chain Multiplication,1,MCOP,MCOP,250,,,1,1,O(log^4 n),,,"[https://www.academia.edu/9377391/Matrix_Chain_Ordering_in_Polylog_Time_with_n_lg_n_Processors Bradford, Rawlins, Shannon (1992)]","Bradford, Rawlins, Shannon",1992,https://www.academia.edu/9377391/Matrix_Chain_Ordering_in_Polylog_Time_with_n_lg_n_Processors,,,,0,0,2,n: 2,$O(\log^4 n)$,$O(\log^4 n)$,4,https://www.academia.edu/9377391/Matrix_Chain_Ordering_in_Polylog_Time_with_n_lg_n_Processors,O(n log^3 n),13,,no,n: number of matrices in chain,n,,,COMMON CRCW PRAM,132,words?,3,n: 3,$O(n)$,"Derived: solving the optimal triangulation problem of a convex polygon where there are $n+1$ vertices and $n+1$, so total $O(n)$ auxiliary space",1,0,,0,,0,,0,1,$n / \log n$,9,0,0,,"Matrix chain multiplication (or Matrix Chain Ordering Problem; MCOP) is an
 optimization problem that can be solved using dynamic programming.
 Given a sequence of matrices; the goal is to find the most efficient
 way to multiply these matrices.",,,,,,,,,,,,,9.965,Inf,,,,,,,,1,,,Combinatorics
3,Matrix Chain Multiplication,1,MCOP,MCOP,251,,,1,1,O(log^4 n),,,[https://epubs.siam.org/doi/abs/10.1137/0225039 Prakesh Ramanan (1996)],Prakesh Ramanan,1996,https://epubs.siam.org/doi/abs/10.1137/0225039,,,,0,0,2.03,n: 2.03,$O(\log^4 n)$,$O(\log^4 n)$,4,https://epubs.siam.org/doi/abs/10.1137/0225039,$O(n\log^4 n)$?,14,https://epubs.siam.org/doi/abs/10.1137/0225039,no,$n$: number of matrices,n,,,CREW PRAM,120,words,3,n: 3,$O(n)$?,Derived: $n$ subtrees and each one has a $O(1)$ size trunk,1,0,,0,,0,,0,1,$n$,10,0,0,,"Matrix chain multiplication (or Matrix Chain Ordering Problem; MCOP) is an
 optimization problem that can be solved using dynamic programming.
 Given a sequence of matrices; the goal is to find the most efficient
 way to multiply these matrices.",,,,,,,,,,,,,99,Inf,,,,,,,,1,,,Combinatorics
3,Matrix Chain Multiplication,1,MCOP,MCOP,252,,,1,1,$O(\log^3 n)$,,,"[https://cse.hkust.edu.hk/mjg_lib/bibs/DPSu/DPSu.Files/00288295.pdf Bradford, Rawlins, Shannon (1998)]","Bradford, Rawlins, Shannon",1998,https://cse.hkust.edu.hk/mjg_lib/bibs/DPSu/DPSu.Files/00288295.pdf,,,,0,0,2.03,n: 2.03,$O(\log^3 n)$,$O(\log^3 n)$,3,https://cse.hkust.edu.hk/mjg_lib/bibs/DPSu/DPSu.Files/00288295.pdf,$O(n\log^2 n)$,12,,no,$n$: number of matrices,n,,,COMMON CRCW PRAM,132,words,3,n: 3,$O(n)$?,Derived: $n$ subtrees and each one has a $O(1)$ size trunk,1,0,,0,,0,,0,1,$n / \log n$,9,0,0,,"Matrix chain multiplication (or Matrix Chain Ordering Problem; MCOP) is an
 optimization problem that can be solved using dynamic programming.
 Given a sequence of matrices; the goal is to find the most efficient
 way to multiply these matrices.",,,,,,,,,,,,,99,Inf,,,,,,,,1,,,Combinatorics
3,Matrix Chain Multiplication,1,MCOP,MCOP,253,,,1,1,O(log^2 n log log n),,,"[https://cse.hkust.edu.hk/mjg_lib/bibs/DPSu/DPSu.Files/00288295.pdf Bradford, Rawlins, Shannon (1998)]","Bradford, Rawlins, Shannon",1998,https://cse.hkust.edu.hk/mjg_lib/bibs/DPSu/DPSu.Files/00288295.pdf,,,,0,0,2.03,n: 2.03,O(log^2 n log log n),O(log^2 n log log n),2.1,https://cse.hkust.edu.hk/mjg_lib/bibs/DPSu/DPSu.Files/00288295.pdf,$O(n\log^2 n)$,12,,no,$n$: number of matrices,n,,,CRCW PRAM,130,words,3,n: 3,$O(n)$?,Derived: $n$ subtrees and each one has a $O(1)$ size trunk,1,0,,0,,0,,0,1,$n / \log \log n$,9.1,0,0,,"Matrix chain multiplication (or Matrix Chain Ordering Problem; MCOP) is an
 optimization problem that can be solved using dynamic programming.
 Given a sequence of matrices; the goal is to find the most efficient
 way to multiply these matrices.",,,,,,,,,,,,,99,Inf,,,,,,,,1,,,Combinatorics
3,Matrix Chain Multiplication,1,MCOP,MCOP,254,,,1,1,O(log^2 n),,,"[https://cse.hkust.edu.hk/mjg_lib/bibs/DPSu/DPSu.Files/00288295.pdf Bradford, Rawlins, Shannon (1998)]","Bradford, Rawlins, Shannon",1998,https://cse.hkust.edu.hk/mjg_lib/bibs/DPSu/DPSu.Files/00288295.pdf,,,,0,0,2.03,n: 2.03,O(log^2 n),O(log^2 n),2,https://cse.hkust.edu.hk/mjg_lib/bibs/DPSu/DPSu.Files/00288295.pdf,$O(n\log^2 n)$,12,,no,$n$: number of matrices,n,,,EREW PRAM,110,words,3,n: 3,$O(n)$?,Derived: $n$ subtrees and each one has a $O(1)$ size trunk,1,0,,0,,0,,0,1,$n$,10,0,0,,"Matrix chain multiplication (or Matrix Chain Ordering Problem; MCOP) is an
 optimization problem that can be solved using dynamic programming.
 Given a sequence of matrices; the goal is to find the most efficient
 way to multiply these matrices.",,,,,,,,,,,,,99,Inf,,,,,,,,1,,,Combinatorics
3,Matrix Chain Multiplication,1,Matrix Chain Scheduling Problem,Matrix Chain Scheduling Problem,255,,,1,1,O (log^3 n),,,[https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.54.9426&rep=rep1&type=pdf Czumaj (1993)],Czumaj,1993,https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.54.9426&rep=rep1&type=pdf,,,,0,0,2.02,n: 2.02,O(log^3 n),$O(log^3 n)$,3,https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.54.9426&rep=rep1&type=pdf,$O(n^2)$,20,https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.54.9426&rep=rep1&type=pdf,no?,$n$: number of matrices,n,,,CREW PRAM,120,words,5,n: 5,$O(n^2)$?,Derived: uses two arrays ($D$ and $c$) both of size $O(n^2)$,1,0,,0,,0,,0,1,$O(n^2 / \log^3 n)$,17.9,0,0,,"Matrix chain multiplication (or Matrix Chain Ordering Problem; MCOP) is an
 optimization problem that can be solved using dynamic programming.
 Given a sequence of matrices; the goal is to find the most efficient
 way to multiply these matrices.",,,,,,,,,,,,,989,Inf,,,,,,,,1,,,Combinatorics
4,Longest Common Subsequence,1,LCS,LCS,256,,,,,,,,[https://ieeexplore.ieee.org/document/21966 Aggarwal & Park (1988)],Aggarwal & Park,1988,https://ieeexplore.ieee.org/document/21966,,,,,,,,O(log m log n),O(log m log n),2,https://ieeexplore.ieee.org/document/21966,O(mn log n),21,https://ieeexplore.ieee.org/document/21966,no?,"m: length of shorter string
n: length of longer string",,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(mn/log m),19,0,0,,The longest common subsequence (LCS) problem is the problem of finding the longest subsequence common to all sequences in a set of sequences (often just two sequences).,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,ALCS; LCS,257,,,,,,,,,"Alves, Cáceres, Song",2003,https://ieeexplore.ieee.org/iel5/8608/27277/01213150.pdf,,,,,,,,O(mn/p + log p),O(mn/p + log p),16,,O(mn),20,,,"n, m: lengths of strings",,,,BSP/CGM,400,,,,,,,,,0,,0,,0,1,p < sqrt(m),6,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,LCS,258,,,,,,,,"[https://www.proquest.com/openview/efa7264fa824ce7768c53ccdcc6d1458/1?pq-origsite=gscholar&cbl=666313 Apostolico, Atallah, Larmore, McFaddin (1990)]","Apostolico, Atallah, Larmore, McFaddin",1990,https://www.proquest.com/openview/efa7264fa824ce7768c53ccdcc6d1458/1?pq-origsite=gscholar&cbl=666313,,,,,,,,O(log m log n),O(log m log n),2,https://www.proquest.com/openview/efa7264fa824ce7768c53ccdcc6d1458/1?pq-origsite=gscholar&cbl=666313,O(mn log n),21,https://www.proquest.com/openview/efa7264fa824ce7768c53ccdcc6d1458/1?pq-origsite=gscholar&cbl=666313,no?,"m: length of shorter string
n: length of longer string",,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(mn/log m),19,0,0,,The longest common subsequence (LCS) problem is the problem of finding the longest subsequence common to all sequences in a set of sequences (often just two sequences).,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,LCS,259,,,,,,,,"[https://www.proquest.com/openview/efa7264fa824ce7768c53ccdcc6d1458/1?pq-origsite=gscholar&cbl=666313 Apostolico, Atallah, Larmore, McFaddin (1990)]","Apostolico, Atallah, Larmore, McFaddin",1990,https://www.proquest.com/openview/efa7264fa824ce7768c53ccdcc6d1458/1?pq-origsite=gscholar&cbl=666313,,,,,,,,O(log n (log log m)^2),O(log n (log log m)^2),1.15,https://www.proquest.com/openview/efa7264fa824ce7768c53ccdcc6d1458/1?pq-origsite=gscholar&cbl=666313,O(mn log n log log m),21.1,https://www.proquest.com/openview/efa7264fa824ce7768c53ccdcc6d1458/1?pq-origsite=gscholar&cbl=666313,no?,"m: length of shorter string
n: length of longer string",,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(mn/log log m),19.9,0,0,,The longest common subsequence (LCS) problem is the problem of finding the longest subsequence common to all sequences in a set of sequences (often just two sequences).,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,LCS,260,,,,,,,,,"Babu, Saxena",1997,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=634481,,,,,,,,O(log m),O(log m),1,,O(mn log m),21,,,"m: length of shorter string
n: length of longer string",,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(mn),20,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,LCS,261,,,,,,,,,"Babu, Saxena",1997,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=634481,,,,,,,,O(log^2 n),O(log^2 n),2,,O(mn),20,,,"m: length of shorter string
n: length of longer string",,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,mn/ logn,18,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,LCS,262,,,,,,,,,"Chen, Wan, Liu",2006,https://link.springer.com/content/pdf/10.1186/1471-2105-7-S4-S4.pdf,,,,,,,,"O(|LCS(X,Y)|)","O(|LCS(X,Y)|)",10,,O(L),20,,,"m: length of shorter string
n: length of longer string
L: number of identical char pairs",,,,MPP,700,,,,,,,,,0,,0,,0,1,"O(L/|LCS(X,Y)|)",10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,0.001,LCS,,263,,,,,,,,,"Eswaran, RajaGopalan",2010,http://www.anale-informatica.tibiscus.ro/download/lucrari/8-1-11-Sumathy.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,LCS,264,,,,,,,,,"Galper, Brutlag (synchronous Row Wavefront approach)",1990,https://wayback.stanford.edu/was/20180312101809mp_/http://cmgm.stanford.edu/~brutlag/Papers/galper90.pdf,,,,,,,,O(ceil(m/p)*(n+p)),O(m),10,,O(mn),20,,,,,,,shared memory,300,,,,,,,,,0,,0,,0,1,p,10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,LCS,265,,,,,,,,,"Galper, Brutlag (asynchronous Row Wavefront approach) (also asynch DWF)",1990,https://wayback.stanford.edu/was/20180312101809mp_/http://cmgm.stanford.edu/~brutlag/Papers/galper90.pdf,,,,,,,,O(ceil(mn/p + p)),O(ceil(mn/p + p)),10,,O(mn+p^2),20,,,,,,,shared memory,300,,,,,,,,,0,,0,,0,1,p,10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,LCS,266,,,,,,,,,"Galper, Brutlag (synchronous Diagonal Wavefront approach)",1990,https://wayback.stanford.edu/was/20180312101809mp_/http://cmgm.stanford.edu/~brutlag/Papers/galper90.pdf,,,,,,,,O(\sum_i^{m-1} ceil(i/p) + (n-m+1)ceil(m/p) ),O(m+n),10,,O(mn),20,,,,,,,shared memory,300,,,,,,,,,0,,0,,0,1,p,10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,0.001,LCS,LCS,267,,,,,,,,,"Hsu, Du",1984,https://www.sciencedirect.com/science/article/pii/0022000084900254/pdf,,,,,,,,O(m log(n/m) + m),O(m log(n/m) + m),10,,O(n log s + pm log(n/m) + pm),20,,,"n,m: lengths of strings m<=n
p: length of the LCS
s: number of distinct symbols",,,,unlisted,120,,,,,,,,,0,,0,,0,1,p,10,0,0,,,,,CREW PRAM can be assumed. The model was already being used by 1984. It was formally proposed in Wyllie's PhD thesis in 1979.,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,,ALCS,268,,,,,,,,,Tiskin,2005,https://core.ac.uk/download/pdf/35010175.pdf,,,,,,,,O(mn/p) computation + O(n log p) communication + O(log p) barrier synchronization + O(n) memory per processor,O(mn/p + n log p),,,O(mn),20,,,assumes m ≥ n^{1/2} p log p,,,,BSP,400,,,,,,,,,0,,0,,0,1,p,,0,0,,SS_LCS consists in computing the length of the longest common subsequence of a and every substring of b,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,LLCS;LCS,269,,,,,,,,,"Krusche, Tiskin (dynamic programming)",2006,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=dd15623d9907870e7e7094a1570f40f6286a0891,,,,,,,,O(n^2/p · ( f + g/b + l/b^2)),O(n^2/p · ( f + g/b + l/b^2)),,,O(n^2 · ( f + g/b + l/b^2)),,,,"n: length of both strings
f: primitive operation time
g: communication gap
l: communication latency
b: memory block size",,,,BSP,400,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,LCS,270,,,,,,,,,"Krusche, Tiskin",2010,https://dl.acm.org/doi/pdf/10.1145/1810479.1810521,,,,,,,,O(n^2/p),O(n^{5/3}),16.5,,O(n^2),20,,,"n: length of both strings
p: number of processors",,,,BSP,400,,,,,,,,,0,,0,,0,1,p < n^{1/3},5.6,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,0.001,,MLCS,271,DP,,,,,,,,"Li, Li, Duan, Wang, Wang",2016,https://dl.acm.org/doi/pdf/10.1145/2939672.2939842,,,,,,,,1/N_p*O(|V|) + T_com,1/N_p*O(|V|) + T_com,,,O(d|Σ|n + |E| + |V|),,,,"d: number of sequences
Σ: alphabet
n: length of each sequence
E: set of edges in NCSG
V: set of vertices in NCSG",,,,"None listed
""problem-solving model"" is Non-redundant
Common Subsequence Graph (NCSG)",,,,,,,,,,0,,0,,0,1,N_p,,0,0,,,,,MIMD (shared-memory multicore machines).,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,LCS,272,,,,,,,,,"Lin, Lu, Fang",1991,https://ieeexplore.ieee.org/iel5/373/5730/00218203.pdf,,,,,,,,"max(log^2 m log log m, log n)","max(log^2 m log log m, log n)",2.1,,O(mn),20,,,"m: length of shorter string
n: length of longer string",,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,"mn/max(log^2 m log log m, log n)",17.99,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,LCS,273,,,,,,,,,"Liu, Chen",2008,https://link.springer.com/chapter/10.1007/978-0-387-77251-6_8,,,,,,,,"O(|LCS(X,Y)|)","O(|LCS(X,Y)|)",10,,O(L),,,,L: number of identical character pairs,,,,Shenteng 1800 using MPI,700,,,,,,,,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,LCS,274,,,,,,,,,"Liu, Chen, Chen, Qin",2006,https://ieeexplore.ieee.org/iel5/10901/4673510/04673521.pdf,,,,,,,,"O(|LCS(X,Y)|)","O(|LCS(X,Y)|)",10,,O(L),,,,L: number of identical character pairs,,,,Shenteng 1800 using MPI,700,,,,,,,,,0,,0,,0,1,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,LCS,275,,,,,,,,,Lu,1990,https://link.springer.com/chapter/10.1007/3-540-53504-7_96,,,,,,,,O(log{\rho} log^2{n}) + O(log m + log n),O(log{\rho} log^2{n}) + O(log m + log n),,,O(r log{\rho} log^2{n}) + O((m+n)(log m + log n)),,,,"\rho: length of LCS
r: number of pairs of positions at which two symbols match",,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,"max(r,m+n)",,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,LCS,276,,,,,,,,[https://ieeexplore.ieee.org/document/298210 Lu & Lin (1994)],Lu & Lin,1994,https://ieeexplore.ieee.org/document/298210,,,,,,,,O(log^2 m + log n),O(log^2 m + log n),2,https://ieeexplore.ieee.org/document/298210,O(mn (log m + log n/log m)),21,https://ieeexplore.ieee.org/document/298210,no?,c,,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(mn/log m),19,0,0,,The longest common subsequence (LCS) problem is the problem of finding the longest subsequence common to all sequences in a set of sequences (often just two sequences).,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,LCS,277,,,,,,,,[https://ieeexplore.ieee.org/document/298210 Lu & Lin (1994)],Lu & Lin,1994,https://ieeexplore.ieee.org/document/298210,,,,,,,,"O(log^2 m log log m) if 
log^2 m log log m > log n else
O(log n)",O(log^2 m log log m + log n),2.1,https://ieeexplore.ieee.org/document/298210,O(mn),20,https://ieeexplore.ieee.org/document/298210,no?,"m: length of shorter string
n: length of longer string",,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,"O(mn/(log^2 m 
log log m)) if
log^2 m log log m
< log n else
O(mn/log n)",17.99,0,0,,The longest common subsequence (LCS) problem is the problem of finding the longest subsequence common to all sequences in a set of sequences (often just two sequences).,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,1,LCS,LCS,278,,,,,,,,[https://kilthub.cmu.edu/articles/journal_contribution/A_fast_parallel_algorithm_to_determine_edit_distance/6587387/1 Mathies (1988)],Mathies,1988,https://kilthub.cmu.edu/articles/journal_contribution/A_fast_parallel_algorithm_to_determine_edit_distance/6587387/1,,,,,,,,O(log m log n),O(log m log n),2,https://kilthub.cmu.edu/articles/journal_contribution/A_fast_parallel_algorithm_to_determine_edit_distance/6587387/1,O(mn log m log n),22,https://kilthub.cmu.edu/articles/journal_contribution/A_fast_parallel_algorithm_to_determine_edit_distance/6587387/1,no?,"m: length of shorter string
n: length of longer string",,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(mn),20,0,0,,The longest common subsequence (LCS) problem is the problem of finding the longest subsequence common to all sequences in a set of sequences (often just two sequences).,,,,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,0.001,LCS,,279,,,,,,,,,"Needleman, Wunsch",1970,https://www.gersteinlab.org/courses/452/05-fall/readings/needleman-wunsch-orig-dyn-prog-paper.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,I am a bit confused. This does not seem like parallel algorithms paper. ,,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,0.001,, SSCLCS ,280,,,,,,,,,"Tchendji, Tepiele, Onabid, Myoupo",2022,https://www.sciencedirect.com/science/article/pii/S016781912200028X,,,,,,,,,,,,,,,,,,,,CGM/BSP,400,,,,,,,,,,,,,,,,,,,,,,,"I cannot access the full paper either (but the Introduction is accessible). But the paper uses the ""Coarse-Grained Multicomputer"" (CGM) model. This is what the paper says in the Introduction about CGM: ""A BSP/CGM machine is a set of p processors, each having its local memory of size s (with O(s) >> O(1)) and connected with a router’s table to deliver messages in a point-to-point fashion. Each BSP/CGM algorithm consists of an alternation between local computations and global communication rounds. Each communication round consists of routing a single h-relation with h = O(s). Each CGM computation and communication round corresponds to a BSP super-step with communication costs g x s [19]. Here, g is the communication cost of a word in the BSP model. To produce efficient BSP/CGM parallel algorithms, designers tend to maximize the speedup and minimize the number of communication rounds (which are ideally independent of the problem size and constant in the optimum)."" The complexities of the algorithm can be found in the abstract and the Introdcution.",,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,0.001,,MLCS,281,,,,,,,,,"Wang, Korkin, Shang",2008,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5530316,,,,,,,,"T(N,d)/m",O(dn log^{d-2} n),,,"T(N,d) =O(dN log^{d-2} N)",,,,"d: number of sequences
n: length of sequences
N: number of dominant points?",,,,Not listed,,,,,,,,,,0,,0,,0,1,m <= N/n,,0,0,,,,,"The complexities listed in the Google sheet do not seem correct. The sequential running time of the algorithm is given by equation 5 on page 5. The parallel running time is given by Theorem 3. The parallel algorithm has been analyzed under a distributed-memory model. But the algorithm works just fine on an MIMD (shared-memory multicore) machine, and that is what they did in the experimental results section of the paper. ",,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,0.001,,MLCS,282,,,,,,,,,"Yang, Xu, Sun, Shang (DPro-MLCS)",2012,https://ieeexplore.ieee.org/iel5/71/4359390/06226388.pdf,,,,,,,,,,,,,,,,,,,,distributed memory,700,,,,,,,,,,,,,,,m,,,,,,,,"The supplementary material is available as a ZIP file at the bottom of the page under ""Media"" (https://ieeexplore.ieee.org/document/6226388/media#media).",,,,,,,,,,,,,,,,,,,,,,
4,Longest Common Subsequence,0.001,,MLCS,283,,,,,,,,,"Yang, Xu, Sun, Shang ( DSDPro-MLCS)",2012,https://ieeexplore.ieee.org/iel5/71/4359390/06226388.pdf,,,,,,,,,,,,,,,,,,,,hierarchical distributed shared memory,700,,,,,,,,,,,,,,,,,,,,,,,"The supplementary material is available as a ZIP file at the bottom of the page under ""Media"" (https://ieeexplore.ieee.org/document/6226388/media#media).",,,,,,,,,,,,,,,,,,,,,,
5,Maximum Flow,1,Max Flow,st-Maximum Flow,284,,,1,1,O(V^3*log(V)/p),(see max flow in sheet1),,"[http://users.umiacs.umd.edu/~vishkin/TEACHING/4CLASS/SV82-maxflow.pdf Shiloach, Vishkin (1981)]","Shiloach, Vishkin",1981,http://users.umiacs.umd.edu/~vishkin/TEACHING/4CLASS/SV82-maxflow.pdf,,,,,0,,,O(V^3*log(V)/p),$O(V^3*log(V)/p)$,11,http://users.umiacs.umd.edu/~vishkin/TEACHING/4CLASS/SV82-maxflow.pdf,$O(V^3*log(V))$,16.1,http://users.umiacs.umd.edu/~vishkin/TEACHING/4CLASS/SV82-maxflow.pdf,yes relative to sequential algorithm described in paper,"V: number of vertices
E: number of edges
U: maximum edge capacity
p: number of processors",,,,CRCW PRAM,130,words,O(E),"V: 5,
E: 3",can be derived?,,,,,0,,0,,0,1,p,6,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,,,,2,,,Combinatorics
5,Maximum Flow,1,Max Flow,st-Maximum Flow,285,,,1,1,O(V^2 log(V)),,,"[https://epubs.siam.org/doi/abs/10.1137/0218003 Gallo, Grigoriadis, Tarjan (1989)]","Gallo, Grigoriadis, Tarjan",1989,https://epubs.siam.org/doi/abs/10.1137/0218003,,,,,0,,,O(V^2 log(V)),$O(V^2 log(V))$,11,https://epubs.siam.org/doi/abs/10.1137/0218003,$O(V^3*log(V))$,16.1,,,"V: number of vertices
E: number of edges
U: maximum edge capacity",,,,Communication network,700,words,O(E),"V: 5,
E: 3",can be derived?,,,,,0,,0,,0,1,V,6,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,,,,2,,,Combinatorics
5,Maximum Flow,1,Max Flow,st-Maximum Flow,286,,,1,1,O(V^2 log(V)),,,[https://dl.acm.org/doi/10.5555/520668 Vollmer (1999)],Vollmer,1999,https://dl.acm.org/doi/10.5555/520668,,,,,0,,,O(V^2 log(V)),$O(V^2 log(V))$,11,https://www.sciencedirect.com/science/article/abs/pii/S0743731522001691,$O(V^3*log(V))$,16.1,https://www.sciencedirect.com/science/article/abs/pii/S0743731522001691,,"V: number of vertices
E: number of edges
U: maximum edge capacity",,,,CREW PRAM,120,words,O(E),"V: 5,
E: 3",can be derived?,,,,,0,,0,,0,1,V,6,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,,,,2,,,Combinatorics
5,Maximum Flow,1,Max Flow,st-Maximum Flow,287,,,1,1,O(V^2 log(V)),,,[https://dspace.mit.edu/handle/1721.1/149100 Goldberg (1985)],Goldberg,1985,https://dspace.mit.edu/handle/1721.1/149100,,,,,0,,,O(V^2 log(V)),$O(V^2 log(V))$,11,https://dspace.mit.edu/handle/1721.1/149100,$O(V^3*log(V))$,16.1,https://dspace.mit.edu/handle/1721.1/149100,,"V: number of vertices
E: number of edges
U: maximum edge capacity",,,,CREW PRAM,120,words,O(E),"V: 5,
E: 3",can be derived?,,,,,0,,0,,0,1,V,6,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,,,,2,,,Combinatorics
5,Maximum Flow,1,Max Flow,Integer Maximum Flow,288,,,1,1,O(V^2 log(U) log(E/V)),,,"[https://pubsonline.informs.org/doi/abs/10.1287/opre.37.5.748 Ahuja, Orlin (1989)]","Ahuja, Orlin",1989,https://pubsonline.informs.org/doi/abs/10.1287/opre.37.5.748,,,,,0,,,O(V^2 log(U) log(E/V)),O(V^2 log(U) log(E/V)),16.1,https://pubsonline.informs.org/doi/abs/10.1287/opre.37.5.748,O(VE log(U) log(E/V)),21,,,"V: number of vertices
E: number of edges
U: maximum edge capacity",,,,EREW PRAM,110,words,O(E),"V: 5,
E: 3",can be derived?,,,,,0,,0,,0,1,O(E/V),6,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,,,,2,,,Combinatorics
5,Maximum Flow,1,Max Flow,Integer Maximum Flow,289,,,1,1,O(V^1.66 log(V) log(U)),(see max flow in sheet1),,[https://dl.acm.org/citation.cfm?id=290181 Goldberg & Rao (Parallel) (1997)],Goldberg & Rao (Parallel),1997,https://dl.acm.org/citation.cfm?id=290181,,,,,0,4.66,,O(V^{5/3} log(V) log(U)),$O(V^{5/3} log(V) log(U))$,15.41,https://dl.acm.org/citation.cfm?id=290181,$O(V^{8/3} log(V) log(U))$?,16.9,Derived,,"V: number of vertices
E: number of edges
U: maximum edge capacity",,,,PRAM,100,words,O(V^2),V: 5,https://dl.acm.org/citation.cfm?id=290181,,,,,0,,0,,0,1,O(V),6,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,,,,2,,,Combinatorics
5,Maximum Flow,1,Max Flow,Integer Maximum Flow,290,,,1,1,O(E^0.5 V log(V) log(U)),(see max flow in sheet1),,[https://dl.acm.org/citation.cfm?id=290181 Goldberg & Rao (Parallel) (1997)],Goldberg & Rao (Parallel),1997,https://dl.acm.org/citation.cfm?id=290181,,,,,0,5,,O(E^0.5 V log(V) log(U)),$O(E^0.5 V log(V) log(U))$,16.1,https://dl.acm.org/citation.cfm?id=290181,$O(E^0.5 V^2 log(V) log(U))$?,21,Derived,,"V: number of vertices
E: number of edges
U: maximum edge capacity",,,,PRAM,100,words,O(V^2),V: 5,https://dl.acm.org/citation.cfm?id=290181,,,,,0,,0,,0,1,O(V),6,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,,,,2,,,Combinatorics
5,Maximum Flow,1,Max Flow,st-Maximum Flow,291,,,1,1,O(V log V),,,"[https://dl.acm.org/doi/abs/10.1016/j.jpdc.2022.07.003 Peretz, Fischler (2022)]","Peretz, Fischler",2022,https://dl.acm.org/doi/abs/10.1016/j.jpdc.2022.07.003,,,,,0,4.66,,O(V log V),O(V log V),6.1,https://dl.acm.org/doi/abs/10.1016/j.jpdc.2022.07.003,O(V^3 log V),16.1,https://dl.acm.org/doi/abs/10.1016/j.jpdc.2022.07.003,,"V: number of vertices
E: number of edges
U: maximum edge capacity",,,,CREW PRAM,120,words,O(V^2),V: 5,https://dl.acm.org/citation.cfm?id=290181,,,,,0,,0,,0,1,O(V^2),10,0,0,,maximum flow problems involve finding a feasible flow through a flow network that is maximum.,,,,,,,,,,,,,,,,,,,,,,2,,,Combinatorics
6,Matrix Product,0.001,Matrix Multiplication,Matrix Multiplication,292,Strassen,,,,,,,,Chandra,1976,https://cir.nii.ac.jp/crid/1573105974323147776,,,,,,,,O(n^{log 7}/p),O(\log{n}),1,,O(n^{log 7}),15.5,,,,,,,CREW PRAM,120,,,,,,,,,,,,,,1,p,15.49,,,,,,,Model: CREW; Work: O( n^{\log_2{7}} ); Span: \Th{ \log{n} }.,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,0.001,Matrix Multiplication,Matrix Multiplication,293,Transitive closure method,,,,,,,,Chandra,1976,https://cir.nii.ac.jp/crid/1573105974323147776,,,,,,,,O(log^2(n)),O(log^2(n)),2,,n^(log7)*log(n),15.6,,,,,,,SIMD-SM-R (CREW PRAM?),210,,,,,,,,,,,0,,0,1,n^(log7)/log(n),27,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,Model: CREW; Work: O( n^{\log_2{7}} log(n) ); Span: \Th{ \log^2{n} }; This is achieved by using Chandra's parallelization of Strassen's MM algorithm \log_{2}{n} times for repeated squaring of the original adjacency matrix.,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,0.001,Boolean Matrix Multiplication,Boolean Matrix Multiplication,294,,,,,,,,,"Agerwala, Lint",1978,"T. Agerwala and B. Lint, ""Communication in parallel algorithms for Boolean matrix multiplication,""-Proc. 1978 Inter. Conf. on Parallel Processing, 1978.",,,,,,,,O(log n),O(log n),1,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=810488,O(n^3/log log n),15.999,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=810488,,,,,,interconnected network,700,,,,,,,,,,,,,,1,O(n^3/(log n log log n)),15.94,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,0.001,Boolean Matrix Multiplication,Boolean Matrix Multiplication,295,,,,,,,,,"Agerwala, Lint",1978,"T. Agerwala and B. Lint, ""Communication in parallel algorithms for Boolean matrix multiplication,""-Proc. 1978 Inter. Conf. on Parallel Processing, 1978.",,,,,,,,O(log n),O(log n),1,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=810488,O(n^3 log n/log log n),16.07,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=810488,,,,,,interconnected network,700,,,,,,,,,,,,,,1,O(n^3/log log n),15.999,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,Matrix Multiplication,Matrix Multiplication,296,,,,,,,,,Dekel; Nassimi & Sahni,1981,https://epubs.siam.org/doi/abs/10.1137/0210049,,,,,,,,O(log n),O(log n),1,,O(n^3*log n),16.1,,,,,,,SIMD-CC,700,,,,,,,,,0,,0,,0,1,n^3,16,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,Matrix Multiplication,Matrix Multiplication,297,,,,,,,,,Dekel; Nassimi & Sahni,1981,https://epubs.siam.org/doi/abs/10.1137/0210049,,,,,,,,O(n),O(n),6,,O(n^3),16,,,,,,,SIMD-CC,700,,,,,,,,,0,,0,,0,1,n^2,10,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,Matrix Multiplication,Matrix Multiplication,298,,,,,,,,,Dekel; Nassimi & Sahni,1981,https://epubs.siam.org/doi/abs/10.1137/0210049,,,,,,,,O(n/m + log m),O(n/m + log m),5.9,,O(n^3 + n^2*m*log m),16,,,"nxn matrix multiplication
1 <= m <= n",,,,SIMD-CC,700,,,,,,,,,0,,0,,0,1,n^2*m,11,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,Matrix Multiplication,Matrix Multiplication,299,,,,,,,,,Dekel; Nassimi & Sahni,1981,https://epubs.siam.org/doi/abs/10.1137/0210049,,,,,,,,O(n^2/m+n^2.61/m^1.61),O(n^2/m+n^2.61/m^1.61),,,O(n^2*m+n^2.61*m^0.39),,,,,,,,SIMD-CC,700,,,,,,,,,0,,0,,0,1,m^2,,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,Matrix Multiplication,Matrix Multiplication,300,,,,,,,,,Dekel; Nassimi & Sahni,1981,https://epubs.siam.org/doi/abs/10.1137/0210049,,,,,,,,O(log n),O(log n),1,,O(n^3*log n),16.1,,,,,,,SIMD-PS,700,,,,,,,,,0,,0,,0,1,n^3,16,,,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,Matrix Multiplication,Matrix Multiplication,301,,,,,,,,,Dekel; Nassimi & Sahni,1981,https://epubs.siam.org/doi/abs/10.1137/0210049,,,,,,,,O(n/m + log n),O(n/m + log n),,,O(n^3 + n^2*m*log m),,,,,,,,SIMD-PS,700,,,,,,,,,0,,0,,0,1,n^2*m,,,,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,Matrix Multiplication,Matrix Multiplication,302,,,,,,,,,Dekel; Nassimi & Sahni,1981,https://epubs.siam.org/doi/abs/10.1137/0210049,,,,,,,,O(n^2/m+n^2.61/m^1.61),O(n^2/m+n^2.61/m^1.61),,,O(n^2*m+n^2.61*m^0.39),,,,,,,,SIMD-PS,700,,,,,,,,,0,,0,,0,1,m^2,,,,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,Matrix Multiplication,Matrix Multiplication,303,,,,,"O(1)
Work: O(n^3)","""Edge lengths are independent identically distributed nonnegative random variables. Each edge length has a distribution function F with F(0)=0 and that F is differentiable at zero.""",,,Frieze & Rudolph,1984,http://math.cmu.edu/~af1p/Texfiles/PARALLELALG.pdf,,,,,,,,,,,,,,,,,,,,CRCW PRAM,130,,,,,,,,,,,,,,1,n^3,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,Matrix Multiplication,Matrix Multiplication,304,,,,,,,,,"AGGARWAL, CHANDRA, SNIR",1990,https://www.sciencedirect.com/science/article/pii/030439759090188N,,,,,,,,O(log^{3/2}(n)),O(n^3/p + n^2/p^{2/3})),,,O(n^3+n^2*p^{1/3}) = O(n^3),,,,,,,,LPRAM,120,,,,,,,,,0,,0,,0,1,p=O(n^3/log^{3/2}(n)),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,Matrix Multiplication,Matrix Multiplication,305,,,,,,,,,"Agarwal, Gustavson, Zubair",1994,https://ieeexplore.ieee.org/abstract/document/5389494,,,,,,,,O(n^3/p),O(n^3/p),,,O(n^3),16,,,,,,,MIMD-like machine,700,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,Matrix Multiplication,Matrix Multiplication,306,,,,,,,,,"Agarwal, Bale, Gustavson, Joshi, Palkar (P_GEMM, Classical 3D)",1995,https://people.cs.vt.edu/~asandu/Public/Qual2005/Q2005_agarwal.pdf,,,,,,,,O(n^3/p),O(n^3/p),,,O(n^3),16,,,,,,,"unlisted, assume MIMD",700,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,Matrix Multiplication,Matrix Multiplication,307,,,,,,,,,"Solomonik, Demmel (Classical 2.5D)",2011,https://www2.eecs.berkeley.edu/Pubs/TechRpts/2011/EECS-2011-10.pdf,,,,,,,,O(n^3/p),O(n^3/p),,,O(n^3),16,,,,,,,synchronous communication,700,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,Matrix Multiplication,Matrix Multiplication,308,,,,,,,,,"Ballard, Demmel, Holtz, Lipshitz, Schwartz (CAPS)",2012,https://dl.acm.org/doi/pdf/10.1145/2312005.2312044,,,,,,,,O(n^{log 7}/P),O(n^{log 7}/P),,,O(n^{log 7}),15.5,,,"P: number of processors
ω0 = log_2 7
M: size of each processor's local memory",,,,message-passing network - BSP without the bulk-synchrony requirement,400,,,,,,,,,0,,0,,0,1,P,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,Matrix Multiplication,Matrix Multiplication,309,,,,,,,,,"Luo, Drake (2D-Strassen)",1995,https://dl.acm.org/doi/pdf/10.1145/315891.315965,,,,,,,,O(n^{log 7}/P^{(log 7−1)/2}),O(n^{log 7}/P^{(log 7−1)/2}),,,O(n^{log 7}*P^{(3-log 7)/2}),,,,,,,,"distributed memory, message passing",700,,,,,,,,,0,,0,,0,1,P,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,Matrix Multiplication,Matrix Multiplication,310,,,,,,,,,"Luo, Drake (Strassen-2D)",1995,https://dl.acm.org/doi/pdf/10.1145/315891.315965,,,,,,,,(7/8)^l*n^3/P,(7/8)^l*n^3/P,,,(7/8)^l*n^3,,,,"nxn: size of matrices being multiplied
l: the number of Strassen steps taken",,,,"distributed memory, message passing",700,,,,,,,,,0,,0,,0,1,P,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,Matrix Multiplication,Matrix Multiplication,311,,,,,,,,,"Hunold, Rauber, Rünger",2008,https://www.sciencedirect.com/science/article/pii/S0167819108000355,,,,,,,,O(n^3/p),O(n^3/p),,,O(n^3),16,,,,,,,multiprocessor task programming model (uses distributed memory),700,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,Matrix Multiplication,Matrix Multiplication,312,,,,,,,,,Ballard (CAPS) (same as 2012 paper),2013,https://www.proquest.com/docview/1526399338?pq-origsite=gscholar&fromopenview=true,,,,,,,,O(n^{log 7}/P),O(n^{log 7}/P),,,O(n^{log 7}),15.6,,,,,,,"distributed memory, message passing",700,,,,,,,,,0,,0,,0,1,P,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,Matrix Multiplication,Matrix Multiplication,313,,,,,,,,,Ballard (2.5D-Strassen),2013,https://www.proquest.com/docview/1526399338?pq-origsite=gscholar&fromopenview=true,,,,,,,,"max {n^3/(PM^{3/2−(log 7)/2}), n^{log 7}/P^{(log 7)/3} } + n^2/P^{2/3} + log P","max {n^3/(PM^{3/2−(log 7)/2}), n^{log 7}/P^{(log 7)/3} } + n^2/P^{2/3} + log P",,,"max {n^3/M^{3/2−(log 7)/2}, n^{log 7}/P^{(log 7)/3 - 1} } + n^2 P^{1/3} + P log P",,,,,,,,"distributed memory, message passing",700,,,,,,,,,0,,0,,0,1,P,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,Matrix Multiplication,Matrix Multiplication,314,,,,,,,,,Ballard (Strassen-2.5D),2013,https://www.proquest.com/docview/1526399338?pq-origsite=gscholar&fromopenview=true,,,,,,,,(7/8)^l n^3/P,(7/8)^l n^3/P,,,(7/8)^l n^3,,,,,,,,"distributed memory, message passing",700,,,,,,,,,0,,0,,0,1,P,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,Matrix Multiplication,Matrix Multiplication,315,,,,,,,,,"Bae, Shinn, Takaoka",2014,https://www.sciencedirect.com/science/article/pii/S1877050914003858,,,,,,,,O(n),O(n),6,,O(n^3),16,,,"nxn: size of matrices
t_s: message startup time
t_w: per-word comm time",,,,mesh array,700,,,,,,,,,0,,0,,0,1,n^2,10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,Matrix Multiplication,Matrix Multiplication,316,,,,,,,,,"Gazit, Miller (parallel Coppersmith & Winograd 1987)",1988,http://www.cs.cmu.edu/~glmiller/Publications/GaMi88.pdf,,,,,,,,O(log n),O(log n),1,,O(n^{2.376} log n),15.11,,,,,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(n^{2.376}),15.109,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,Matrix Multiplication,Matrix Multiplication,317,,,,,,,,,"Gupta, Kumar (variant of DNS81)",1993,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4134256,,,,,,,,n^3/p + 5/3 t_s log(p) + 5/3 t_w n^2/p^{2/3} log(p),n^3/p + 5/3 t_s log(p) + 5/3 t_w n^2/p^{2/3} log(p),,,n^3 + 5/3 t_s p log(p) + 5/3 t_w n^2 p^{1/3} log(p),,,,"nxn: size of matrices
t_s: message startup time
t_w: per-word comm time",,,,2D mesh,700,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,Matrix Multiplication,Matrix Multiplication,318,,,,,,,,,"Dumitrescu, Roch, Trystram",1994,https://www.tandfonline.com/doi/pdf/10.1080/10637199408915454,,,,,,,,O(n^log 7),O(n^log 7),,,O(n^log 7),15.6,,,,,,,distributed MIMD w/ ring network,700,,,,,,,,,0,,0,,0,1,7,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,Matrix Multiplication,Matrix Multiplication,319,,,,,,,,,"Dumitrescu, Roch, Trystram",1994,https://www.tandfonline.com/doi/pdf/10.1080/10637199408915454,,,,,,,,O((n/2^k)^log 7),O((n/2^k)^log 7),,,O((n/2^k)^log 7*7^k),,,,,,,,distributed MIMD w/ k hyper-torus network,700,,,,,,,,,0,,0,,0,1,7^k,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,Matrix Multiplication,Matrix Multiplication,320,,,,,,,,,Berntsen (Classical 3D),1989,https://www.sciencedirect.com/science/article/pii/0167819189900914,,,,,,,,n^3/p + 2 t_s p^{1/3} + 1/3 t_s log(p) + 3 t_w n^2/p^{2/3},n^3/p + 2 t_s p^{1/3} + 1/3 t_s log(p) + 3 t_w n^2/p^{2/3},,,n^3 + 2 t_s p^{4/3} + 1/3 t_s p log(p) + 3 t_w n^2 p^{1/3},,,,"nxn: size of matrices
t_s: message startup time
t_w: per-word comm time",,,,2D mesh,700,,,,,,,,,0,,0,,0,1,p,,0,0,Info from this paper: https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4134256,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,Matrix Multiplication,Matrix Multiplication,321,,,,,,,,,"Fox, Johnson, Lyzenga, Otto, Salmon, Walker",1988,"G. Fox, M. Johnson, G. Lyzenga, S. Otto, J. Salmon, and D. Walker, Solving Problems on Concurrent Processors. Vol. 1 1988",,,,,,,,,M^{3/2} for N = M^{3/2},7.5,,M^3,16,,,"MxM: size of matrix
N: number of processing nodes",,,,hypercube,700,,,,,,,,,,,,,,,,7.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,Matrix Multiplication,Matrix Multiplication,322,,,,,,,,,Cannon (Classical 2D),1969,"L. E. Cannon, A Cellular Computer to Implement the Kalman Filter Algorithm, Ph.D. thesis, Montana State University, Bozeman, MT, 1969",,,,,,,,n^3/p + 2sqrt(p) * (t_s + n^2/p t_w),n^3/p + 2sqrt(p) * (t_s + n^2/p t_w),,,n^3 + 2sqrt(p) * (p*t_s + n^2*t_w),,,,"nxn: size of matrices
t_s: message startup time
t_w: per-word comm time",,,,2D mesh,700,,,,,,,,,0,,0,,0,1,p,,0,0,Info from this paper: https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4134256,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,Matrix Multiplication,Matrix Multiplication,323,,,,,,,,,"Fox, Otto, Hey (aka broadcast-multiply-roll)",1987,https://www.sciencedirect.com/science/article/pii/0167819187900603,,,,,,,,2M^3/N*t_flop + 2M^2/sqrt(N)*t_comm + sqrt(N)(sqrt(N)-1)*t_start,2M^3/N*t_flop + 2M^2/sqrt(N)*t_comm + sqrt(N)(sqrt(N)-1)*t_start,,,2M^3*t_flop + 2M^2*sqrt(N)*t_comm + N^1.5(sqrt(N)-1)*t_start,,,,"MxM: size of matrix
N: number of processing nodes",,,,"distributed memory MIMD, w/ at least a 2D mesh topology",700,,,,,,,,,0,,0,,0,1,N,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,Matrix Multiplication,Matrix Multiplication,324,,,,,,,,,"Choi, Walker, Dongarra (PUMMA)",1994,https://onlinelibrary.wiley.com/doi/pdf/10.1002/cpe.4330060702,,,,,,,,O(n^3/p),O(n^3/p),,,O(n^3),16,,,,,,,"Distributed memory MIMD, like the Intel Touchstone Delta",700,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,Matrix Multiplication,Matrix Multiplication,325,,,,,,,,,"Van De Geijn, Watts (SUMMA, Classical 2D)",1997,https://onlinelibrary.wiley.com/doi/pdf/10.1002/(SICI)1096-9128(199704)9:4%3C255::AID-CPE250%3E3.0.CO;2-2,,,,,,,,O(n^3/p),O(n^3/p),,,O(n^3),16,,,,,,,"an r x c mesh of processors, message passing",700,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,Matrix Multiplication,Matrix Multiplication,326,,,,,,,,,"Lin, Snyder",1992,https://www.computer.org/csdl/proceedings-article/shpcc/1992/00232648/12OmNAFWOPr,,,,,,,,O(n^3/p),O(n^3/p),,,O(n^3),16,,,,,,,MIMD hypercubes,700,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,Matrix Multiplication,Matrix Multiplication,327,,,,,,,,,"Lee, Robertson, Fortes (Cannon generalized for block-cyclic distributed matrices)",1997,https://dl.acm.org/doi/pdf/10.1145/263580.263591,,,,,,,,O(n^3/p),O(n^3/p),,,O(n^3),16,,,,,,,2D mesh,700,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,Matrix Multiplication,Matrix Multiplication,328,,,,,,,,,Choi (DIMMA),1997,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=580916,,,,,,,,O(n^3/p),O(n^3/p),,,O(n^3),16,,,,,,,distributed memory concurrent computers,700,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,Matrix Multiplication,rectangular matrices,329,,,,,,,,,"Demmel, Eliahu, Fox, Kamil, Lipshitz, Schwartz, Spillinger (CARMA)",2013,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6569817,,,,,,,,O(mnk/p),O(mnk/p),,,O(mnk),16,,,m x k and k x n matrices,,,,distributed-memory; also shared-memory system with non-uniform access,700,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,0.001,Matrix Multiplication,Matrix Multiplication,330,,,,,,,,,"Frigo, Leiserson, Prokop, Ramachandran",1999,https://ieeexplore.ieee.org/iel5/6604/17631/00814600.pdf,,,,,,,,O(mnk/p),O(mnk/p),,,O(mnk),16,,,m x k and k x n matrices,,,,unlisted,,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,Matrix Multiplication,dense matrix multiplication,331,,,,,,,,,"Krishnan, Nieplocha (SRUMMA)",2004,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1303000,,,,,,,,O(n^3/p),O(n^3/p),,,O(n^3),16,,,,,,,shared memory and remote memory access (RMA) communication,300,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,Matrix Multiplication,Matrix Multiplication,332,,,,,,,,,"Mathur, Johnsson (multiple algorithms)",1994,https://dash.harvard.edu/bitstream/handle/1/23017262/tr-01-92.pdf,,,,,,,,O(PQR/N),O(PQR/N),,,O(PQR),16,,,"PxQ, QxR: sizes of matrices being multiplied
N: number of processors",,,,"data parallel, hypercube (CM-200)",700,,,,,,,,,0,,0,,0,1,N,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,Matrix Multiplication,Matrix Multiplication,333,1D/2D/3D column partitioning,,,,,,,,"Johnsson, Ho (multiple algorithms)",1987,http://www.cs.yale.edu/publications/techreports/tr569.pdf,,,,,,,,O(PQR/N),O(PQR/N),,,O(PQR),16,,,"PxQ, QxR: sizes of matrices being multiplied
N: number of processors
n = log N",,,,boolean cube (MIMD and SIMD),700,,,,,,,,,0,,0,,0,1,N,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,Matrix Multiplication,Matrix Multiplication,334,,,,,,,,,"Ho, Johnsson, Edelman",1991,https://dash.harvard.edu/bitstream/handle/1/25811001/tr-19-91.pdf?sequence=1,,,,,,,,O(n^3/p),O(n^3/p),,,O(n^3),16,,,"nxn: size of matrices being multiplied
p: processors",,,,hypercube,700,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,Matrix Multiplication,Matrix Multiplication,335,,,,,,,,,"Grayson, Shah, Van De Geijn (Strassen-2D)",1996,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=a3a1977cf65e833bf55da4a2e11f074607ee0e21,,,,,,,,(7/8)^l*n^3/P,(7/8)^l*n^3/P,,,(7/8)^l*n^3,,,,"nxn: size of matrices being multiplied
l: the number of Strassen steps taken",,,,distributed memory MIMD (like Intel Paragon),700,,,,,,,,,0,,0,,0,1,P,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,Matrix Multiplication,Matrix Multiplication,336,,,,,,,,,"Bjørstad, Manne, Sørevik, Vajteršic (Winograd's algorithm)",1992,https://epubs.siam.org/doi/pdf/10.1137/0613026,,,,,,,,O(n^3/p),O(n^3/p),,,O(n^3),16,,,,,,,SIMD with distributed memory,700,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Matrix Product,1,Matrix Multiplication,Matrix Multiplication,337,,,,,,,,,"Lee, Aboelaze (Winograd's algorithm)",1991,http://www.cse.yorku.ca/~aboelaze/publication/LeA91.pdf,,,,,,,,O(n^2),O(n^2),10,,O(n^3),16,,,nxn: size of matrices being multiplied,,,,array processor (distributed memory SIMD),700,,,,,,,,,0,,0,,0,1,n,6,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
7.5,Graph Coloring,0.001,k-Graph Coloring,k-Graph Coloring; Chromatic Number,338,,,,,,,,,"Boman, Bozdag, Catalyurek, Gebremedhin, Manne",2005,https://link.springer.com/chapter/10.1007/11549468_29,,,,,,,,,,,,,,,,,,,,"BSP, distribited memory parallel computer",400,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
7.5,Graph Coloring,0.001,k-Graph Coloring,,339,,,,,,,,,"Rokos, Gorman, Kelly",2015,https://link.springer.com/chapter/10.1007/978-3-662-48096-0_32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
7.5,Graph Coloring,0.001,k-Graph Coloring,k-Graph Coloring,340,,,,,,,,,"Chen , Chen, Liu, Zhang",2015,https://ieeexplore.ieee.org/abstract/document/7307802,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
7.5,Graph Coloring,1,k-Graph Coloring,k-Graph Coloring,341,,,,,,,,,"Besta, Carigiet, Janda, Vonarburg-Shmaria, Gianinazzi, Hoefler",2020,https://ieeexplore.ieee.org/abstract/document/9355236,,,,,,,,$O(\log^{n} + \log{\delta} (d \log{n} + \log{d} \log^2{n}/ \log{\log{n}}))$,$O(\log^{n} + \log{\delta} (d \log{n} + \log{d} \log^2{n}/ \log{\log{n}}))$,,,$O(n+m)$,,,,"n: number of vertices
m: number of edges
d: graph degeneracy
\delta: max degree",,,,CRCW PRAM,130,,,,,,,,,,,,,,1,$O((n+m)/(\log^{n} + \log{\delta} (d \log{n} + \log{d} \log^2{n}/ \log{\log{n}})))$,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
7.5,Graph Coloring,1,k-Graph Coloring,k-Graph Coloring,342,,,,,,,,,"Besta, Carigiet, Janda, Vonarburg-Shmaria, Gianinazzi, Hoefler",2020,https://ieeexplore.ieee.org/abstract/document/9355236,,,,,,,,$O(\log{d} \log^2{n})$,$O(\log{d} \log^2{n})$,,,$O(n+m)$,,,,"n: number of vertices
m: number of edges
d: graph degeneracy
\delta: max degree",,,,CRCW PRAM,130,,,,,,,,,,,,,,1,$O((n+m)/(\log{d} \log^2{n}))$,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
7.5,Graph Coloring,0.001,k-Graph Coloring,k-Graph Coloring,343,,,,,,,,,"Moalic, Gondran",2017,https://dl.acm.org/doi/abs/10.1145/3071178.3071291,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
7.5,Graph Coloring,0.001,k-Graph Coloring,k-Graph Coloring; Chromatic Number,344,,,,,,,,,"Behnezhad, Derakhshan, Hajiaghayi, Knittel, Saleh",2019,https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ESA.2019.15,,,,,,,,O(1),,,,,,,,,,,,Massivelly parallel computations (MPC) model,,,,,,,,,,1,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
7.5,Graph Coloring,0.001,k-Graph Coloring,k-Graph Coloring,345,,,,,,,,,"Zerovnik, Kaufman",1992,https://www.sciencedirect.com/science/article/pii/0167819192900356,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
7.5,Graph Coloring,0.001,k-Graph Coloring,k-Graph Coloring,346,,,,,,,,,"Catalyurek, Feo, Gebremedhin, Halappanavar, Pothen",2012,https://www.sciencedirect.com/science/article/pii/S0167819112000592,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
7.5,Graph Coloring,0,k-Graph Coloring,k-Graph Coloring,347,,,,,,,,,Narvik,2020,https://www.proquest.com/docview/2477301200?pq-origsite=gscholar&fromopenview=true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
7.5,Graph Coloring,0.001,k-Graph Coloring,,348,,,,,,,,,"Sivanandam, Sumathi, Hamsapriya",2005,https://content.iospress.com/articles/international-journal-of-knowledge-based-and-intelligent-engineering-systems/kes00058,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
7.5,Graph Coloring,0.001,k-Graph Coloring,,349,,,,,,,,,"Conte, Grossi, Lanzarotti, Lin, Petrini",2021,https://www.sciencedirect.com/science/article/abs/pii/S0167865521001963,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
7.5,Graph Coloring,0.001,k-Graph Coloring,k-Graph Coloring,350,,,,,,,,,"Alabandi, Powers, Burtscher",2020,https://dl.acm.org/doi/abs/10.1145/3332466.3374519,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
7.5,Graph Coloring,0.001,k-Graph Coloring,,351,,,,,,,,,"Ravikumar, Aggarwal",1996,https://www.sciencedirect.com/science/article/abs/pii/095070519501005X,,,,,,,,$O(\beta n^3)$,$O(\beta n^3)$,,,$O(\beta n^3 p)$,,,,"n: number of nodes
\beta: upper bound on phases algo will attempt
p: number of processors",,,,,,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
7.5,Graph Coloring,1,k-Graph Coloring,k-Graph Coloring,352,,,,,,,,,"Sharieh, Sabri",2007,https://journals.yu.edu.jo/aybse/Issues/BasicVol17_No2_2008.pdf#page=75,,,,,,,," $O(n^2
/(p-1))+ O(p-1)) + O(k*(p-1))$",$O(n)$?,,,$O(n^2)$,,,,"n: size of graph
p: number of processors",,,,shared memory,300,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
7.5,Graph Coloring,0.001,k-Graph Coloring,,353,,,,,,,,,"Bhandari, Krishni, Siewiorek",1987,https://kilthub.cmu.edu/articles/journal_contribution/A_parallel_algorithm_for_colouring_graphs/6591143/1/files/12079664.pdf,,,,,,,,,,,,,,,,"n: number of vertices
p: number of processors (p>=n)",,,,each vertex has a processor ? / massivelly parallel computer,,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
7.5,Graph Coloring,1,k-Graph Coloring,k-Graph Coloring,354,,,,,,,,,"Kedem, Palem, Pantziou, Spirakis, Zaroliagis",1991,https://link.springer.com/chapter/10.1007/3-540-55121-2_13,,,,,,,,$O(\log^4{n}/ \log{\log{n}})$ whp,$O(\log^4{n}/ \log{\log{n}})$ expected,,,$O(n^2p \log^4{n}/ \log{\log{n}})$ expected,,,,"n: number of vertices
$p=\Omega ((\log^(3){n))^2/ \log^(2){n})$",,,,CRCW PRAM,130,,,,,,,,,,,,,,1,$n^2p$,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
7.5,Graph Coloring,0.001,k-Graph Coloring,,355,,,,,,,,,"Patidar, Chackrabarti",2017,https://pdfs.semanticscholar.org/e0af/1a0f3b02c17b4ca1ba47dc88ac80d917eac0.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
7.5,Graph Coloring,0.001,k-Graph Coloring,,356,,,,,,,,,"Singhal, Peri, Kalyanasundaram",2017,https://dl.acm.org/doi/abs/10.1145/3007748.3018281,,,,,,,,,,,,,,,,,,,,shared memory,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
7.5,Graph Coloring,0.001,k-Graph Coloring,,357,,,,,,,,,"Kale, Richards, Allen",1995,https://link.springer.com/chapter/10.1007/bfb0023062,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
7.5,Graph Coloring,0.001,k-Graph Coloring,,358,,,,,,,,,"JPP-LLF - Hasenplough, Kaler, Schardl, Leiserson (1)",2014,https://dl.acm.org/doi/abs/10.1145/2612669.2612697,,,,,,,,"$O(\log{V} +\log{\delta}(min{delta, E^0.5}+ \log^2{delta} \log{V}/\log{\log{V}}))$ expected ?","$O(\log{V} +\log{\delta}(min{delta, E^0.5}+ \log^2{delta} \log{V}/\log{\log{V}}))$ expected",,,$O(V+E)$,,,,"$V$: number of vertices
$E$: number of edges
$\delta$: max degree ",,,,PRAM,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
7.5,Graph Coloring,0.001,k-Graph Coloring,,359,,,,,,,,,"JPP-SLL - Hasenplough, Kaler, Schardl, Leiserson (2)",2014,https://dl.acm.org/doi/abs/10.1145/2612669.2612697,,,,,,,,"$O(\log{V} +\log{\delta}(min{delta, E^0.5}+ \log^2{delta} \log{V}/\log{\log{V}})+\log{\delta}\log{V})$ expected ?","$O(\log{V} +\log{\delta}(min{delta, E^0.5}+ \log^2{delta} \log{V}/\log{\log{V}})+\log{\delta}\log{V})$ expected",,,$O(V+E)$,,,,"$V$: number of vertices
$E$: number of edges
$\delta$: max degree ",,,,PRAM,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
7.5,Graph Coloring,0.001,k-Graph Coloring,,360,,,,,,,,,"Lu, Halappanavar, Chavarría-Miranda, Gebremedhin, Panyala, Kalyanaraman",2016,https://ieeexplore.ieee.org/abstract/document/7605439,,,,,,,,,,,,$O(V \delta)$,,,,"""$V$: number of vertices
$\delta$: max degree """,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
7.5,Graph Coloring,0.001,k-Graph Coloring,k-Graph Coloring,361,,,,,,,,,"Parallel Largest-Degree-First - Allwright, Bordawekar, Coddington, Dincer",1995,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=70d7791955fa5d823702e9dc43f0c48b77b268bc,,,,,,,,,,,,,,,,,,,,"SIMD, MIMD",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
7.5,Graph Coloring,0.001,k-Graph Coloring,k-Graph Coloring,362,,,,,,,,,"Parallel Smallest-Degree-First - Allwright, Bordawekar, Coddington, Dincer",1995,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=70d7791955fa5d823702e9dc43f0c48b77b268bc,,,,,,,,,,,,,,,,,,,,"SIMD, MIMD",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
7.5,Graph Coloring,0.001,k-Graph Coloring,k-Graph Coloring,363,,,,,,,,,"Patidar, Chakrabarti, Ghosh",2017,https://sciresol.s3.us-east-2.amazonaws.com/IJST/Articles/2017/Issue-25/Article22.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
7.5,Graph Coloring,0.001,k-Graph Coloring,k-Graph Coloring,364,,,,,$O(\log{n}/ \log{\log{n}})$,,,,"Jones, Plassmann",1993,https://epubs.siam.org/doi/abs/10.1137/0914041,,,,,,,,$O(\log{n}/ \log{\log{n}})$ expected,$O(\log{n}/ \log{\log{n}})$ expected,0.9,,,,,,,,,,PRAM,,,,,,,,,,1,,,,1,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
9,Linear System,0.001,General Linear System,,365,,,,,,,,,"Pan, Reif",1985,https://dl.acm.org/doi/pdf/10.1145/22145.22161,,,,,,,,O(log^2 n),O(log^2 n),2,,M(n)*n^0.5*log^2 n,,,,"nxn: size of matrix A
M(n): number of processors to multiply 2 nxn matrices",,,,"model of [Borodin, von zur Gathen, and Hopcroft, 82]",,,,,,,,,,,,,,,,M(n)*n^0.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
9,Linear System,0.001,General Linear System,,366,,,,,,,,,"Pan, Reif",1989,https://www.sciencedirect.com/science/article/pii/0898122189900813/pdf,,,,,,,,O(log^2 n),O(log^2 n),2,,M(n)*log^2 n,,,,"nxn: size of matrix A
M(n): number of processors to multiply 2 nxn matrices",,,,,,,,,,,,,,,,,within the relative precision 2^{-n^O(1)},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
9,Linear System,0.001,General Linear System,,367,,,,,,,,,Csanky,1975,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4567852,,,,,,,,,O(log^2 n),2,,poly n * log^2 n,,,,,,,,MIMD-TC CRCW,330,,,,,,,,,0,,0,,0,1,poly n,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
9,Linear System,1,General Linear System,General Linear System,368,,,,,,,,,"Bader, Gehrke",1991,https://www.sciencedirect.com/science/article/pii/S0167819105800067,,,,,,,,O(n^3/p),O(n^2),10,,O(n^3),16,,,,,,,transputer systems (distributed memory),700,,,,,,,,,0,,0,,0,1,p <= n,6,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
9,Linear System,1,General Linear System,General Linear System,369,,,,,,,,,"Cosnard, Robert, Trystram (Jordan method)",1987,https://www.tandfonline.com/doi/abs/10.1080/00207168708803597,,,,,,,,O(n^2),O(n^2),10,,O(n^3),16,,,nxn: size of matrix A,,,,shared memory,300,,,,,,,,,0,,0,,0,1,p <= n,6,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
9,Linear System,1,General Linear System,General Linear System,370,,,,,,,,,"Cosnard, Robert, Trystram (Huard method)",1987,https://www.tandfonline.com/doi/abs/10.1080/00207168708803597,,,,,,,,O(n^2),O(n^2),10,,O(n^3),16,,,nxn: size of matrix A,,,,shared memory,300,,,,,,,,,0,,0,,0,1,p <= n,6,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
9,Linear System,0.001,General Linear System,,371,,,,,,,,,Shang,2009,https://www.sciencedirect.com/science/article/pii/S089812210900042X,,,,,,,,,,,,O(n^2 t_a × IC),,,,,,,,distributed memory,700,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
10,Linear Programming,0.001,General Linear Programming,General Linear Programming,372,,,,,,,,[https://dl.acm.org/doi/10.1145/1111278.1111280 Kamdoum (1982)],Kamdoum,1982,https://dl.acm.org/doi/10.1145/1111278.1111280,,,,,,,,"$O(2^n*poly(n, m)/p)$?","$O(2^n*poly(n, m)/p)$?",,https://dl.acm.org/doi/10.1145/1111278.1111280,"$O(2^n*poly(n, m))$?",,,no,"n: number of constraints
d: number of dimensions
p: number of processors, p≤d",,,,?,,,,,,,,,,0,,0,,0,1,p,,0,0,,Linear programming (LP; also called linear optimization) is a method to achieve the best outcome (such as maximum profit or lowest cost) in a mathematical model whose requirements are represented by linear relationships. Linear programming is a special case of mathematical programming (also known as mathematical optimization).,,,,,,,,,,,,,,,,,,,,,,,,,
10,Linear Programming,0.001,General Linear Programming,General Linear Programming,373,,,,,,,,[https://theory.stanford.edu/~megiddo/pdf/flying.pdf Megiddo (1982)],Megiddo,1982,https://theory.stanford.edu/~megiddo/pdf/flying.pdf,,,,,,,,O(log n(log log n)^(d-2)),O(log n(log log n)^(d-2)),,https://theory.stanford.edu/~megiddo/pdf/flying.pdf,O((n log n)(log log n)^(d-1)),8011,Derived,no,"n: number of constraints
d: number of dimensions",,,,WRAM,,,,,,,,,,1,Las Vegas?,0,,0,1,O(n),,0,0,,Linear programming (LP; also called linear optimization) is a method to achieve the best outcome (such as maximum profit or lowest cost) in a mathematical model whose requirements are represented by linear relationships. Linear programming is a special case of mathematical programming (also known as mathematical optimization).,,,,,,,,,,,,,,,,,,,,,,,,,
10,Linear Programming,0.001,General Linear Programming,General Linear Programming,374,,,,,,,,[https://theory.stanford.edu/~megiddo/pdf/flying.pdf Megiddo (1982)],Megiddo,1982,https://theory.stanford.edu/~megiddo/pdf/flying.pdf,,,,,,,,O((log n)^(d-1)(log log n)),O((log n)^(d-1)(log log n)),,https://theory.stanford.edu/~megiddo/pdf/flying.pdf,O(n(log n)^(d-1)(log log n)),,Derived,no,"n: number of constraints
d: number of dimensions",,,,WRAM,,,,,,,,,,0,,0,,0,1,O(n),,0,0,,Linear programming (LP; also called linear optimization) is a method to achieve the best outcome (such as maximum profit or lowest cost) in a mathematical model whose requirements are represented by linear relationships. Linear programming is a special case of mathematical programming (also known as mathematical optimization).,,,,,,,,,,,,,,,,,,,,,,,,,
10,Linear Programming,1,General Linear Programming,General Linear Programming,375,,,,,,,,[https://epubs.siam.org/doi/pdf/10.1137/S0097539792234858 Ajtai & Megiddo (1996)],Ajtai & Megiddo,1996,https://epubs.siam.org/doi/pdf/10.1137/S0097539792234858,,,,,,,,O((log log n)^d),O((log log n)^d),8000,https://epubs.siam.org/doi/pdf/10.1137/S0097539792234858,O(n(log log n)^d),8010,Derived,no,"n: number of constraints
d: number of dimensions",,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(n),10,0,0,,Linear programming (LP; also called linear optimization) is a method to achieve the best outcome (such as maximum profit or lowest cost) in a mathematical model whose requirements are represented by linear relationships. Linear programming is a special case of mathematical programming (also known as mathematical optimization).,,,,,,,,,,,,,,,,,,,,,,,,,
10,Linear Programming,1,General Linear Programming,General Linear Programming,376,,,,,,,,[https://dl.acm.org/doi/pdf/10.1145/220279.220316 Dyer (1993)],Dyer,1993,https://dl.acm.org/doi/pdf/10.1145/220279.220316,,,,,,,,O(log n(log log n)^(d-1)),O(log n(log log n)^(d-1)),8001,https://dl.acm.org/doi/pdf/10.1145/220279.220316,O((n log n)(log log n)^(d-1)),8011,Derived,no,"n: number of constraints
d: number of dimensions",,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,O(n),10,0,0,,Linear programming (LP; also called linear optimization) is a method to achieve the best outcome (such as maximum profit or lowest cost) in a mathematical model whose requirements are represented by linear relationships. Linear programming is a special case of mathematical programming (also known as mathematical optimization).,,,,,,,,,,,,,,,,,,,,,,,,,
10,Linear Programming,1,General Linear Programming,General Linear Programming,377,,,,,,,,[https://ieeexplore.ieee.org/abstract/document/89579 Vaidya (1990)],Vaidya,1990,https://ieeexplore.ieee.org/abstract/document/89579,,,,,,,,O((nd)^(1/4)(log n)^3 L),O((nd)^(1/4)(log n)^3 L),,https://ieeexplore.ieee.org/abstract/document/89579,O(((nd)^(1/4)(log n)^3 L)(n^3 + d^(omega-1)n)),,,no,"n: number of constraints
d: number of dimensions
L: log(det_max) + log(n+d) + log(c^T c + b^T b)
omega: exponent on matrix multiplication",,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(n^3 + d^(omega-1)n),,0,0,,Linear programming (LP; also called linear optimization) is a method to achieve the best outcome (such as maximum profit or lowest cost) in a mathematical model whose requirements are represented by linear relationships. Linear programming is a special case of mathematical programming (also known as mathematical optimization).,,,,,,,,,,,,,,,,,,,,,,,,,
10,Linear Programming,1,General Linear Programming,"General Linear Programming 
",378,,,,,,,,[https://ieeexplore.ieee.org/document/89578 Alon & Megiddo (1990)],Alon & Megiddo,1990,https://ieeexplore.ieee.org/document/89578,,,,,,,,O(d^2 log^2 d) with probability approaching 1,O(d^2 log^2 d) with probability approaching 1,22,https://ieeexplore.ieee.org/document/89578,O(d^3 n),40,https://ieeexplore.ieee.org/document/89578,yes,"n: number of constraints
d: number of dimensions",,,,CRCW PRAM,130,,,,,,,,,1,Las Vegas,0,,0,1,O(nd/log^2 d),18,0,0,,Linear programming (LP; also called linear optimization) is a method to achieve the best outcome (such as maximum profit or lowest cost) in a mathematical model whose requirements are represented by linear relationships. Linear programming is a special case of mathematical programming (also known as mathematical optimization).,,,,,,,,,,,,,,,,,,,,,,,,,
11,Line segment intersection,1,Reporting intersection points,"Reporting all intersection points, line segments",379,,,1,1,O(log^2(n)),,,[https://dl.acm.org/citation.cfm?id=72950 Goodrich (1989)],Goodrich,1989,https://dl.acm.org/citation.cfm?id=72950,,,,0,0,2,n: 2,$O(\log^2(n))$,$O(\log^2(n))$,2,https://dl.acm.org/citation.cfm?id=72950,$O(n\log^2(n) + k\log(n))$,21,https://dl.acm.org/citation.cfm?id=72950,yes (but algo is not optimal),"n: number of line segments
k: number of points of intersection",n,,,CREW PRAM,120,words,3,"n: 3,
k: 3",O(n+k) total?,"Seems to require creating/storing an O(n)-sized data structure (""segment tree""), and then computing the O(k) intersections using the data structure",1,0,,0,,0,,0,1,O(n + k/log n),19,0,0,,"The line segment intersection problem supplies a list of line segments in the Euclidean plane and asks about the points where they intersect (cross), if any.",,,,,,,,,,,,,99.3,10070.49345,,,,,,,,4,,,Image Processing
11,Line segment intersection,1,Reporting intersection points,"Reporting all intersection points, line segments",380,,,1,1,O(1),,,"[https://link.springer.com/content/pdf/10.1007/BF01758753.pdf Reif, Sen (implicit) (1992)]","Reif, Sen (implicit)",1992,https://link.springer.com/content/pdf/10.1007/BF01758753.pdf,,,,0,0,2,n: 2,O(1),O(1),0,https://link.springer.com/content/pdf/10.1007/BF01758753.pdf,O(n^2),20,,no,"n: number of line segments
k: number of points of intersection",n,,,CREW PRAM,120,words,3,"n: 3,
k: 3",O(n+k) total?,"Seems to require creating/storing an O(n)-sized data structure (""segment tree""), and then computing the O(k) intersections using the data structure",1,0,,0,,0,,0,1,O(n^2),20,0,0,,"The line segment intersection problem supplies a list of line segments in the Euclidean plane and asks about the points where they intersect (cross), if any.",,,,,,,,,,,,,99.3,10070.49345,,,,,,,,4,,,Image Processing
11,Line segment intersection,1,Reporting intersection points,"Reporting all intersection points, line segments",381,,,1,1,O(((n+k) log n log log n)/p),,,[https://link.springer.com/article/10.1007/BF01758839 Rüb (1992)],Rüb,1992,https://link.springer.com/article/10.1007/BF01758839,,,,0,0,2,n: 2,O(((n+k) log n log log n)/p),O(log n log log n),1.1,https://link.springer.com/article/10.1007/BF01758839,O((n+k) log n log log n),21.1,https://link.springer.com/article/10.1007/BF01758839,no,"n: number of line segments
k: number of points of intersection
p: number of processors; p ≤ n+k",n,,,CREW PRAM,120,words,3,"n: 3,
k: 3",O(n+k) total?,"Seems to require creating/storing an O(n)-sized data structure (""segment tree""), and then computing the O(k) intersections using the data structure",1,0,,0,,0,,0,1,p,20,0,0,,"The line segment intersection problem supplies a list of line segments in the Euclidean plane and asks about the points where they intersect (cross), if any.",,,,,,,,,,,,,99.3,10070.49345,,,,,,,,4,,,Image Processing
11,Line segment intersection,1,Intersection detection,Intersection detection (whether there exists an intersection),382,,,1,1,O(log n),,,"[https://link.springer.com/content/pdf/10.1007/BF01762120.pdf Aggarwal, Chazelle, Guibas, Ó'Dúnlaing, Yap (1988)]","Aggarwal, Chazelle, Guibas, Ó'Dúnlaing, Yap",1988,https://link.springer.com/content/pdf/10.1007/BF01762120.pdf,,,,0,0,2,n: 2,O(log n),O(log n),1,https://link.springer.com/content/pdf/10.1007/BF01762120.pdf,O(n(log n)^2),12,,no,n: number of line segments,n,,,CREW PRAM,120,words,3,"n: 3,
k: 3",O(n+k) total?,"Seems to require creating/storing an O(n)-sized data structure (""segment tree""), and then computing the O(k) intersections using the data structure",1,0,,0,,0,,0,1,O(n log n),11,0,0,,"The line segment intersection problem supplies a list of line segments in the Euclidean plane and asks about the points where they intersect (cross), if any.",,,,,,,,,,,,,99.3,10070.49345,,,,,,,,4,,,Image Processing
11,Line segment intersection,1,Intersection detection,Intersection detection (whether there exists an intersection),383,,,1,1,O(log^2 n),,,"[https://dl.acm.org/doi/10.1145/10515.10539 Atallah, Goodrich (1986)]","Atallah, Goodrich",1986,https://dl.acm.org/doi/10.1145/10515.10539,,,,0,0,2,n: 2,O(log^2 n),O(log^2 n),2,https://dl.acm.org/doi/10.1145/10515.10539,O(n(log n)^2),12,,no,n: number of line segments,n,,,CREW PRAM,120,words,3,"n: 3,
k: 3",O(n+k) total?,"Seems to require creating/storing an O(n)-sized data structure (""segment tree""), and then computing the O(k) intersections using the data structure",1,0,,0,,0,,0,1,O(n),10,0,0,,"The line segment intersection problem supplies a list of line segments in the Euclidean plane and asks about the points where they intersect (cross), if any.",,,,,,,,,,,,,99.3,10070.49345,,,,,,,,4,,,Image Processing
11,Line segment intersection,1,Intersection detection,Intersection detection (whether there exists an intersection),384,,,1,1,O(log n log log n),,,"[https://dl.acm.org/doi/10.1145/10515.10539 Atallah, Goodrich (1986)]","Atallah, Goodrich",1986,https://dl.acm.org/doi/10.1145/10515.10539,,,,0,0,2,n: 2,O(log n log log n),O(log n log log n),1.1,https://dl.acm.org/doi/10.1145/10515.10539,O(n log n log log n),11.1,,no,n: number of line segments,n,,,CRCW PRAM,130,words,3,"n: 3,
k: 3",O(n+k) total?,"Seems to require creating/storing an O(n)-sized data structure (""segment tree""), and then computing the O(k) intersections using the data structure",1,0,,0,,0,,0,1,O(n),10,0,0,,"The line segment intersection problem supplies a list of line segments in the Euclidean plane and asks about the points where they intersect (cross), if any.",,,,,,,,,,,,,99.3,10070.49345,,,,,,,,4,,,Image Processing
11,Line segment intersection,1,Intersection detection,Intersection detection (whether there exists an intersection),385,,,1,1,O(log n),,,"[https://epubs.siam.org/doi/abs/10.1137/0218035 Atallah, Cole, Goodrich (1989)]","Atallah, Cole, Goodrich",1989,https://epubs.siam.org/doi/abs/10.1137/0218035,,,,0,0,2,n: 2,O(log n),O(log n),1,https://epubs.siam.org/doi/abs/10.1137/0218035,O(n log n),11,,no,n: number of line segments,n,,,CREW PRAM,120,words,3,"n: 3,
k: 3",O(n+k) total?,"Seems to require creating/storing an O(n)-sized data structure (""segment tree""), and then computing the O(k) intersections using the data structure",1,0,,0,,0,,0,1,O(n),10,0,0,,"The line segment intersection problem supplies a list of line segments in the Euclidean plane and asks about the points where they intersect (cross), if any.",,,,,,,,,,,,,99.3,10070.49345,,,,,,,,4,,,Image Processing
12,Convex Hull,1,2-dimensional Convex Hull,2-dimensional,386,,,1,1,O(log^2(n)),,,[https://dl.acm.org/doi/10.5555/909732 Chow (1980)],Chow,1980,https://dl.acm.org/doi/10.5555/909732,,,,,,,,O(log^2(n)),O(log^2(n)),2,https://dl.acm.org/doi/10.5555/909732,O(n log^2(n)),12,,no,"n: number of line segments
h: number of points on the convex hull",n,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(n),10,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,2-dimensional Convex Hull,2-dimensional,387,,,1,1,O(n/k log n + log k log n),,,"[https://link.springer.com/chapter/10.1007/BFb0105130 Nath, Maheshwari, Bhatt [modified CONVEXHULL-4] (1981)]","Nath, Maheshwari, Bhatt [modified CONVEXHULL-4]",1981,https://link.springer.com/chapter/10.1007/BFb0105130,,,,,,,,O(n/k log n + log k log n),O(log^2(n)),2,https://link.springer.com/chapter/10.1007/BFb0105130,O(n log n + k log k log n),11,,no,"n: number of line segments
h: number of points on the convex hull
k: processor parameter, 1≤k≤n",n,,,SIMD-SM-R,210,,,,,,,,,0,,0,,0,1,k,9,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,2-dimensional Convex Hull,2-dimensional,388,,,1,1,O(k log n),,,"[https://link.springer.com/chapter/10.1007/BFb0105130 Nath, Maheshwari, Bhatt (1981)]","Nath, Maheshwari, Bhatt [CONVEXHULL-5]",1981,https://link.springer.com/chapter/10.1007/BFb0105130,,,,,,,,O(k log n),O(log^2(n)),2,https://link.springer.com/chapter/10.1007/BFb0105130,O(n log^2(n)),12,,no,"n: number of line segments
h: number of points on the convex hull
k: processor parameter, 1≤k≤log n",n,,,SIMD-SM-R,210,,,,,,,,,0,,0,,0,1,n^(1+1/k),10,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,2-dimensional Convex Hull,2-dimensional,389,,,1,1,O(1),,,[https://link.springer.com/article/10.1007/BF01944471 Akl (1982)],Akl,1982,https://link.springer.com/article/10.1007/BF01944471,,,,,,,,O(1),O(1),0,https://link.springer.com/article/10.1007/BF01944471,O(n^3),30,,no,"n: number of line segments
h: number of points on the convex hull",n,,,SIMD with unbounded fan-in?/CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(n^3),30,0,0,https://link.springer.com/content/pdf/10.1007/BF01762120.pdf,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,2-dimensional Convex Hull,2-dimensional,390,,,1,1,O(n^eps log h),,,[https://link.springer.com/article/10.1007/BF02243071 Akl (1984)],Akl,1984,https://link.springer.com/article/10.1007/BF02243071,,,,,,,,O(n^eps log h),"O(n^eps log h), 0<eps<1",5.021,https://link.springer.com/article/10.1007/BF02243071,O(n log h),11,https://link.springer.com/article/10.1007/BF02243071,"yes, implicitly (can't do better than sorting)","n: number of line segments
h: number of points on the convex hull
eps: processor parameter, 0<eps<1",n,,,"SIMD (synchronous, CRCW)",220,,,,,,,,,0,,0,,0,1,O(n^(1-eps)),8.3,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,2-dimensional Convex Hull,2-dimensional,391,,,1,1,O(log n),,,"[https://docs.lib.purdue.edu/cgi/viewcontent.cgi?article=1424&context=cstech Atallah, Goodrich (1986)]","Atallah, Goodrich",1986,https://docs.lib.purdue.edu/cgi/viewcontent.cgi?article=1424&context=cstech,,,,,,,,O(log n),O(log n),1,https://docs.lib.purdue.edu/cgi/viewcontent.cgi?article=1424&context=cstech,O(n log n),11,,"yes, implicitly (can't do better than sorting)","n: number of line segments
h: number of points on the convex hull",n,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(n),10,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,2-dimensional Convex Hull,2-dimensional,392,,,1,1,O(1),Points chosen uniformly at random from a unit square,https://web.eecs.umich.edu/~qstout/pap/ICPP88geo.pdf,[https://web.eecs.umich.edu/~qstout/pap/ICPP88geo.pdf Stout (1986)],Stout,1986,https://web.eecs.umich.edu/~qstout/pap/ICPP88geo.pdf,,,,,,,,O(log n),O(log n),1,https://web.eecs.umich.edu/~qstout/pap/ICPP88geo.pdf,O(n log n)?,11,,no,"n: number of line segments
h: number of points on the convex hull",n,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(n),10,0,0,https://repository.lsu.edu/cgi/viewcontent.cgi?article=7028&context=gradschool_disstheses,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,2-dimensional Convex Hull,2-dimensional,393,,,1,1,$O(\log n)$,,,[https://cse.buffalo.edu/faculty/miller/Papers/IEEETC88a.pdf Miller; Stout (1988)],Miller; Stout,1988,https://cse.buffalo.edu/faculty/miller/Papers/IEEETC88a.pdf,,,,1,5->7,#VALUE!,,$O(\log n)$,$O(\log n)$,1,https://cse.buffalo.edu/faculty/miller/Papers/IEEETC88a.pdf,$O(n \log n)$,11,https://cse.buffalo.edu/faculty/miller/Papers/IEEETC88a.pdf,"yes, implicitly (can't do better than sorting)","n: number of line segments
h: number of points on the convex hull",n,,,"EREW PRAM, possibly others (see paper)",110,words,3,n: 3,O(n) total?,Divide and conquer can be done in linear space total as space can be reused after conquer steps,1,0,,0,,0,,0,1,O(n),10,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,h = n^0.5,,,,,,,9.965,100351229.3,,,,,,,,3,,,Image Processing
12,Convex Hull,1,2-dimensional Convex Hull,2-dimensional,394,,,1,1,O(log n),,,"[https://link.springer.com/content/pdf/10.1007/BF01762120.pdf Aggarwal, Chazelle, Guibas, Ó'Dúnlaing, Yap (1988)]","Aggarwal, Chazelle, Guibas, Ó'Dúnlaing, Yap",1988,https://link.springer.com/content/pdf/10.1007/BF01762120.pdf,,,,,,,,O(log n),O(log n),1,https://link.springer.com/content/pdf/10.1007/BF01762120.pdf,O(n log n),11,,"yes, implicitly (can't do better than sorting)","n: number of line segments
h: number of points on the convex hull",n,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(n),10,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,"""Shamos (1977)"" gave reductions from Voronoi diagrams to other geometric proximity problems, including closest pair",,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,2-dimensional Convex Hull,2-dimensional,395,,,1,1,O(log n),,,"[https://dl.acm.org/doi/pdf/10.1145/73393.73414 Cole, Goodrich (1988)]","Cole, Goodrich",1988,https://dl.acm.org/doi/pdf/10.1145/73393.73414,,,,1,5->7,#VALUE!,,O(log n),O(log n),1,https://dl.acm.org/doi/pdf/10.1145/73393.73414,O(n log n),11,https://dl.acm.org/doi/pdf/10.1145/73393.73414,yes,"n: number of line segments
h: number of points on the convex hull",n,,,CREW PRAM,120,words,3,n: 3,O(n) total?,Divide and conquer can be done in linear space total as space can be reused after conquer steps,1,0,,0,,0,,0,1,O(n),10,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,h = n^0.5,,,,,,,9.965,100351229.3,,,,,,,,3,,,Image Processing
12,Convex Hull,1,2-dimensional Convex Hull,2-dimensional,396,,,1,1,O(n^eps log n),,,[https://research.iaun.ac.ir/pd/saeed-nasri/pdfs/UploadFile_9325.pdf Akl (1989)],Akl,1989,https://research.iaun.ac.ir/pd/saeed-nasri/pdfs/UploadFile_9325.pdf,,,,,,,,O(n^eps log n),O(n^eps log n),5.021,https://research.iaun.ac.ir/pd/saeed-nasri/pdfs/UploadFile_9325.pdf,O(n log n),11,https://research.iaun.ac.ir/pd/saeed-nasri/pdfs/UploadFile_9325.pdf,yes,"n: number of line segments
h: number of points on the convex hull
eps: processor parameter, 0<eps<1",n,,,EREW SM SIMD computer,200,,,,,,,,,0,,0,,0,1,O(n^(1-eps)),8.3,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,0.001,2-dimensional Convex Hull,2-dimensional,397,,,1,1,O(log^2 n),,,"[https://dl.acm.org/doi/pdf/10.1145/113379.113397 Ghouse, Goodrich (following [Kirkpatrick, Seidel (1986)]) (1991)]","Ghouse, Goodrich (following [Kirkpatrick, Seidel (1986)])",1991,https://dl.acm.org/doi/pdf/10.1145/113379.113397,,,,,,,,O(log^2 n),O(log^2 n),2,https://dl.acm.org/doi/pdf/10.1145/113379.113397,O(n log h),11,https://dl.acm.org/doi/pdf/10.1145/113379.113397,no,"n: number of line segments
h: number of points on the convex hull",n,,,CREW PRAM?,130,,,,,,,,,1,,0,,0,1,O(n)?,9,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,2-dimensional Convex Hull,2-dimensional,398,,,1,1,O(log n),,,"[https://dl.acm.org/doi/pdf/10.1145/113379.113397 Ghouse, Goodrich [Theorem 5] (1991)]","Ghouse, Goodrich [Theorem 5]",1991,https://dl.acm.org/doi/pdf/10.1145/113379.113397,,,,,,,,O(log n),O(log n),1,https://dl.acm.org/doi/pdf/10.1145/113379.113397,O(n log h),11,https://dl.acm.org/doi/pdf/10.1145/113379.113397,no,"n: number of line segments
h: number of points on the convex hull",n,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(n),10,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,2-dimensional Convex Hull,2-dimensional,399,,,1,1,O(log h log log n),,,"[https://www.sciencedirect.com/science/article/pii/S0925772197000096 Gupta, Sen (1997)]","Gupta, Sen",1997,https://www.sciencedirect.com/science/article/pii/S0925772197000096,,,,,,,,O(log h log log n),O(log h log log n),1.1,https://www.sciencedirect.com/science/article/pii/S0925772197000096,O(n log h),11,https://www.sciencedirect.com/science/article/pii/S0925772197000096,no,"n: number of line segments
h: number of points on the convex hull",n,,,CRCW PRAM,130,,,,,,,,,1,Las Vegas,0,,0,1,O(n),9.1,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,2-dimensional Convex Hull,2-dimensional,400,,,,,O(log n),,,"[https://dl.acm.org/doi/abs/10.5555/1882723.1882748 Blelloch, Maggs [Parallel MergeHull] (2010)]","Blelloch, Maggs [Parallel MergeHull]",2010,https://dl.acm.org/doi/abs/10.5555/1882723.1882748,,,,,,,,O(log n),O(log n),1,https://dl.acm.org/doi/abs/10.5555/1882723.1882748,O(n log n),11,https://dl.acm.org/doi/abs/10.5555/1882723.1882748,yes,"n: number of line segments
h: number of points on the convex hull",n,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(n),10,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,3-dimensional Convex Hull,3-dimensional,401,,,1,1,O(log^3 n),,,[https://dl.acm.org/doi/10.5555/909732 Chow (1980)],Chow,1980,https://dl.acm.org/doi/10.5555/909732,,,,,,,,O(log^3 n),O(log^3 n),3,https://dl.acm.org/doi/10.5555/909732,O(n log^3 n),13,,no,"n: number of line segments
h: number of points on the convex hull",n,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(n),10,0,0,https://www.sciencedirect.com/science/article/pii/S0743731503000352,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,3-dimensional Convex Hull,3-dimensional,402,,,1,1,O(log^2 n),,,"[https://dl.acm.org/doi/10.1145/41958.41980 Dadoun, Kirkpatrick [randomized] (1987)]","Dadoun, Kirkpatrick [randomized]",1987,https://dl.acm.org/doi/10.1145/41958.41980,,,,,,,,O(log^2 n),O(log^2 n),2,https://dl.acm.org/doi/10.1145/41958.41980,O(n log^2 n),12,,no,n: number of points,n,,,CREW PRAM,120,,,,,,,,,1,Las Vegas?,0,,0,1,O(n),10,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,3-dimensional Convex Hull,3-dimensional,403,,,1,1,O(log^2 n log* n),,,"[https://dl.acm.org/doi/10.1145/41958.41980 Dadoun, Kirkpatrick [deterministic] (1987)]","Dadoun, Kirkpatrick [deterministic]",1987,https://dl.acm.org/doi/10.1145/41958.41980,,,,,,,,O(log^2 n log* n),O(log^2 n log* n),2.001,https://dl.acm.org/doi/10.1145/41958.41980,O(n log^2 n log* n),12.001,,no,n: number of points,n,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(n),10,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,3-dimensional Convex Hull,3-dimensional,404,,,1,1,O(log^3 n),,,"[https://link.springer.com/content/pdf/10.1007/BF01762120.pdf Aggarwal, Chazelle, Guibas, Ó'Dúnlaing, Yap (1988)]","Aggarwal, Chazelle, Guibas, Ó'Dúnlaing, Yap",1988,https://link.springer.com/content/pdf/10.1007/BF01762120.pdf,,,,,,,,O(log^3 n),O(log^3 n),3,https://link.springer.com/content/pdf/10.1007/BF01762120.pdf,O(n log^3 n),13,,no,"n: number of line segments
h: number of points on the convex hull",n,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(n),10,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,0.001,3-dimensional Convex Hull,3-dimensional,405,,,1,1,O(log^3 n),,,"[https://dl.acm.org/doi/pdf/10.1145/113379.113397 Ghouse, Goodrich (following [Edelsbrunner, Shi (1991)]) (1991)]","Ghouse, Goodrich (following [Edelsbrunner, Shi (1991)])",1991,https://dl.acm.org/doi/pdf/10.1145/113379.113397,,,,,,,,O(log^3 n),O(log^3 n),3,https://dl.acm.org/doi/pdf/10.1145/113379.113397,O(n log^2 h),12,https://dl.acm.org/doi/pdf/10.1145/113379.113397,no,"n: number of line segments
h: number of points on the convex hull",n,,,CREW PRAM?,130,,,,,,,,,1,,0,,0,1,O(n)?,9,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,3-dimensional Convex Hull,3-dimensional,406,,,1,1,O(log^2 n),,,"[https://dl.acm.org/doi/pdf/10.1145/113379.113397 Ghouse, Goodrich [Theorem 6] (1991)]","Ghouse, Goodrich [Theorem 6]",1991,https://dl.acm.org/doi/pdf/10.1145/113379.113397,,,,,,,,O(log^2 n),O(log^2 n),2,https://dl.acm.org/doi/pdf/10.1145/113379.113397,"O(n*min(log n, log^2 h))",11,https://dl.acm.org/doi/pdf/10.1145/113379.113397,no,"n: number of line segments
h: number of points on the convex hull",n,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(n)?,9,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,3-dimensional Convex Hull,3-dimensional,407,,,1,1,O(log^2 n),,,"[https://core.ac.uk/download/pdf/158319587.pdf Amato, Preparata (1992)]","Amato, Preparata",1992,https://core.ac.uk/download/pdf/158319587.pdf,,,,,,,,O(log^2 n),O(log^2 n),2,https://core.ac.uk/download/pdf/158319587.pdf,O(n log^2 n),12,,no,"n: number of line segments
h: number of points on the convex hull",n,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(n),10,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,3-dimensional Convex Hull,3-dimensional,408,,,1,1,O(log n),,,"[https://epubs.siam.org/doi/pdf/10.1137/0221031 Reif, Sen (1992)]","Reif, Sen",1992,https://epubs.siam.org/doi/pdf/10.1137/0221031,,,,,,,,O(log n),O(log n),1,https://epubs.siam.org/doi/pdf/10.1137/0221031,O(n log n),11,,"yes, implicitly (can't do better than sorting)","n: number of line segments
h: number of points on the convex hull",n,,,CREW PRAM,120,,,,,,,,,1,Las Vegas?,0,,0,1,O(n),10,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,3-dimensional Convex Hull,3-dimensional,409,,,1,1,O(log^2 n),,,[https://dl.acm.org/doi/abs/10.1145/160985.161002 Goodrich (1993)],Goodrich,1993,https://dl.acm.org/doi/abs/10.1145/160985.161002,,,,,,,,O(log^2 n),O(log^2 n),2,https://dl.acm.org/doi/abs/10.1145/160985.161002,O(n log n),11,https://dl.acm.org/doi/abs/10.1145/160985.161002,yes,"n: number of line segments
h: number of points on the convex hull",n,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,O(n),9,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,3-dimensional Convex Hull,3-dimensional,410,,,1,1,O(log^3 n),,,"[https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=365724 Amato, Goodrich, Ramos [output-sensitive] (1994)]","Amato, Goodrich, Ramos [output-sensitive]",1994,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=365724,,,,,,,,O(log^3 n),O(log^3 n),3,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=365724,O(n log h),11,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=365724,yes,"n: number of line segments
h: number of points on the convex hull
d: number of dimensions",n,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,O(n),8.9,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,3-dimensional Convex Hull,3-dimensional,411,,,1,1,O((log log n)^2 log h),,,"[https://www.sciencedirect.com/science/article/pii/S0743731503000352 Gupta, Sen (2003)]","Gupta, Sen",2003,https://www.sciencedirect.com/science/article/pii/S0743731503000352,,,,,,,,O((log log n)^2 log h),O((log log n)^2 log h),1.15,https://www.sciencedirect.com/science/article/pii/S0743731503000352,O(n log h),11,https://www.sciencedirect.com/science/article/pii/S0743731503000352,yes,"n: number of line segments
h: number of points on the convex hull",n,,,CRCW PRAM,130,,,,,,,,,1,Las Vegas,0,,0,1,O(n)?,9.09,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,3-dimensional Convex Hull,3-dimensional,412,,,1,1,O(log n),,,"[https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=365724 Amato, Goodrich, Ramos [randomized] (1994)]","Amato, Goodrich, Ramos [randomized]",1994,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=365724,,,,,,,,O(n^(floor(d/2))+n log n),O(log n),1,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=365724,O(n+n log n),11,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=365724,yes,"n: number of line segments
h: number of points on the convex hull
d: number of dimensions",n,,,EREW PRAM,110,,,,,,,,,1,Las Vegas,0,,0,1,O(n)?,10,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,2-dimensional Convex Hull,2-dimensional,413,,,1,1,O(log n),,,"[https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=365724 Amato, Goodrich, Ramos [randomized] (1994)]","Amato, Goodrich, Ramos [randomized]",1994,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=365724,,,,,,,,O(n^(floor(d/2))+n log n),O(log n),1,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=365724,O(n+n log n),11,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=365724,yes,"n: number of line segments
h: number of points on the convex hull
d: number of dimensions",n,,,EREW PRAM,110,,,,,,,,,1,Las Vegas,0,,0,1,O(n)?,10,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,2-dimensional Convex Hull,2-dimensional,414,,,1,1,O(log n log* n),,,"[https://dl.acm.org/doi/10.1145/3350755.3400255 Blelloch, Gu, Shun, Sun (2020)]","Blelloch, Gu, Shun, Sun",2020,https://dl.acm.org/doi/10.1145/3350755.3400255,,,,,,,,O(log n log* n),O(log n log* n),1.001,https://dl.acm.org/doi/10.1145/3350755.3400255,O(n log n),11,https://dl.acm.org/doi/10.1145/3350755.3400255,no,"n: number of line segments
h: number of points on the convex hull
d: number of dimensions",n,,,CRCW PRAM,130,,,,,,,,,1,Las Vegas,0,,0,1,O(n)?,9.999,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,,,
12,Convex Hull,1,3-dimensional Convex Hull,3-dimensional,415,,,1,1,O(log n log* n),,,"[https://dl.acm.org/doi/10.1145/3350755.3400255 Blelloch, Gu, Shun, Sun (2020)]","Blelloch, Gu, Shun, Sun",2020,https://dl.acm.org/doi/10.1145/3350755.3400255,,,,,,,,O(log n log* n),O(log n log* n),1.001,https://dl.acm.org/doi/10.1145/3350755.3400255,O(n log n),11,https://dl.acm.org/doi/10.1145/3350755.3400255,no,"n: number of line segments
h: number of points on the convex hull
d: number of dimensions",n,,,CRCW PRAM,130,,,,,,,,,1,Las Vegas,0,,0,1,O(n)?,9.999,0,0,,"the convex hull or convex envelope or convex closure of a set X of points
 in the Euclidean plane or in a Euclidean space
 (or; more generally; in an affine space over the reals) is the smallest 
convex set that contains X. ",,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,CC,CC,416,Transitive closure method,,,,,,,,Chandra,1976,https://cir.nii.ac.jp/crid/1573105974323147776,,,,,,,,O(log^2(n)),O(log^2(n)),2,,n^(log7)*log(n),15.6,,,,,,,SIMD-SM-R (CREW PRAM?),210,,,,,,,,,0,,0,,0,1,n^(log7)/log(n),27,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,Transitive Closure,Transitive Closure,417,Vertex collapse method,,,,,,,,Hirschberg,1976,https://dl.acm.org/doi/abs/10.1145/800113.803631,,,,,,,,O(log^2(n)),O(log^2(n)),2,,O(n^3 log^2(n)),16.2,,,,,,,SIMD-SM-R (CREW PRAM?),210,,,,,,,,,0,,0,,,1,n^3,16,,,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,CC,CC,418,Vertex collapse method,,,,,,,,Hirschberg,1976,https://dl.acm.org/doi/abs/10.1145/800113.803631,,,,,,,,O(log^2(n)),O(log^2(n)),2,,O(n^2 log^2(n)),12,,,n: number of vertices,,,,SIMD-SM-R (CREW PRAM?),210,,,,,,,,,0,,0,,,1,n^2,10,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,SCCs,SCCs; CC,419,BFS method,,,,,,,,Reghbati (Arjomandi) and Corneil,1978,https://epubs.siam.org/doi/abs/10.1137/0207020,,,,,,,,T/p+L log(p)+2n,O(n),6,,O(n+m) ?,10,,"yes - compares to sequential BFS search algorithm; ""superior to seq. algorithm for h-dense graphs where h >= ceiling (log k)+7 (h-dense : #edges>=h*n/2)""","n: number of vertices
m: number of edges
p: number of processors
d: diameter of graph
L: distance of node farhest from start node
T: complexity of optimal sequantial BFS algo",,,,SIMD-SM-R (CREW PRAM?),210,,,,,,,,,0,,0,,,1,p,6,,,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,Transitive Closure,CC;SCCs; Transitive Closure,420,Transitive closure method,,,,,,,,Reghbati (Arjomandi) and Corneil,1978,https://epubs.siam.org/doi/abs/10.1137/0207020,,,,,,,,O(log^2(n)),O(log^2(n)),2,,O(n^3 log^2(n)),16.2,,,n: number of vertices,,,,SIMD-SM-R (CREW PRAM?),210,,,,,,,,,0,,0,,,1,n^3,16,,,"promised to have ""proof of correctness and details of timing"": https://dl.acm.org/doi/book/10.5555/908319; originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515",,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,Transitive Closure,Transitive Closure; SCCs; CC,421,,,,,O(log n log log n) average time,,,,Ja'Ja',1978,"J. Ja'Ja', ""Graph Connectivity Problems on Parallel Computers,"" TR GS-78-05, Dept. of Computer Science, Penn. State Univ., PA, 1978.",,,,,,,,O(log n log d),O(log n log d),2,,O(n^3 log d),16.1,,,"n: number of vertices
d: depth of the graph",,,,PRAM,100,,,,,,,,,0,,0,,0,1,O(n^3/log n),29.5,0,0,All info gathered from here: https://apps.dtic.mil/sti/pdfs/ADA114875.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,Transitive Closure,SCCs; CC; Transitive Closure,422,Vertex collapse method,,,,,,,,Hirschberg et al.,1979,https://dl.acm.org/doi/abs/10.1145/359138.359141,,,,,,,,O(log^2(n)),O(log^2(n)),2,https://dl.acm.org/doi/abs/10.1145/359138.359141,O(n^2 log^2(n)) ,12,,,n: number of vertices,,,,SIMD-SM-R (CREW PRAM?),210,,,,,,,,,0,,0,,,1,n ceilling(n/log(n)),10,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,CC,CC,423,Vertex collapse method,,,,,,,,Wyllie,1979,https://hdl.handle.net/1813/7502,,,,,,,,O(log^2(n)),O(log^2(n)),2,,O(log^2(n)*(n+m)),12,,,"n: number of nodes
m: number of edges",,,,MIMD-TC-R,320,,,,,,,,,0,,0,,0,1,n+m,10,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,Transitive Closure of a symmetric Boolean matrix,CC; Transitive Closure of a symmetric Boolean matrix,424,,,,,,,,,"Hirschberg, Chandra, Sarwate",1979,https://dl.acm.org/doi/pdf/10.1145/359138.359141,,,,,,,,O(log^2(n)),O(log^2(n)),2,,O(n^2*log(n)),21,,,n: number of vertices,,,,SIMD-SM CREW,210,,,,,,,,,0,,0,,0,1,n ceilling(n/log^2(n)),9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,Transitive Closure,SCCs; Transitive Closure; CC,425,,,,,,,,,Chin et al.,1982,https://dl.acm.org/doi/pdf/10.1145/358628.358650,,,,,,,,O(log^2(n)),O(log^2(n)),2,,O(n^2),10,,,,,,,SIMD-SM-R (CREW PRAM?),210,,,,,,,,,0,,0,,,1,n ceilling(n/log^2(n)),18,,,"originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515
refrenced this https://hub.hku.hk/handle/10722/151778 ? don't have access to it but same authors, maybe same content?",,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,CC,CC,426,Vertex collapse method,,,,,,,,Nath and Maheshwari,1982,https://www.sciencedirect.com/science/article/pii/0020019082901314,,,,,,,,O(log^2(n)),O(log^2(n)),2,,O(n^2*log(n)),11,,,n: number of nodes,,,,SIMD-SM (EREW PRAM?),110,,,,,,,,,0,,0,,0,1,n^2/log n,9,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,CC,CC,427,Vertex collapse method,,,,,,,,Shiloach and Vishkin,1982,https://www.sciencedirect.com/science/article/pii/0196677482900086,,,,,,,,O(log(n)),O(log(n)),1,,O(m*log(n)),11,,,"n: number of nodes
m: number of edges",,,,SIMD-SM-RW (arbitrary-CRCW PRAM),131,,,,,,,,,0,,0,,0,1,n+2m,10,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,CC,CC,428,,,,,,,,,Vishkin,1982,https://www.sciencedirect.com/science/article/pii/0166218X84900192,,,,,,,,O(n^2/p),O(log^2(n)),2,,O(n^2),10,,,n: number of nodes,,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,p (<=n^2/log^2 n),18,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,CC,CC,429,Transitive closure method,,,,,,,,Kucera,1982,https://www.sciencedirect.com/science/article/pii/002001908290093X,,,,,,,,O(log(n)),O(log(n)),1,,O(n^4*log(n)),21,,,n: number of nodes,,,,SIMD-SM-RW (CRCW PRAM?),130,,,,,,,,,0,,0,,0,1,n^4,20,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,CC,CC,430,,,,,,,,,"Koubek, Kršňáková",1985,https://link.springer.com/content/pdf/10.1007/BFb0028804.pdf,,,,,,,,O(log(n)),O(log(n)),1,,O((m+n)*log(n)),11,,,"n: number of vertices
m: number of edges",,,,PRAM-CRCW,130,,,,,,,,,0,,0,,0,1,O(m+n),10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,CC,CC,431,,,,,,,,,"Koubek, Kršňáková",1985,https://link.springer.com/content/pdf/10.1007/BFb0028804.pdf,,,,,,,,O(log^2(n)),O(log^2(n)),2,,O((m+n)*log(n)),11,,,"n: number of vertices
m: number of edges",,,,PRAM-CREW and PRAM-EREW,110,,,,,,,,,0,,0,,0,1,O((m+n)/log(n)),9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,CC,CC,432,,,,,,,,,Reif,1985,https://apps.dtic.mil/sti/tr/pdf/ADA161791.pdf,,,,,,,,O(log n),O(log n),1,,O(m+n),10,,,"n: number of vertices
m: number of edges",,,,CRCW PRAM,130,,,,,,,,,1,"\exists c \any \alpha> 1, \any sufficiently large n, span <=c\alpha*log(n) holds with probability at least 1- 1/n^\alpha",0,,0,1,O((m+n)/log(n)),9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,CC,CC,433,,,,,,,,,Gazit,1986,https://epubs.siam.org/doi/pdf/10.1137/0220066,,,,,,,,O(log(n)),O(log(n)),1,,O(m+n),10,,,"n: number of vertices
m: number of edges",,,,PRAM-CRCW,130,,,,,,,,,1,The probability that the algorithm runs longer than expected is at most (2/e)^{n/log^k(n)} for some constant k < 4,0,,0,1,O((m+n)/log(n)),9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,CC,CC,434,,,,,,,,,"Cole, Vishkin",1986,https://ieeexplore.ieee.org/iel5/4568183/4568184/04568239.pdf,,,,,,,,O(log n),O(log n),1,,"O((n+m) \alpha(m,n))",10.0005,,,"n: number of nodes
m: number of edges",,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,"O((n + m) \alpha(m,n)/log n)",9.0005,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,CC,CC,435,,,,,,,,,"Cole, Vishkin",1987,https://www.sciencedirect.com/science/article/pii/0890540189900369/pdf?md5=78fcc1ee8f52d0433144fd3e62697bd8&pid=1-s2.0-0890540189900369-main.pdf,,,,,,,,O(log^2 n),O(log^2 n),2,,"O((n + m) \alpha(m, n)) ",10.0005,,,"n: number of vertices
m: number of edges",,,,PRAM-CREW,120,,,,,,,,,0,,0,,0,1,"O((n + m) \alpha(m, n)/log^2(n)) ",8.9005,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,CC,CC,436,,,,,,,,,"Awerbuch, Shiloach",1987,https://ieeexplore.ieee.org/document/1676869,,,,,,,,O(log m),O(log m),1,,O(m*log m),11,,,m: number of edges,,,,PRAM-CRCW,130,,,,,,,,,0,,0,,0,1,m+n,10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,CC,CC; biconnected components,437,,,,,,,,,"Kruskal, Rudolph, Snir",1990,https://link.springer.com/article/10.1007/BF01840376,,,,,,,,O(m/p*log(n)/log(m/(p^2*log(p))) + n/p*log(p)),O(n^{1+2eps}*log(n)/log(n^{4eps}/log(n)) + n/n^{1-2eps}*log(n),,,O(m*log(n)/log(m) + n),10,,,"n: number of nodes
m: number of edges
p: number of processors",,,,MIMD EREW,310,,,,,,,,,0,,0,,0,1,"p <= m^{1/2-eps} for any eps>0
log p <= m/n",,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,CC,CC,438,,,,,,,,,"Han, Wagner",1990,https://dl.acm.org/doi/pdf/10.1145/79147.214077,,,,,,,,O(m/p + (n log n)/p + log^2 n),O(m/p + (n log n)/p + log^2 n),2,,O(m + (n log n) + log^2 n),10,,,"n: number of vertices
m: number of edges
p: number of processors",,,,PRAM-CREW,120,,,,,,,,,0,,0,,0,1,p,8.9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,CC,CC,439,,,,,,,,,"Das, Deo, Prasad",1990,https://www.sciencedirect.com/science/article/pii/016781919090143W,,,,,,,,O(m/p + n log p),O(m/p + n log p),6.1,,O(m + n),10,,,"n: number of nodes
m: number of edges
p: number of processors",,,,MIMD hypercube,700,,,,,,,,,0,,0,,0,1,p <= (m/n)/(1 +log(m/n)),5.9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,CC,CC,440,,,,,,,,,"Han, Wagner",1990,https://dl.acm.org/doi/pdf/10.1145/79147.214077,,,,,,,,O(m/p + (n log n)/p + log^2 n),O(m/p + (n log n)/p + log^2 n),2,,O(m + (n log n) + p log^2 n),10,,,"n: number of nodes
m: number of edges",,,,PRAM CREW,120,,,,,,,,,0,,0,,0,1,p,8.9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,CC,CC,441,,,,,,,,,"Cole, Vishkin",1991,https://www.sciencedirect.com/science/article/pii/0890540189900369/pdf?md5=78fcc1ee8f52d0433144fd3e62697bd8&pid=1-s2.0-0890540189900369-main.pdf,,,,,,,,O(log n),O(log n),1,,"O((n + m) \alpha(m, n)) ",10.0005,,,"n: number of vertices
m: number of edges",,,,PRAM-CRCW,130,,,,,,,,,0,,0,,0,1,"O((n + m) \alpha(m, n)/log(n)) ",9.0005,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,CC,CC,442,,,,,,,,,"Johnson, Metaxas",1991,https://digitalcommons.dartmouth.edu/cgi/viewcontent.cgi?article=1061&context=cs_tr,,,,,,,,O(log^{3/2}(n)),O(log^{3/2}(n)),1.5,,O((m+n)log^{3/2}(n)),11.5,,,"n: number of vertices
m: number of edges",,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,m+n,10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,CC,CC,443,,,,,,,,,"Karger, Nisan, Parnas",1992,https://dl.acm.org/doi/pdf/10.1145/140901.141920,,,,,,,,O(log n),O(log n),1,,"O(m+n^{1+\eps}), \eps>0",10,,,"n: number of vertices
m: number of edges",,,,EREW PRAM,110,,,,,,,,,1,,0,,0,1,"O((m+n^{1+\eps}) / log n), \eps>0",9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,CC,CC,444,,,,,,,,,"Karger, Nisan, Parnas",1992,https://dl.acm.org/doi/pdf/10.1145/140901.141920,,,,,,,,O(log n log log n),O(log n log log n),1.1,,O((m+n) log log n),10.1,,,"n: number of vertices
m: number of edges",,,,EREW PRAM,110,,,,,,,,,1,,0,,0,1,O((m+n) / log n),9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,CC,CC,445,,,,,,,,,"Karger, Nisan, Parnas",1992,https://dl.acm.org/doi/pdf/10.1145/140901.141920,,,,,,,,O(log^1.5(n)),O(log^1.5(n)),1.5,,O((m+n)log^1.5(n)),11.5,,,"n: number of vertices
m: number of edges",,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,m+n,10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,0.001,CC,CC,446,,,,,,,,,"Nisan, Szemeredi, Wigderson",1992,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=cda3df47a2962c5b98f2ac892c7a0f64d442fb3e,,,,,,,,O(log^{1.5} n),O(log^{1.5} n),1.5,,,,,,,,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,CC,CC,447,,,,,,,,,"Chong, Lam",1993,https://dl.acm.org/doi/pdf/10.5555/313559.313575,,,,,,,,O(log n log log n) ,O(log n log log n) ,1.1,,O((n+m) log n log log n) ,11.1,,,"n: number of vertices
m: number of edges",,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,O(n+m),10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,CC,CC,448,,,,,,,,,"Halperin, Zwick",1994,https://dl.acm.org/doi/pdf/10.1145/181014.181017,,,,,,,,O(log n),O(log n),1,,O(m+n),10,,,"n: number of vertices
m: number of edges",,,,EREW PRAM,110,,,,,,,,,1,The probability y that the algorithm will not complete in O(log n) time is at most n^{-c} for any desired c >0.,0,,0,1,O((m+n) / log n),9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,0.001,CC,CC,449,,,,,,,,,"Iwama, Kambayashi",1994,https://www.sciencedirect.com/science/article/pii/S0196677484710091,,,,,,,,O(log^2 n),O(log^2 n),2,,"O((n + m) \alpha(m, n)) ",10.0005,,,"n: number of vertices
m: number of edges",,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,"O((n + m) \alpha(m, n)/log^2(n)) ",8.9005,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,CC,CC,450,,,,,,,,,"Pettie, Ramachandran",2001,https://www.cs.utexas.edu/users/vlr/papers/tr01-25.pdf,,,,,,,,O(m/p + log^2(n) log*(n)),O(m/p + log^2(n) log*(n)),2.001,,O(m+n),10,,,"n: number of nodes
m: number of edges",,,,EREW PRAM,110,,,,,,,,,1,,0,,0,1,p,8.895,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,SCCs,SCCs; CC,451,,,,,,,,,Schudy,2008,https://dl.acm.org/doi/pdf/10.1145/1378533.1378560,,,,,,,,O(τ log^2 n),O(τ log^2 n),3,,O(pτ log^2 n),12,,,"n: number of nodes
p: number of processors
τ: runtime for a multi-source reachability query executed in parallel on p processors",,,,CRCW PRAM,130,,,,,,,,,1,Las-Vegas,0,,,1,p,9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,0.001,CC,,452,,,,,,,,,Bloemen,2015,http://essay.utwente.nl/67128/1/Bloemen_MA_EEMCS.pdf,,,,,,,,O(V + E),O(V + E),10,,O(P · (V + E)),,,,"V: number of vertices
E: number of edges
P: number of processors",,,,Unlisted (SIMD?),,,,,,,,,,0,,0,,0,1,P,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,CC,CC,453,,,,,,,,,"Shun, Dhulipala, Blelloch",2014,https://dl.acm.org/doi/pdf/10.1145/2612669.2612692,,,,,,,,O(log^3(n),O(log^3(n),3,,O(m),10,,,,,,,CRCW PRAM,130,,,,,,,,,1,whp,0,,0,1,O(m/log^3(n)),8.8,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
13,Strongly Connected Components,1,Transitive Closure,transitive closure,454,,,,,,,,,"Karczmarz, Sankowski",2021,https://epubs.siam.org/doi/abs/10.1137/1.9781611976465.17,,,,,,,,,\tilde{O}(d),,,\tilde{O}(nm+ n^3/d^2),,,,"n: number of nodes
m: number of edges
d: depth  parameter ∈[1, n]",,,,unspecified PRAM,100,,,,,,,,,1,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, General MST; Undirected, Dense MST",455,Sollin method,,,,,,,,Savage,1977,https://www.proquest.com/docview/302856503?pq-origsite=gscholar&fromopenview=true,,,,,,,,O(log^2(n)),O(log^2(n)),2,,O(n^2*log(n)),11,,"yes? speedup=O(n^2/log^2(n))
efficiency=O(1/log(n))",n: number of vertices,,,,SIMD-SM-R (CREW PRAM?),210,,,,,,,,,0,,0,,0,1,n^2/log(n),9,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, General MST; Undirected, Dense MST",456,,,,,,,,,"Hirschberg, Chandra, Sarwate",1979,https://dl.acm.org/doi/pdf/10.1145/359138.359141,,,,,,,,O(log^2(n)),O(log^2(n)),2,,O(n^2*log(n)),11,,,n: number of vertices,,,,SIMD-SM CREW,210,,,,,,,,,0,,0,,0,1,n ceilling(n/log^2(n)),9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, General MST; Undirected, Dense MST",457,Prim-Dijkstra,,,,,,,,Deo and Yoo,1981,"DEO, N., AND YOO, Y. B. 1981. Parallel algorithms for the minimum spanning tree problem.",,,,,,,,O(n^1.5),O(n^1.5),7.5,https://dl.acm.org/doi/pdf/10.1145/2514.2515,O(n^2),10,https://dl.acm.org/doi/pdf/10.1145/2514.2515,,n: number of vertices,,,,MIMD-TC,300,,,,,,,,,0,,0,,0,1,O(n^0.5),6,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, General MST; Undirected, Dense MST",458,Solin,,,,,,,,Deo and Yoo,1981,"DEO, N., AND YOO, Y. B. 1981. Parallel algorithms for the minimum spanning tree problem.",,,,,,,,O(n^2 log n / p),O(n log n),6.1,https://dl.acm.org/doi/pdf/10.1145/2514.2515,O(n^2 log n),11,https://dl.acm.org/doi/pdf/10.1145/2514.2515,,n: number of vertices,,,,MIMD-TC,300,,,,,,,,,0,,0,,0,1,p <= n,6,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, General MST; Undirected, Dense MST",459,Sollin method,,,,,,,,Savage and Ja'Ja',1981,https://epubs.siam.org/doi/abs/10.1137/0210051,,,,,,,,O(log^2(n)),O(log^2(n)),2,,O(n^2*log^2(n)),12,,,n: number of vertices,,,,SIMD-SM-R (CREW PRAM),210,,,,,,,,,0,,0,,0,1,n^2,10,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, General MST; Undirected, Dense MST",460,Sollin method,,,,,,,,Nath and Maheshwari,1982,https://www.sciencedirect.com/science/article/pii/0020019082901314,,,,,,,,O(log^2(n)),O(log^2(n)),2,,O(n^2*log(n)),11,,,n: number of vertices,,,,SIMD-SM (CREW PRAM),210,,,,,,,,,0,,0,,0,1,n^2/log(n),9,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, General MST; Undirected, Dense MST",461,Sollin method,,,,,,,,Nath and Maheshwari,1982,https://www.sciencedirect.com/science/article/pii/0020019082901314,,,,,,,,O(log^3(n)),O(log^3(n)),3,,O(n^2*log^2(n)),12,,,n: number of vertices,,,,SIMD-SM (EREW PRAM),110,,,,,,,,,0,,0,,0,1,n^2/log(n),9,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, General MST; Undirected, Dense MST",462,Kruskal method,,,,,,,,Kucera,1982,https://www.sciencedirect.com/science/article/pii/002001908290093X,,,,,,,,O(log n),O(log n),1,,O(n^5 log n),26.6,,,"n: number of edges
m: number of edges",,,,WPRAM,130,,,,,,,,,0,,0,,0,1,n^5,26.5,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, General MST; Undirected, Dense MST",463,Sollin method,,,,,,,,Chin et al.,1982,https://dl.acm.org/doi/abs/10.1145/358628.358650,,,,,,,,O(log^2(n)),O(log^2(n)),2,,O(n^2),10,,,n: number of vertices,,,,SIMD-SM-R (CREW PRAM?),210,,,,,,,,,0,,0,,0,1,n ceiling(n/log^2(n)),8.9,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, General MST; Undirected, Dense MST",464,Sollin method,,,,,,,,Hirschberg,1982,"HIRSCHBERG, D. S. 1982. Parallel graph algorithms without memory conflicts.",,,,,,,,O(log n),O(log n),1,,O(n^3 log n),16.1,,,n: number of vertices,,,,SIMD-SM-RW (CRCW PRAM?),220,,,,,,,,,0,,0,,0,1,O(n^3),16,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, General MST; Undirected, Dense MST",465,Kruskal method,,,,,,,,Yoo,1983,https://www.osti.gov/biblio/5689584,,,,,,,,O(m),O(m),10,,O(m^2),20,,,m: number of edges,,,,MIMD-TC,300,,,,,,,,,0,,0,,0,1,O(m),10,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,directed MST,directed spanning forest,466,,,,,,,,,"Tsin, Chin",1984,https://epubs.siam.org/doi/abs/10.1137/0213036,,,,,,,,O(log^2(n)),O(log^2(n)),2,,O(n^2 log n),11,,,n: number of nodes,,,,SIMD PRAM CREW,120,,,,,,,,,0,,0,,0,1,n\ceil{n/log n},9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, General MST; Undirected, Dense MST",467,Prim's,,,,,,,,Akl,1986,https://link.springer.com/article/10.1007/BF02240073,,,,,,,,O(n),O(n),6,,O(n^2),10,,,n: number of nodes,,,,SM-SIMD (CRCW),220,,,,,,,,,0,,0,,0,1,O(n),6,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, General MST; Undirected, Dense MST",468,,,,,,,,,"Cole, Vishkin",1986,https://ieeexplore.ieee.org/iel5/4568183/4568184/04568239.pdf,,,,,,,,O(log n),O(log n),1,,O((n + m)log log n),10.1,,,"n: number of nodes
m: number of edges",,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O((n + m)log log n/log n),9.05,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, General MST; Undirected, Dense MST",469,,,,,,,,,"Awerbuch, Shiloach",1987,https://ieeexplore.ieee.org/document/1676869,,,,,,,,O(log^2(n)),O(log^2(n)),2,,O(n^2 log^2(n)),12,,,n: number of nodes,,,,Shuffle-exchange network,700,,,,,,,,,0,,0,,0,1,n^2,10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, Dense MST; Undirected, Dense MST",470,,,,,,,,,"Awerbuch, Shiloach",1987,https://ieeexplore.ieee.org/document/1676869,,,,,,,,O(log m),O(log m),1,,O(m log m),11,,,m: number of edges,,,,PRAM-CRCW,130,,,,,,,,,0,,0,,0,1,m,10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, Dense MST",471,Prim's algorithm with an efficient heap,,,,,,,,"Driscoll, Gabow, Shrairman, Tarjan",1987,https://dl.acm.org/doi/pdf/10.1145/50087.50096,,,,,,,,O(m/p),O(n log n),6.1,,O(m),10,,,"m: number of edges
p: number of processors",,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,p <= m/(n log n),5.9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, General MST; Undirected, Dense MST",472,,,,,,,,,"Kruskal, Rudolph, Snir",1990,https://link.springer.com/article/10.1007/BF01840376,,,,,,,,O(m*log(n)/p + log(n)*log(p),O(log(m)*log(n)),2,,O(m*log(n)),11,,,"n: number of nodes
m: number of edges
p: number of processors",,,,MIMD EREW,310,,,,,,,,,0,,0,,0,1,p <= m/log(m),9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, General MST; Undirected, Dense MST",473,,,,,,,,,"Cole, Vishkin",1991,https://www.sciencedirect.com/science/article/pii/0890540189900369,,,,,,,,O(log n),O(log n),1,,O(n log n + m),10,,,"n: number of nodes
m: number of edges",,,,PRAM CRCW,130,,,,,,,,,0,,0,,0,1,(n log n + m)/log n,9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, General MST; Undirected, Dense MST",474,,,,,,,,,Gazit,1991,https://epubs.siam.org/doi/pdf/10.1137/0220066,,,,,,,,O(log(n)),O(log(n)),1,,O(m+n),10,,,"n: number of vertices
m: number of edges",,,,PRAM-CRCW,130,,,,,,,,,1,The probability that the algorithm runs longer than expected is at most (2/e)^{n/log^k(n)} for some constant k < 4,0,,0,1,O((m+n)/log(n)),9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, General MST; Undirected, Dense MST",475,,,,,,,,,"Johnson, Metaxas",1992,https://dl.acm.org/doi/pdf/10.1145/140901.141917,,,,,,,,O(log^{3/2}(n)),O(log^{3/2}(n)),1.5,,O(log^{3/2}(n)*(n+m)),11.5,,,"n: number of nodes
m: number of edges",,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,n+m,10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, General MST; Undirected, Dense MST",476,,,,,,,,,Karger,1992,"KARGER, D. R. 1992. Approximating, verifying, and constructing minimum spanmng forests. Manuscript.",,,,,,,,O(log n),O(log n),1,,m + n^{1+eps}*log(n) for any eps>0,10,https://www.sciencedirect.com/science/article/pii/B9780444880710500229,,"n: number of nodes
m: number of edges",,,,EREW PRAM,110,,,,,,,,,,,0,,0,1,m/log(n) + n^{1+eps} for any eps>0,9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, General MST; Undirected, Dense MST",477,Kruskal,,,,,,,,"Suraweera, Bhattacharya",1993,https://www.sciencedirect.com/science/article/pii/0020019093900196,,,,,,,,O(log m),O(log m),1,,O(m log m),11,,,"n: number of nodes
m: number of edges",,,,PRAM-CRCW,130,,,,,,,,,0,,0,,0,1,O(m),10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, General MST; Undirected, Dense MST",478,,,,,,,,,"Chong, Lam",1993,https://dl.acm.org/doi/pdf/10.5555/313559.313575,,,,,,,,O(log n log log n) ,O(log n log log n) ,1.1,,O((n+m) log n log log n) ,11.1,,,"n: number of vertices
m: number of edges",,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,O(n+m),10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, General MST; Undirected, Dense MST",479,,,,,,,,,"Cole, Klein, Tarjan",1996,https://dl.acm.org/doi/pdf/10.1145/237502.237563,,,,,,,,O(log n),O(log n),1,,O(n+m),10,,,n: number of nodes,,,,CRCW PRAM,130,,,,,,,,,1,,0,,0,1,n/log n,9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, General MST; Undirected, Dense MST",480,,,,,,,,,Chong,1996,http://dspace.fcu.edu.tw/bitstream/2377/2563/1/ce07ics001996000103.pdf,,,,,,,,O(log n log log n),O(log n log log n),1.1,,O((n+m) log n log log n),11.1,,,"n: number of nodes
m: number of edges
p: number of processors",,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,m+n,10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, General MST; Undirected, Dense MST",481,,,,,"Expected time: o((log n)^{1+eps}) for any eps > 0
Expected work: O(m)",,,,"Poon, Ramachandran",1997,https://www.cs.utexas.edu/~vlr/papers/mst97.pdf,,,,,,,,,O(log n log log n 2^{log* n}),1.101,,,10,,,"n: number of nodes
m: number of edges",,,,EREW PRAM,110,,,,,,,,,1,,0,,0,1,,8.94,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, General MST; Undirected, Dense MST",482,,,,,,,,,Zaroliagis,1997,https://www.researchgate.net/profile/Christos-Zaroliagis/publication/47842817_Simple_and_Work-Efficient_Parallel_Algorithms_for_the_Minimum_Spanning_Tree_Problem/links/53e256010cf275a5fdd6ba3e/Simple-and-Work-Efficient-Parallel-Algorithms-for-the-Minimum-Spanning-Tree-Problem.pdf,,,,,,,,O(log^2 n),O(log^2 n),2,,O(m log n),11,,,"n: number of nodes
m: number of edges",,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,O(m/log n),9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, General MST; Undirected, Dense MST",483,,,,,,,,,Zaroliagis,1997,https://www.researchgate.net/profile/Christos-Zaroliagis/publication/47842817_Simple_and_Work-Efficient_Parallel_Algorithms_for_the_Minimum_Spanning_Tree_Problem/links/53e256010cf275a5fdd6ba3e/Simple-and-Work-Efficient-Parallel-Algorithms-for-the-Minimum-Spanning-Tree-Problem.pdf,,,,,,,,O(log n),O(log n),1,,O(m log n),11,,,"n: number of nodes
m: number of edges",,,,COMMON CRCW PRAM,132,,,,,,,,,0,,0,,0,1,O(m),10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"""sufficiently dense""
m/n >= p",484,Sollin method,,,,,,,,"Dehne, Gotz",1998,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=740525,,,,,,,,O(log p),O(log p),1,,"T_seq(n,m/p) + 2*T_seq(n, Dn) + O(n) + g*n + L*log p",10,,,"n: number of nodes
m: number of edges",,,,BSP,400,,,,,,,,,0,,0,,0,1,p (<= m/n),9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"relatively dense graphs (m >= n*p);Undirected, Dense MST",485,,,,,,,,,"Adler, Dittrich, Juurlink, Kutylowski, Rieping",1998,https://dl.acm.org/doi/pdf/10.1145/277651.277662,,,,,,,,O(log p),O(log p),1,,O(m/p + n * log log p + g * n + L* log p),10,,,"n: number of nodes
m: number of edges
p: number of processors",,,,BSP,400,,,,,,,,,0,,0,,0,1,p <= m/n,9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"relatively dense graphs (p^{1+eps} <= m/n, eps > 0);Undirected, Dense MST",486,,,,,,,,,"Adler, Dittrich, Juurlink, Kutylowski, Rieping",1998,https://dl.acm.org/doi/pdf/10.1145/277651.277662,,,,,,,,O(1),O(1),0,,O(m/p + n + g*m/p^{1+eps/2} + L),10,,,"n: number of nodes
m: number of edges
p: number of processors",,,,BSP,400,,,,,,,,,0,,0,,0,1,"p^{1+eps} <= m/n
esp > 0",10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"all but very sparse graphs;Undirected, Dense MST",487,,,,,,,,,"Adler, Dittrich, Juurlink, Kutylowski, Rieping",1998,https://dl.acm.org/doi/pdf/10.1145/277651.277662,,,,,,,,O(log^2(p)/log((m+n)/p)),O(log^2(p)/log((m+n)/p)),2,,O(m/p + n/p*log p + g*(m/p + n/p*log p) + L*(log^2(p)/log((m+n)/p))) ,10,,,"n: number of nodes
m: number of edges
p: number of processors",,,,BSP,400,,,,,,,,,1,runtime bounds probability 1 - p^{-c} for any constant c > 0,0,,0,1,"p <= m + n
log p <= m/n <= p
eps > 0",8.9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, General MST; Undirected, Dense MST",488,,,,,,,,,"Chong, Han, Lam",1999,https://hub.hku.hk/bitstream/10722/45607/1/40756.pdf?accept=1,,,,,,,,O(log n),O(log n),1,,O((n+m)*log n),11,,,"n: number of nodes
m: number of edges",,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,m+n,10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, General MST; Undirected, Dense MST",489,,,,,,,,,"PETTIE, RAMACHANDRAN",1999,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=3be733422366ebdf4cfc1a21ffb3d70770ce129a,,,,,,,,O(log n),O(log n),1,,O(m+n),10,,,"n: number of nodes
m: number of edges",,,,EREW PRAM,110,,,,,,,,,1,1 - p^{-c} for any constant c > 0,0,,0,1,(m+n)/log n,9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, General MST; Undirected, Dense MST",490,,,,,,,,,"Pettie, Ramachandran",1999,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=3be733422366ebdf4cfc1a21ffb3d70770ce129a,,,,,,,,O(log n),O(log n),1,,O(m+n),10,,,"n: number of nodes
m: number of edges",,,,EREW PRAM,110,,,,,,,,,1,,0,,0,1,(m + n) / log n,9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, General MST; Undirected, Dense MST",491,,,,,,,,,"Halperin, Zwick",2000,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=7d8bf94f2171283c40ac212e51e2fbd01885fa4e,,,,,,,,O(log n),O(log n),1,,O(m+n),10,,,"n: number of nodes
m: number of edges",,,,EREW PRAM,110,,,,,,,,,1,,0,,0,1,(m+n)/log n,9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, General MST; Undirected, Dense MST",492,,,,,,,,,"Chong, Han, Igarashi, Lam",2001,https://www.sciencedirect.com/science/article/pii/S0166218X02005607,,,,,,,,O(log n),O(log n),1,,O((m+n)*sqrt(log n)),10.5,,,"n: number of nodes
m: number of edges",,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,O((m+n)/sqrt(log n)),9.08,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, General MST; Undirected, Dense MST",493,,,,,,,,,"Chong, Han, Igarashi, Lam",2001,https://www.sciencedirect.com/science/article/pii/S0166218X02005607,,,,,,,,O(log n),O(log n),1,,O((m+n)*log log n),10.1,,,"n: number of nodes
m: number of edges",,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O((m+n)*log log n/log n),9.05,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, Dense MST",494,,,,,,,,,"Chong, Han, Igarashi, Lam",2001,https://www.sciencedirect.com/science/article/pii/S0166218X02005607,,,,,,,,O(log n),O(log n),1,,O(n^2),10,,,"n: number of nodes
m: number of edges",,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,O(n^2/log n),9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, General MST; Undirected, Dense MST",495,,,,,,,,,"Chong, Han, Lam",2001,https://dl.acm.org/doi/abs/10.1145/375827.375847,,,,,,,,O(log n),O(log n),1,,O(m+n*log n),10.1,,,n: number of nodes,,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,O(n),6,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, General MST; Undirected, Dense MST",496,,,,,,,,,"Pettie, Ramachandran",2001,https://www.cs.utexas.edu/users/vlr/papers/tr01-25.pdf,,,,,,,,O(m/p + log^2(n) log*(n)),O(m/p + log^2(n) log*(n)),2.001,,O(m+n),10,,,"n: number of nodes
m: number of edges",,,,EREW PRAM,110,,,,,,,,,1,,0,,0,1,p,8.895,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, General MST; Undirected, Dense MST",497,,,,,,,,,"AHRABIAN, NOWZARI-DALINI",2002,https://www.tandfonline.com/doi/pdf/10.1080/00207160210945,,,,,,,,O(n^2 log n),O(n^2 log n),11,,O(n^3),16,,,n: number of nodes,,,,,120,,,,,,,,,0,,0,,0,1,O(n/log n),5.9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, General MST; Undirected, Dense MST",498,,,,,,,,,"AHRABIAN, NOWZARI-DALINI",2002,https://www.tandfonline.com/doi/pdf/10.1080/00207160210945,,,,,,,,O(n^3*log(p)/p),O(n^3*log(p)/p),1,,O(n^3),16,,,"n: number of nodes
p: number of processors",,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,p,15.95,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Minimum Spanning Tree (MST),1,MST,"Undirected, General MST; Undirected, Dense MST",499,Parallel algorithm,,1,1,O(E log(V)/p),,,[https://www.sciencedirect.com/science/article/pii/S0743731506001262 Bader & Cong Parallel Implementation  (2006)],Bader & Cong Parallel Implementation ,2006,https://www.sciencedirect.com/science/article/pii/S0743731506001262,,,,0,0,5.01,"E: 3,
V: 5.01",O(E \log(V)/p),$O(E\log(V)/p)$,6.1,https://www.sciencedirect.com/science/article/pii/S0743731506001262,$O(E\log(V)$,11,https://www.sciencedirect.com/science/article/pii/S0743731506001262,only experimentally?,"V: number of vertices
E: number of edges
U: maximum edge weight
p: number of processors",V,https://www.sciencedirect.com/science/article/pii/S0743731506001262,0,PRAM/SMPs?,300,words,3,"V: 3,
E: 1",O(V) total,Initializes and uses a constant number of arrays of size O(V) (and does work similar to work done in Boruvka/Prim algorithm),1,0,,0,,0,,0,1,p,6,0,0,,"A minimum spanning tree (MST) or minimum weight spanning tree is a subset
 of the edges of a connected; edge-weighted undirected graph that
 connects all the vertices together; without any cycles and
 with the minimum possible total edge weight.",,,,,,"V:E
5:7",,,,,,,8.7,583.3333333,,,,,,,,5,,,Combinatorics
14,Minimum Spanning Tree (MST),1,MST,"Undirected, General MST; Undirected, Dense MST",500,,,,,,,,,"Tripathy, Ray",2013,https://www.proquest.com/docview/1505018621,,,,,,,,O(m*log(n)/p),O(m*log(n)/p),6.1,,O(m*log(n)),11,,,"n: number of nodes
m: number of edges
p: number of processors",,,,"""multiprocessor system"", ""shared memory""",300,,,,,,,,,0,,0,,0,1,p <=n,6,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
15,Closest Pair Problem,1,2-dimensional space Closest Pair Problem,"2-dimensional space, Euclidean metric",501,,,,,,,,[https://link.springer.com/article/10.1007/BF01758749 Cole & Gooddrich (1988)],Cole & Gooddrich,1988,https://link.springer.com/article/10.1007/BF01758749,,,,,,,,O(log n),O(log n),1,https://link.springer.com/article/10.1007/BF01758749,O(n log n),11,https://link.springer.com/article/10.1007/BF01758749,no,n: number of points,,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,O(n),6,0,0,,"Given $n$ points in 2-dimensional space equipped with the Eucildean metric, find a pair of points with the smallest distance between them. ",,,,,,,,,,,,,,,,,,,,,,,,,
15,Closest Pair Problem,1,k-dimensional space Closest Pair Problem,"k-dimensional space, $l_m$ (or $l_\infty$) norm",502,,,,,,,,[https://pure.mpg.de/pubman/faces/ViewItemOverviewPage.jsp?itemId=item_1834886 Lenhof & Smid (1992)],Lenhof & Smid,1992,https://pure.mpg.de/pubman/faces/ViewItemOverviewPage.jsp?itemId=item_1834886,,,,,,,,O((log n)^2 log log n),O((log n)^2 log log n),2.1,https://pure.mpg.de/pubman/faces/ViewItemOverviewPage.jsp?itemId=item_1834886,O(nlog n log log n + k),20,https://pure.mpg.de/pubman/faces/ViewItemOverviewPage.jsp?itemId=item_1834886,no,"n: number of points
k: kth closest pair",,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(n/log n + k/((log n)^2 log log n)),17.99,0,0,,"Given $n$ points in metric space, typically $k$-dimensional space equipped with $l_m$ (or $l_\infty$) norm, find a pair of points with the smallest distance between them. ",,,,,,,,,,,,,,,,,,,,,,,,,
15,Closest Pair Problem,1,2-dimensional space Closest Pair Problem,"2-dimensional space, Eucledian metric",503,,,,,,,,,"MacKenzie, Stout",1991,https://www.researchgate.net/profile/Q-Stout/publication/2449701_Ultra-Fast_Expected_Time_Parallel_Algorithms/links/0c960527a896da1aea000000/Ultra-Fast-Expected-Time-Parallel-Algorithms.pdf,,,,,,,,O(1) expected,O(1) expected,0,,O(n) expected,10,,,n: number of points,,,,Arbitrary CRCW PRAM,131,,,,,,,,,1,,0,,0,1,n,10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
15,Closest Pair Problem,1,2-dimensional space Closest Pair Problem,2-dimensional array representation,504,,,,,,,,,"Atallah, Goodrich",1986,https://docs.lib.purdue.edu/cgi/viewcontent.cgi?article=1424&context=cstech,,,,,,,,O(log n log log n),O(log n log log n),1.1,,O(n log n log log n),11.1,,,n: number of points,,,,PRAM CREW,120,,,,,,,,,0,,0,,0,1,O(n),10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
15,Closest Pair Problem,1,k-dimensional space Closest Pair Problem,Euclidean space in k dimensions,505,,,,,,,,,"Blelloch, Gu, Shun, Sun",2016,https://dl.acm.org/doi/pdf/10.1145/3402819,,,,,,,,O(log n log^∗ n) whp,O(log n log^∗ n) whp,2.001,,O(n) expected,10,,,n: number of points,,,,ARBITRARY CRCW PRAM,131,,,,,,,,,1,,0,,0,1,,8.895,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
15,Closest Pair Problem,1,2-dimensional space Closest Pair Problem,"2-dimensional space, Euclidean metric",506,,,,,,,,,Callahan,1993,https://www.researchgate.net/profile/Paul-Callahan-3/publication/221498722_Optimal_Parallel_All-Nearest-Neighbors_Using_the_Well-Separated_Pair_Decomposition_Preliminary_Version/links/5453daa60cf2bccc490b2619/Optimal-Parallel-All-Nearest-Neighbors-Using-the-Well-Separated-Pair-Decomposition-Preliminary-Version.pdf,,,,,,,, O(log n), O(log n),1,, O(n log n),11,,,n: number of points,,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(n),6,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),1,undirected nonneg SSSP,non-negative edge lengths,507,,,,,,,,,"Driscoll, Gabow, Shrairman, Tarjan",1987,https://dl.acm.org/doi/pdf/10.1145/50087.50096,,,,,,,,O(m/p + n log n),O(m/p + n log n),6.1,,O(m + np log n),10,,,"n: number of nodes
m: number of edges
p: number of processors",,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,p <= m/(n log n),5.9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),1,directed nonneg SSSP,nonnegative weighted digraphs,508,,,,,,,,,"Klein, Subramanian",1997,https://www.sciencedirect.com/science/article/abs/pii/S0196677497908889,,,,,,,,O(sqrt(n) log(L) log(n) log*(n)),O(sqrt(n) log(L) log(n) log*(n)),,,O(m sqrt(n) log(L) log(n)),,,,"n: number of nodes
m: number of edges
L: sum of edge lengths",,,,ARBITRARY CRCW PRAM,131,,,,,,,,,1,,0,,0,1,O(m/log*n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),1,undirected nonneg SSSP,undirected graphs with nonnegative edge weights,509,,,,,,,,,"Maleki, Nguyen, Lenharth, Garzarán, Padua, Pingali",2016,https://dl.acm.org/doi/abs/10.1145/2925426.2926287,,,,,,,,O((|E| + L_D)/P + (|E| + L_D)/D),O((|E| + L_D)/P + (|E| + L_D)/D),,,O((|E| + L_D) + (|E| + L_D)P/D),,,,"|E|: number of edges
P: number of processors
D: number of edge relaxations between communications
L_D: work overhead",,,,BSP (written for SPMD),400,,,,,,,,,0,,0,,0,1,P,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),1,directed SSSP,weighted digraph,510,,,,,,,,,Amato,1991,https://core.ac.uk/download/pdf/158320008.pdf,,,,,,,,O(log^2 n),O(log^2 n),2,,M(n),,,,"n: number of nodes
M(n): number of processors necessary to multiply two nxn integer matrices over a ring in O(log n) time",,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,M(n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),1,,both directed and undirected,511,∆-stepping,,,,,,,,"Dhulipala, Blelloch, Shun",2017,https://dl.acm.org/doi/pdf/10.1145/3087556.3087580,,,,,,,,O(d_∆ log |V|) whp,O(d_∆ log |V|) whp,,,expected O(w_∆),,,,"w∆, d∆: work and number of rounds of the original ∆-stepping algorithm",,,,work-depth CRCW,330,,,,,,,,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),1,,,512,wBFS,,,,,,,,"Dhulipala, Blelloch, Shun",2017,https://dl.acm.org/doi/pdf/10.1145/3087556.3087580,,,,,,,,O(r_{src} + |E|)  whp,O(r_{src} + |E|)  whp,,,expected O(r_{src} log |V|),,,,r_{src}: eccentricity from src; longest SP dist bet src and any reachable vertex v,,,,work-depth CRCW,330,,,,,,,,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),1,directed nonneg SSSP,non-negative digraph,513,,,,,,,,,"Brodal, Traff, Zaroliagis",1997,https://pure.mpg.de/rest/items/item_1824291_4/component/file_2574443/content,,,,,,,,O(n),O(n),6,,O(m log n),11,,,"n: number of nodes
m: number of edges",,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(m log n / n),5.9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),1,directed nonneg SSSP,"undirected graph, positive weights",514,,,,,,,,,Cohen,1993,https://www.sciencedirect.com/science/article/abs/pii/S0196677496908135,,,,,,,,O(nR log^3{n}/d),O(nR log^3{n}/d),,,O(n^2R log^3{n} + nd^2 log n),,,,"R = max{1, ceil(log{max_{e \in E} w(e) / min_{e \in E} w(e)})}
1 <= d <= n",,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,O(nd + d^3/(R log^2 n)),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),1,undirected SSSP,undirected graph,515,,,,,,,,,"Shi, Spencer",1999,https://dl.acm.org/doi/abs/10.1006/jagm.1998.0968,,,,,,,,O(t log n),O(t log n),,,O((n^3/t^2) log n log(n/t) + m log n),,,,"n: number of nodes
m: number of edges
log n <= t <= n",,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,O((n^3/t^3) log(n/t) + m/t),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),1,undirected SSSP,undirected graph,516,,,,,,,,,"Shi, Spencer",1999,https://dl.acm.org/doi/abs/10.1006/jagm.1998.0968,,,,,,,,O(t log n),O(t log n),,,O((n^3/t^3 + mn/t) log n) for any t in the range log n <= t <= n,,,,"n: number of nodes
m: number of edges
log n <= t <= n",,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,O(n^3/t^4 + mn/t^2) for any t in the range log n <= t <= n,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),0.001,,,517,,,,,,,,,"Mohr, Pasche",1988,https://dl.acm.org/doi/abs/10.1007/BF02276912,,,,,,,,,,,,,,,,,,,,MIMD,,,,,,,,,,,,,,,,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),1,directed nonneg SSSP,digraphs w/ non-negative integer weights,518,,,,,,,,,"Cao, Fineman",2023,https://epubs.siam.org/doi/pdf/10.1137/1.9781611977554.ch166,,,,,,,,n^{1/2+o(1)} whp,n^{1/2+o(1)} whp,,,O˜(m),,,,"n: number of vertices
m: number of edges",,,,work-depth,,,,,,,,,,1,,0,,0,1,\tilde{O}(m/(n^{1/2+o(1))},,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),1,directed SSSP,weighted directed graph,519,,,,,,,,,Cohen,1993,https://dl.acm.org/doi/pdf/10.1145/165231.165240,,,,,,,,O(log^2 n),O(log^2 n),2,,O((n + n^{3\mu}) log n + s(n + n^{2\mu})),,,,"n: number of vertices
s: number of sources
k^{\mu}-separator decomposition ",,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,O(((n + n^{3\mu}) log n + s(n + n^{2\mu}))/log^2 n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),1,undirected SSSP,edge lengths between 1 and L,520,,,,,,,,,Spencer,1991,https://dl.acm.org/doi/pdf/10.1145/113379.113387,,,,,,,,O((n/p) log n log(pL)),O((n/p) log n log(pL)),10,,O(np^2 log p log(pL)) + \tilde{O}(m + n log L),16.1,,,"n: number of vertices
m: number of edges
L: length of the longest edge
p <= n",,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,O(p^3 log p / log(n)) + \tilde{O}((m + n log L) / ((n/p) log n log(pL)) ),6.1,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
16,Shortest Path (Directed Graphs),1,directed SSSP,directed,521,,,,,,,,,Garg,2018,https://arxiv.org/pdf/1812.10499,,,,,,,,O(n log log n),O(n log log n),6.01,,O(nm),16,,,"n: number of vertices
m: number of edges",,,,common CRCW PRAM,132,,,,,,,,,0,,0,,0,1,m,9.1,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),0.001,APSP,,522,Warshall-Floyd method,,,,,,,,Arjomandi,1975,https://dl.acm.org/doi/abs/10.5555/908319,,,,,,,,,,,,,,,,,,,,MIMD-TC,300,,,,,,,,,,,,,,1,,,,,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),1,APSP,APSP,523,Repeated plus-min method,,,,,,,,Savage,1977,https://apps.dtic.mil/sti/citations/ADA056888,,,,,,,,O(log^2(n)),O(log^2(n)),2,"section 7.2, page 104",O(n^3*log(n)),16.1,,,n: number of vertices,,,,SIMD-SM-R (CREW PRAM?),210,,,,,,,,,0,,0,,0,1,n^3/log(n),15.95,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),0.001,APSP,,524,Warshall-Floyd method,,,,,,,,Deo et al.,1980,https://cir.nii.ac.jp/crid/1571698600670249216,,,,,,,,O(n^3/p+pn),,,,,,,,,,,,MIMD-TC,300,,,,,,,,,,,,,,1,p<<n,,,,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),1,APSP,APSP,525,Repeated plus-min method,,,,,,,,Dekel; Nassimi & Sahni,1981,https://epubs.siam.org/doi/abs/10.1137/0210049,,,,,,,,O(log^2(n)),O(log^2(n)),2,,O(n^3*log^2(n)),16.2,,,n: number of vertices,,,,"SIMD-PS, SIMD-CC",700,,,,,,,,,0,,0,,0,1,n^3,16,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),1,APSP,APSP,526,Repeated plus-min method,,,,,,,,Kucera,1982,https://www.sciencedirect.com/science/article/pii/002001908290093X,,,,,,,,O(log(n)),O(log(n)),1,,O(n^4*log(n)),21,,,n: number of vertices,,,,SIMD-SM-RW (CRCW PRAM?),220,,,,,,,,,0,,0,,0,1,n^4,20,0,0,originally found in  https://dl.acm.org/doi/pdf/10.1145/2514.2515,,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),0.001,APSP,,527,,,,,,,,,Jenq & Sahni,1987,https://digitalcommons.montclair.edu/compusci-facpubs/96/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),1,APSP,APSP,528,,,,,,,,,Takaoka,1992,https://www.sciencedirect.com/science/article/pii/002001909290200F,,,,,,,,O(log^2(n)),O(log^2(n)),2,,O(n^3*(log n)^{1/2}*(log log n)^{1/2}),16.06,,,n: number of vertices,,,,PRAM-EREW,110,,,,,,,,,0,,0,,0,1,O(n^3*(log log n)^{1/2}/(log n)^{3/2}),15.994,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),1,APSP,APSP,529,,,,,,,,,"Han, Pan & Reif",1992,https://dl.acm.org/doi/pdf/10.1145/140901.141913,,,,,,,,O(log^2(n)),O(log^2(n)),2,,o(n^3),15.9995,,,"n: number of vertices
p: number of processors",,,,PRAM-EREW,110,,,,,,,,,0,,0,,0,1,,15.93,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),1,APSP,APSP,530,,,,,,,,,"Han, Pan & Reif",1992,https://dl.acm.org/doi/pdf/10.1145/140901.141913,,,,,,,,O(log(n)*log(log n)),O(log(n)*log(log n)),1.1,,o(n^3),15.9995,,,"n: number of vertices
p: number of processors",,,,PRAM-CRCW,130,,,,,,,,,0,,0,,0,1,,15.94,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),1,APSP,APSP,531,,,,,,,,,"Han, Pan & Reif",1992,https://dl.acm.org/doi/pdf/10.1145/140901.141913,,,,,,,,O(log n),O(log n),1,,O(n^3),16,,,"n: number of vertices
p: number of processors",,,,PRAM-CRCW,130,,,,,,,,,1,,,,,1,n^3,15.95,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),1,APSP,APSP,532,,,,,,,,,Takaoka,1998,https://link.springer.com/article/10.1007/PL00009198,,,,,,,,O(log^2(n)),O(log^2(n)),2,,O(n^3(log log n)^{3/2}/(log n)^{1/2}) = o(n^3),15.98,,,n: number of vertices,,,,PRAM-EREW,110,,,,,,,,,0,,0,,0,1,O(n^3(log log n)^{3/2}/(log n)^{5/2}),15.925,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),1,directed APSP,weighted directed dense graph,533,,,,,,,,,Tiskin,2001,https://www.researchgate.net/profile/Jan-Van-Leeuwen/publication/242498580_Automata_Languages_and_Programming_28th_International_Colloquium_ICALP_2001_Crete_Greece_July_8-12_2001_Proceedings/links/0a85e53cd28b9617d1000000/Automata-Languages-and-Programming-28th-International-Colloquium-ICALP-2001-Crete-Greece-July-8-12-2001-Proceedings.pdf#page=192,,,,,,,,O(n^3/p + g*(n^2/p^{2/3}) + l* log p),O(n^2),10,,O(n^3),16,,,"n: number of nodes
p: number of processors
g: communication throughput ratio (aka gap)
l: communication latency",,,,BSP,400,,,,,,,,,0,,0,,0,1,p (n ≥ p),6,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),1,APSP,APSP,534,,,,,,,,,Takaoka,2004,https://link.springer.com/chapter/10.1007/978-3-540-27798-9_31,,,,,,,,O(log log n),O(log log n),0.1,,O(n^3*log^2(log n)/log n),15.97,,,n: number of vertices,,,,PRAM-EREW,110,,,,,,,,,0,,0,,0,1,O(n^3*log(log n)/log n),15.96,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),0.001,APSP,,535,,,,,,,,,Yanagisawa,2010,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5470362,,,,,,,,,,,,,,,,,,,,SIMD (shared-memory),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),1,APSP,APSP,536,,,,,,,,,"Solomonik, Buluç, Demmel",2013,https://ieeexplore.ieee.org/abstract/document/6569841,,,,,,,,O(n^3/p + n^2/\sqrt{p} + \sqrt{p}log^2(p)) or O(n^3/p + n^2/\sqrt{pc} + \sqrt{pc}log^2(p/c^3)),O(n^3/p + n^2/\sqrt{p} + \sqrt{p}log^2(p)) or O(n^3/p + n^2/p^{2/3} + p^{2/3}),6.5,,O(n^3),16,,,"n: number of vertices
p: number of processors
c <= p^{1/3} (some blocking parameter)",,,,distributed memory,700,,,,,,,,,0,,0,,0,1,p,8.1,0,0,https://www2.eecs.berkeley.edu/Pubs/TechRpts/2012/EECS-2012-19.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,
17,All-Pairs Shortest Paths (APSP),0.001,APSP,,537,,,,,,,,,"Kim, Choi, Bae",2018,https://dl.acm.org/doi/pdf/10.1145/3229710.3229730,,,,,,,,,,,,O(n^2.4) empirically,,,,,,,,shared memory,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
18,Integer Factoring,1,Integer Factoring,First Category Integer Factoring,538,,,,,,,,,Parallel Lenstra's ECM (Brent),1990,https://openresearch-repository.anu.edu.au/bitstream/1885/40808/3/TR-CS-90-05.pdf,,,,,,,,"TP = T_1/P + O(T_1^{1=2+\eps}), T_1 = O(exp(c(log f log log f)^{1/2}) * (log N)^2) expected, where c is a constant",T_1/P + O(T_1^{1=2+\eps}),,,T_1 + O(T_1^{1=2+\eps}*P),,,,"N: integer to be factorized
f: nontrivial factor of N
P: number of processors",,,,MIMD and SIMD,700,,,,,,,,,1,expected times,0,,0,1,P,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
19,Integer Factoring,1,Integer Factoring,Second Category Integer Factoring,539,,,,,,,,,"Yang, Xu, Lin",2005,https://link.springer.com/chapter/10.1007/11599555_65,,,,,,,,O(n^2/p),O(n^2/p),,,O(n^2),2000,,,"n: integer to be factorized
p: number of processors",,,,MPI,700,,,,,,,,,1?,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
,Integer Factoring,0.001,Integer Factoring,,540,,,,,,,,,"Yang, Huang, Feng, Pan, Zhu",2017,https://www.sciencedirect.com/science/article/abs/pii/S0020025516310362,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
19,Integer Factoring,1,Integer Factoring,Second Category Integer Factoring,541,,,,,,,,,Wunderlich,1985,https://www.ams.org/journals/mcom/1985-44-169/S0025-5718-1985-0771047-0/S0025-5718-1985-0771047-0.pdf,,,,,,,,M^a / (r(a) a^2 log^2 M) / P,M^a / (r(a) a^2 log^2 M) / P,, ,M^a / (r(a) a^2 log^2 M),,,,"M: integer to be factorized
a = log x / log(sqrt(M))
x: the upper bound for the primes considered
r(a): Dickman's function
P: number of processors",,,,SIMD (ICL DAP),700,,,,,,,,,0,,0,,0,1,P,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
,Integer Factoring,0.001,Integer Factoring,,542,,,,,,,,,"Åsbrink, Brynielsson",2000,https://www.csc.kth.se/~joel/qs.pdf,,,,,,,,,,,,,,,,,,,,MPI,700,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
19,Integer Factoring,1,Integer Factoring,Second Category Integer Factoring,543,,,,,,,,,Yan,1993,https://www.tandfonline.com/doi/pdf/10.1080/0020739930240317,,,,,,,,pi(sqrt(n))/p,pi(sqrt(n))/p,,,pi(sqrt(n)),,,,"n: integer to be factorized
pi(x): the number of primes up to x
p: number of processors",,,,MIMD,700,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
19,Integer Factoring,1,Integer Factoring,Second Category Integer Factoring,544,,,,,,,,,"Bahig, Hazber, Al-Utaibi, Nassr",2022,https://www.mdpi.com/2073-8994/14/12/2527,,,,,,,,O(m/t),O(m/t),,,O(m),1000,,,"m: integer to be factorized
t: number of threads",,,,shared memory,300,,,,,,,,,0,,0,,0,1,t,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
,Integer Factoring,0.001,Integer Factoring,,545,,,,,,,,,"Daoud, Gad",2014,https://www.academia.edu/download/34904126/Paper_27-A_parallel_line_sieve_for_the_GNFS_Algorithm.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,Integer Factoring,0.001,Integer Factoring,,546,,,,,,,,,"Yang, Xu, Lin, Quinn",2006,https://www.uneex.ru/static/springer/fulltext.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,Integer Factoring,0.001,Integer Factoring,,547,,,,,,,,,"Bouillaguet, Zimmermann",2021,https://inria.hal.science/hal-02098114/document,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,Integer Factoring,0.001,Integer Factoring,,548,,,,,,,,,"Yang, Huang, Feng, Xu",2017,https://www.sciencedirect.com/science/article/abs/pii/S0020025516312348,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,Integer Factoring,0.001,Integer Factoring,,549,,,,,,,,,Silverman,1987,https://www.ams.org/journals/mcom/1987-48-177/S0025-5718-1987-0866119-8/S0025-5718-1987-0866119-8.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,Integer Factoring,0.001,Integer Factoring,,550,,,,,,,,,"Yang, Xu, Yeo, Hussain",2010,https://www.sciencedirect.com/science/article/pii/S0898122110000428,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
19,Integer Factoring,0.001,Integer Factoring,Second Category Integer Factoring,551,,,1,1,O(e^{sqrt((2+o(1))n*logn)}/p)?,,,[https://www.ams.org/journals/mcom/1993-61-203/S0025-5718-1993-1182953-4/S0025-5718-1993-1182953-4.pdf Rational sieve (1993)],Rational sieve,1993,https://www.ams.org/journals/mcom/1993-61-203/S0025-5718-1993-1182953-4/S0025-5718-1993-1182953-4.pdf,,,,0,0,8,n: 8,O(e^{sqrt((2+o(1))n*logn)}/p)?,,,,O(e^{sqrt((2+o(1))n*logn)}),,,no,"n: number of bits in the integer
B: bound parameter
p: number of processors",n,,,CREW PRAM?,,bits,3,"n: 3,
B: 5",O(n+(B/logB)^2)?,Same general approach as Dixon's algorithm,1,0,,0,,0,,0,1,p,,0,0,,has a running time which depends solely on the size of the integer to be factored.,,,,,,,,,,,,,,,,,,,,,,4,,,Numerical Analysis
20,LU Decomposition,1,Matrix LU Decomposition,dense,552,,,,,,,,,"Liu, Cheung",1997,https://www.sciencedirect.com/science/article/pii/S0898122197000527/pdf,,,,,,,,,O(n^2),10,,O(n^3),16,,,nxn given matrix,,,,hypercubes,700,,,,,,,,,0,,0,,0,1,O(n),6,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
20,LU Decomposition,1,Matrix LU Decomposition,Square Matrix LU Decomposition,553,,,,,,,,,van de Vorst (grids),1988,https://link.springer.com/content/pdf/10.1007/BF02915443.pdf,,,,,,,,,O(n^1.5) + O(n^2.5) comm,15.25,,O(n^2.5) + O(n^2.5) comm,15.25,,,,,,, distributed-memory MIMD,700,,,,,,,,,0,,0,,0,1,O(n),0,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
20,LU Decomposition,1,Matrix LU Decomposition,Square Matrix LU Decomposition,554,,,,,,,,,van de Vorst (blocks),1988,https://link.springer.com/content/pdf/10.1007/BF02915443.pdf,,,,,,,,,O(n^2) + O(n^2.5) comm,15.25,,O(n^3) + O(n^2.5) comm,16,,,,,,, distributed-memory MIMD,700,,,,,,,,,0,,0,,0,1,O(n),6,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
20,LU Decomposition,1,Matrix LU Decomposition,Square Matrix LU Decomposition,555,,,,,,,,,"Lee, Lee",1996,https://link.springer.com/content/pdf/10.1007/BF03008903.pdf,,,,,,,,,O(n^2),10,,O(n^3),16,,,,,,,Intel Paragon,700,,,,,,,,,0,,0,,0,1,O(n),6,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
20,LU Decomposition,0.001,Matrix LU Decomposition,,556,,,,,,,,,Lüpke,1993,https://link.springer.com/chapter/10.1007/3-540-56891-3_61,,,,,,,,,,,,O(n^3),16,,,,,,,distributed memory MIMD,700,,,,,,,,,,,,,,,p^2 <= n^2,,,,,,,,"Based on the description given in the paper the proposed algorithms perform asymptotically the same amount of work as Crout's algorithm, and they have lower parallelism but better locality (i.e., lower communication) than the parallel version of Crout's algorithm. So, no asymptotic improvement in work / span.",,,,,,,,,,,,,,,,,,,,,,
20,LU Decomposition,1,Matrix LU Decomposition,Square Matrix LU Decomposition,557,,,,,,,,,"Solomonik, Demmel (Classical 2.5D)",2011,https://www2.eecs.berkeley.edu/Pubs/TechRpts/2011/EECS-2011-10.pdf,,,,,,,,O(sqrt(pc) log(p/c) + n^2/sqrt(pc) + n^3/p),O(n log(n)),6.1,,O(n^3),16,,,n x n matrix,,,,distributed memory,700,,,,,,,,,0,,0,,0,1,p<=n^2,9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,1,Single String Search,Single String Search,558,,,1,1,O(log n),,,[https://dl.acm.org/doi/pdf/10.1145/72935.72977 Kedem et al. (1989)],Kedem et al.,1989,https://dl.acm.org/doi/pdf/10.1145/72935.72977,,,,,,,,O(log n),O(log n),1,https://dl.acm.org/doi/pdf/10.1145/72935.72977,O(n),10,https://dl.acm.org/doi/pdf/10.1145/72935.72977,yes,"n: length of text
m: length of pattern",,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(n/log n),9,0,0,,Single string search algorithms try to find a place where a string (also called a pattern) is found within a larger string or text.,,,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,1,Single String Search,Single String Search,559,,,1,1,O(1),,,[https://dl.acm.org/doi/pdf/10.1145/210332.210341 Galil (1995)],Galil,1995,https://dl.acm.org/doi/pdf/10.1145/210332.210341,,,,,,,,O(1),O(1),0,https://dl.acm.org/doi/pdf/10.1145/210332.210341,O(n),10,https://dl.acm.org/doi/pdf/10.1145/210332.210341,yes,"n: length of text
m: length of pattern",,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(n),10,0,0,,Single string search algorithms try to find a place where a string (also called a pattern) is found within a larger string or text.,,,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,1,Single String Search,Single String Search,560,,,1,1,O(log log m),,,[https://dl.acm.org/doi/pdf/10.1145/73007.73036 Berkman et al. (1989)],Berkman et al.,1989,https://dl.acm.org/doi/pdf/10.1145/73007.73036,,,,,,,,O(log log m),O(log log m),0.1,https://dl.acm.org/doi/pdf/10.1145/73007.73036,O(n),10,https://dl.acm.org/doi/pdf/10.1145/73007.73036,yes,"n: length of text
m: length of pattern",,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(n/log log m),9.1,0,0,,Single string search algorithms try to find a place where a string (also called a pattern) is found within a larger string or text.,,,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,1,Single String Search,Single String Search,561,,,1,1,O(log m),,,[https://www.sciencedirect.com/science/article/pii/S0019995885800280 Vishkin (1985)],Vishkin,1985,https://www.sciencedirect.com/science/article/pii/S0019995885800280,,,,,,,,O(log m),O(log m),1,https://www.sciencedirect.com/science/article/pii/S0019995885800280,O(n),10,https://www.sciencedirect.com/science/article/pii/S0019995885800280,yes,"n: length of text
m: length of pattern",,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(n/log m),9,0,0,,Single string search algorithms try to find a place where a string (also called a pattern) is found within a larger string or text.,,,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,0.001,Single String Search,,562,,,,,,,,,"Kim, Kang",2010,https://ieeexplore.ieee.org/iel5/4234/5572888/05547596.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Referenced here: https://link.springer.com/chapter/10.1007/978-3-642-29280-4_32,,,,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,0.001,Single String Search,,563,,,,,,,,,"Kim, Kim, Kang",2011,https://ieeexplore.ieee.org/iel5/71/4359390/05733341.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Referenced here: https://link.springer.com/chapter/10.1007/978-3-642-29280-4_32,,,,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,0.001,Single String Search,,564,,,,,,,,,"Raju, Babu, Raju, Madhavi",2007,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=af89c5e2b8c1f9a5bcf36304481e137d1719d828,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Referenced here: https://link.springer.com/chapter/10.1007/978-3-642-29280-4_32,,,,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,1,Single String Search,multistring search problem,565,,,,,,,,,"Ferragina, Luccio",1999,https://link.springer.com/content/pdf/10.1007/PL00008259.pdf,,,,,,,,O((n log^2 n)/p) + O((gn log^2 n)/(p log(n/p))) + O((km/p)+k) + O(kg+(km/p)g),O((n log^2 n)/m + k)??,2,,O(n log^2 n + km)??,12,,,"n: length of the text
m: lenth of the patterns
k: number of patterns
p: number of processors
g: communication gap (BSP)",,,,BSP,400,,,,,,,,,0,,0,,0,1,m>=p,10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,1,Single String Search,Single String Search,566,,,,,,,,,"Lee, Erçal",1997,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=645099,,,,,,,,O(1),O(1),0,,O(nm),20,,,"m: length of the text
n: length of the pattern",,,,2D reconfigurable mesh,700,,,,,,,,,0,,0,,0,1,(n - m+ 1) x m,20,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,1,Single String Search,Single String Search,567,,,,,,,,,"Czumaj, Galil, Gąsieniec, Park, Plandowski",1995,https://dl.acm.org/doi/pdf/10.1145/225058.225289,,,,,,,,O(log n),O(log n),1,,O(n),10,,,"n: length of text
m: length of pattern",,,,PRAM EREW,110,,,,,,,,,0,,0,,0,1,O(n / log n),9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,1,Single String Search,Single String Search,568,,,,,,,,,"Czumaj, Galil, Gąsieniec, Park, Plandowski",1995,https://dl.acm.org/doi/pdf/10.1145/225058.225289,,,,,,,,O(log n),O(log n),1,,O(n log n),11,,,"n: length of text
m: length of pattern",,,,hypercube (MIMD?),700,,,,,,,,,0,,0,,0,1,O(n),10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,0.001,Single String Search,,569,,,,,,,,,"Qu, Zhang, Fang, Liu (parallelized Aho-Corasick algorithm)",2016,https://gvpress.com/journals/IJHIT/vol9_no3/4.pdf,,,,,,,,,,,,,,,,,,,,shared memory with message passing??,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,0.001,Single String Search,,570,,,,,,,,,"Alsaheel, Alqahtani, Alabdulatif",2013,"Analysis of parallel Boyer-Moore string search algorithm
AA Alsaheel, AH Alqahtani, AM Alabdulatif",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,1,Single String Search,Single String Search,571,,,,,,,,,"Alzoabi, Alosaimi, Bedaiwi",2013,https://ieeexplore.ieee.org/iel7/6601034/6618649/06618720.pdf,,,,,,,,O(n/k + m - 1),O(m),10,,O(n + m),10,,,"n: size of text
m: size of pattern
k: number of processors",,,,SIMD,200,,,,,,,,,0,,0,,0,1,k,0,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
22,String Search,0.001,Single String Search,,572,,,,,,,,,"Rasool, Khare (parallel KMP)",2012,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=c462464ab4c4b4f800f4a72f708015e23397f3f4,,,,,,,,O(n/p + n),O(n),10,,O(n),10,,,,,,,SIMD-SM,200,,,,,,,,,0,,0,,0,,p,0,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
23,Sequence Alignment,1,"Edit Distance, constant-size alphabet","Edit Distance, constant-size alphabet",573,,,1,1,,,,[https://search.proquest.com/openview/efa7264fa824ce7768c53ccdcc6d1458/1?pq-origsite=gscholar&cbl=666313 Apostolico et al. (1990)],Apostolico et al.,1990,https://search.proquest.com/openview/efa7264fa824ce7768c53ccdcc6d1458/1?pq-origsite=gscholar&cbl=666313,,,,,,,,O(log m log n),O(log m log n),2,https://search.proquest.com/openview/efa7264fa824ce7768c53ccdcc6d1458/1?pq-origsite=gscholar&cbl=666313,O(mn log n),21,https://search.proquest.com/openview/efa7264fa824ce7768c53ccdcc6d1458/1?pq-origsite=gscholar&cbl=666313,no,"m: length of the shorter string
n: length of the longer string",,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(mn/log m),19,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
23,Sequence Alignment,1,"Edit Distance, constant-size alphabet","Edit Distance, constant-size alphabet",574,,,1,1,,,,[https://search.proquest.com/openview/efa7264fa824ce7768c53ccdcc6d1458/1?pq-origsite=gscholar&cbl=666314 Apostolico et al. (1990)],Apostolico et al.,1990,https://search.proquest.com/openview/efa7264fa824ce7768c53ccdcc6d1458/1?pq-origsite=gscholar&cbl=666314,,,,,,,,O(log n (log log m)^2),O(log n (log log m)^2),1.15,https://search.proquest.com/openview/efa7264fa824ce7768c53ccdcc6d1458/1?pq-origsite=gscholar&cbl=666313,O(mn log n),21,https://search.proquest.com/openview/efa7264fa824ce7768c53ccdcc6d1458/1?pq-origsite=gscholar&cbl=666313,no,"m: length of the shorter string
n: length of the longer string",,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(mn/log log m),19.9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
23,Sequence Alignment,1,"Edit Distance, constant-size alphabet","Edit Distance, constant-size alphabet",575,,,1,1,,,,[https://kilthub.cmu.edu/articles/journal_contribution/A_fast_parallel_algorithm_to_determine_edit_distance/6587387/1 Mathies (1988)],Mathies,1988,https://kilthub.cmu.edu/articles/journal_contribution/A_fast_parallel_algorithm_to_determine_edit_distance/6587387/1,,,,,,,,O(log m log n),O(log m log n),2,https://kilthub.cmu.edu/articles/journal_contribution/A_fast_parallel_algorithm_to_determine_edit_distance/6587387/1,O(mn log m log n),22,https://kilthub.cmu.edu/articles/journal_contribution/A_fast_parallel_algorithm_to_determine_edit_distance/6587387/1,no,"m: length of the shorter string
n: length of the longer string",,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(mn),20,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
23,Sequence Alignment,0.001,"Edit Distance, constant-size alphabet",,576,,,,,,,,,"ZHANG, QIAO, LIU",2002,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1173568,,,,,,,,,,,,,,,,,,,,MPI (on a DAWNING 2000-I),700,,,,,,,,,,,,,,,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
25,Line Clipping,0.001,Convex Polygonal Window,Convex Polygonal Window,577,,,1,1,O(n/p)?,,,[https://dl.acm.org/doi/pdf/10.1145/357332.357333 Liang. Barsky (1984)],Liang. Barsky,1984,https://dl.acm.org/doi/pdf/10.1145/357332.357333,,,,,,,,O(n/p)?,O(1),0,,O(n)?,,,no,"n: number of lines
p: number of processors",n,,,CREW PRAM?,,,,,,,,,,0,,0,,0,1,p,,0,0,,"line clipping is the process of removing lines or portions of lines outside an area
 of interest. Typically; any line or part thereof which is outside of the viewing
 area is removed.",,,,,,,,,,,,,,,,,,,,,,,,,
25,Line Clipping,0.001,Convex Polygonal Window,Convex Polygonal Window,578,,,1,1,O(n/p)?,,,[https://open.library.ubc.ca/soa/cIRcle/collections/ubctheses/831/items/1.0096928 Tran (1986)],Tran,1986,https://open.library.ubc.ca/soa/cIRcle/collections/ubctheses/831/items/1.0096928,,,,,,,,O(n/p)?,O(1),0,,O(n)?,,,no,"n: number of lines
p: number of processors",n,,,SIMD,,,,,,,,,,0,,0,,0,1,p,,0,0,,"line clipping is the process of removing lines or portions of lines outside an area
 of interest. Typically; any line or part thereof which is outside of the viewing
 area is removed.",,,,,,,,,,,,,,,,,,,,,,,,,
25,Line Clipping,0.001,Convex Polygonal Window,Convex Polygonal Window,579,,,1,1,O(n/p)?,,,"[http://www.cs.engr.uky.edu/~cheng/PUBL/Paper_p_clip.pdf Cheng, Chung-Shang (2008)]","Cheng, Chung-Shang",2008,http://www.cs.engr.uky.edu/~cheng/PUBL/Paper_p_clip.pdf,,,,,,,,O(n/p)?,O(1),0,http://www.cs.engr.uky.edu/~cheng/PUBL/Paper_p_clip.pdf,O(n)?,,,no,"n: number of lines
p: number of processors",n,,,PIPA?,,,,,,,,,,0,,0,,0,1,p,,0,0,,"line clipping is the process of removing lines or portions of lines outside an area
 of interest. Typically; any line or part thereof which is outside of the viewing
 area is removed.",,,,,,,,,,,,,,,,,,,,,,,,,
25,Line Clipping,0.001,Convex Polygonal Window,Convex Polygonal Window,580,,,1,1,O(n/p)?,,,[https://link.springer.com/chapter/10.1007/978-3-030-86976-2_1 Skala (2021)],Skala,2021,https://link.springer.com/chapter/10.1007/978-3-030-86976-2_1,,,,,,,,O(n/p)?,O(1),0,,O(n),10,,no,"n: number of lines
p: number of processors",n,,,CREW PRAM?,,,,,,,,,,0,,0,,0,1,p,10,0,0,,"line clipping is the process of removing lines or portions of lines outside an area
 of interest. Typically; any line or part thereof which is outside of the viewing
 area is removed.",,,,,,,,,,,,,,,,,,,,,,,,,
27,Multiplication,0.001,Multiplication,,581,,,,,,,,,Chmielowiec,2013,https://link.springer.com/chapter/10.1007/978-94-007-6190-2_46,,,,,,,,,O(n log n + kn)?,,,O(kn log n + k^2n),,,,"integers as polynomials base R, n < R
n: degree of the polynomial
k: number of bits of the largest coefficient",,,,,,,,,,,,,,,,,,,,k,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
27,Multiplication,0.001,Multiplication,,582,,,,,,,,,Chmielowiec (existing FFT-based algorithm?),2013,https://link.springer.com/chapter/10.1007/978-94-007-6190-2_46,,,,,,,,,O(n log n log k)?,,https://link.springer.com/chapter/10.1007/978-94-007-6190-2_46,O((n log n)(k log k)),,https://link.springer.com/chapter/10.1007/978-94-007-6190-2_46,,"integers as polynomials base R, n < R
n: degree of the polynomial
k: number of bits of the largest coefficient",,,,,,,,,,,,,,,,,,,,k,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
27,Multiplication,1,Multiplication,Multiplication,583,,,,,,,,,"CESARI, MAEDER (parallel Karatsuba's)",1996,https://core.ac.uk/download/pdf/82467764.pdf,,,,,,,,,O(n),10,,O(n^{1+log 3}),26.7,,,n: length of the integers,,,,distributed message passing,700,,,,,,,,,0,,0,,0,1,n^log 3,16.27,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
27,Multiplication,1,Multiplication,Multiplication,584,,,,,,,,,"CESARI, MAEDER (parallel Karatsuba's)",1996,https://core.ac.uk/download/pdf/82467764.pdf,,,,,,,,,O(n log n),11,,O(n^2 log n),21,,,n: length of the integers,,,,distributed message passing,700,,,,,,,,,0,,0,,0,1,n,10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
27,Multiplication,0.001,Multiplication,,585,,,,,,,,,"Kuechlin, Lutz, Nevin ",1991,https://link.springer.com/chapter/10.1007/3-540-54522-0_109,,,,,,,,,,,,,,,,,,,,shared memory MIMD,300,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
27,Multiplication,1,Multiplication,Multiplication,586,,,,,,,,,"Sinha, Srimani",1988,https://dl.acm.org/doi/pdf/10.1145/322609.322777,,,,,,,,,O(log n),1,,O(n^2 log n),21,,,n: length of the integers,,,,MIMD with regular interconnection networks bet proc,700,,,,,,,,,0,,0,,0,1,O(n^2),20,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
27,Multiplication,0.001,Multiplication,,587,,,,,,,,,"Bunimov, Schimmler",2003,https://link.springer.com/chapter/10.1007/978-3-540-45209-6_127,,,,,,,,,O(log n),1,,O(n^2 / log n),19,,,n: length of the integers,,,,,,,,,,,,,,0,,0,,0,1,O(n^2/log^2 n),18,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
27,Multiplication,0.001,Multiplication,,588,,,,,,,,,"Tembhurne, Sathe",2014,https://www.researchgate.net/profile/Jitendra-Tembhurne/publication/268209735_Performance_Evaluation_of_Long_Integer_Multiplication_Using_OpenMP_and_MPI_on_Shared_Memory_Architecture/links/54642c250cf2837efdb34a9c/Performance-Evaluation-of-Long-Integer-Multiplication-Using-OpenMP-and-MPI-on-Shared-Memory-Architecture.pdf,,,,,,,,,,,,,,,,,,,,shared memory SIMD,200,,,,,,,,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
27,Multiplication,0.001,Multiplication,,589,,,,,,,,,"Singer, Saon",1996,https://www.sciencedirect.com/science/article/abs/pii/S1084804596900296,,,,,,,,,O(1)?,0,,O(N^2),20,,,N: length of the integers,,,,massively parallel,,,,,,,,,,,,,,,,,20,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
27,Multiplication,0.001,Multiplication,,590,,,,,,,,,"Yuen, Feng",1994,https://dl.acm.org/doi/pdf/10.1145/181587.181589,,,,,,,,,,,,,,,,,,,,shared memory,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
27,Multiplication,1,Multiplication,Multiplication,591,,,,,,,,,De Stefani (COPSIM),2010,https://arxiv.org/pdf/2009.14590,,,,,,,,,O(n),10,,O(n^2),20,,,n: length of the integers,,,,distributed memory,700,,,,,,,,,0,,0,,0,1,O(n),10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
27,Multiplication,1,Multiplication,Multiplication,592,,,,,,,,,De Stefani (COPK - Karatsuba),2010,https://arxiv.org/pdf/2009.14590,,,,,,,,,O(n^{log 3 -1}),6.27,,O(n^log 3),16.27,,,n: length of the integers,,,,distributed memory,700,,,,,,,,,0,,0,,0,1,O(n),10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
27,Multiplication,0.001,Multiplication,,593,,,,,,,,,Fagin,1990,https://www.researchgate.net/profile/Barry-Fagin/publication/3504216_Large_integer_multiplication_on_massively_parallel_processors/links/542c45d20cf277d58e8c7c05/Large-integer-multiplication-on-massively-parallel-processors.pdf,,,,,,,,,,,,,,,,,,,,connection machine SIMD,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
28,Maximum Cardinality Matching,1,Bipartite Graph MCM,Bipartite Graph MCM,594,,,1,1,O(n^1.5 log n),,,"[https://users.umiacs.umd.edu/~vishkin/TEACHING/4CLASS/SV82-maxflow.pdf Shiloach, Vishkin (1982)]","Shiloach, Vishkin",1982,https://users.umiacs.umd.edu/~vishkin/TEACHING/4CLASS/SV82-maxflow.pdf,,,,,,,,O(n^1.5 log n),O(n^1.5 log n),7.51,https://users.umiacs.umd.edu/~vishkin/TEACHING/4CLASS/SV82-maxflow.pdf,O(m*sqrt(n) log n),16.1,,no,"n: number of vertices
m: number of edges",n,,,CREW PRAM?,330,,,,,,,,,0,,0,,0,1,m/n,6,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
28,Maximum Cardinality Matching,1,Bipartite Graph MCM,Bipartite Graph MCM,595,,,1,1,O(n log n log log n),,,"[https://www.sciencedirect.com/science/article/pii/0020019087901931 Kim, Chwa (1987)]","Kim, Chwa",1987,https://www.sciencedirect.com/science/article/pii/0020019087901931,,,,,,,,O(n log n log log n),O(n log n log log n),6.11,https://www.sciencedirect.com/science/article/pii/0020019087901931,O(n^4 log log n),20.1,,no,"n: number of vertices
m: number of edges",n,,,CREW PRAM?,120,,,,,,,,,0,,0,,0,1,O(n^3/log n),15.95,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
28,Maximum Cardinality Matching,0.001,General Graph MCM,General Graph MCM,596,,,1,1,O(log^3 n),,,"[https://dl.acm.org/doi/10.1145/22145.22148 Karp, Upfal, Widgerson (1985)]","Karp, Upfal, Widgerson",1985,https://dl.acm.org/doi/10.1145/22145.22148,,,,,,,,O(log^3 n),O(log^3 n),3,https://dl.acm.org/doi/10.1145/22145.22148,O(n^6.5 log^3 n),35.3,,no,"n: number of vertices
m: number of edges",n,,,,,,,,,,,,,1,Las Vegas,0,,0,1,O(n^6.5),35,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
28,Maximum Cardinality Matching,1,General Graph MCM,General Graph MCM,597,,,1,1,O(log^3 n),,,[https://www.annualreviews.org/doi/pdf/10.1146/annurev.cs.01.060186.001213 Galil (1986)],Galil,1986,https://www.annualreviews.org/doi/pdf/10.1146/annurev.cs.01.060186.001213,,,,,,,,O(log^3 n),O(log^3 n),3,https://www.annualreviews.org/doi/pdf/10.1146/annurev.cs.01.060186.001213,O(n^(1+omega) log^3 n),,,no,"n: number of vertices
m: number of edges
omega: exponent on matrix multiplication complexity",n,,,CREW PRAM,120,,1,n: 1,O(1),Derived: dynamic programming and making use of Monge matrix properties,1,0,,1,Monte Carlo,0,,0,1,O(n^(1+omega)),,0,0,,,,,,,,,,,,,,,63,,,,,,,,,1,,,Combinatorics
28,Maximum Cardinality Matching,1,General Graph MCM,General Graph MCM,598,,,1,1,O(log^2 n),,,[https://www.annualreviews.org/doi/pdf/10.1146/annurev.cs.01.060186.001213 Galil (1986)],Galil,1986,https://www.annualreviews.org/doi/pdf/10.1146/annurev.cs.01.060186.001213,,,,,,,,O(log^2 n),O(log^2 n),2,https://www.annualreviews.org/doi/pdf/10.1146/annurev.cs.01.060186.001213,O(mn^(1+omega) log^3 n),,,no,"n: number of vertices
m: number of edges
omega: exponent on matrix multiplication complexity",n,,,CREW PRAM,120,,1,n: 1,O(1),Derived: dynamic programming and making use of Monge matrix properties,1,0,,1,Monte Carlo,0,,0,1,O(mn^(1+omega)),,0,0,,,,,,,,,,,,,,,63,,,,,,,,,1,,,Combinatorics
28,Maximum Cardinality Matching,1,General Graph MCM,General Graph MCM,599,,,1,1,,,,[https://ieeexplore.ieee.org/document/395918 Andrews et al. (1995)],Andrews et al.,1995,https://ieeexplore.ieee.org/document/395918,,,,,,,,O(log^3 n),O(log^3 n),3,https://ieeexplore.ieee.org/document/395918,O(n log n),6.1,https://ieeexplore.ieee.org/document/395918,no,n: number of intervals representing the graph,n,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,O(n/log^2 n),5.8,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
28,Maximum Cardinality Matching,1,General Graph MCM,General Graph MCM,600,,,1,1,,,,[https://ieeexplore.ieee.org/document/395918 Andrews et al. (1995)],Andrews et al.,1995,https://ieeexplore.ieee.org/document/395918,,,,,,,,O(log^3 n),O(log^3 n),3,https://ieeexplore.ieee.org/document/395918,O(n log^3 n),6.23,https://ieeexplore.ieee.org/document/395918,no,n: number of intervals representing the graph,n,,,n-Hypercube,700,,,,,,,,,0,,0,,0,1,O(n),6,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
28,Maximum Cardinality Matching,0.001,Bipartite Graph MCM,Bipartite Graph MCM,601,,,,,,,,[https://www.sciencedirect.com/science/article/pii/0743731584900042 Sahni et al. (1984)],Sahni et al.,1984,https://www.sciencedirect.com/science/article/pii/0743731584900042,,,,,,,,O(log^2 n),O(log^2 n),2,https://www.sciencedirect.com/science/article/pii/S0167819107001329,O(n log^2 n),6.2,https://www.sciencedirect.com/science/article/pii/S0167819107001329,no,,,,,PRAM,,,,,,,,,,0,,0,,0,1,O(n),6,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
28,Maximum Cardinality Matching,0.001,,,602,,,,,,,,,Pawagi et al.,1987,,,,,,,,,O(log^2 n),O(log^2 n),2,https://www.sciencedirect.com/science/article/pii/S0167819107001329,O(n log^2 n),6.2,https://www.sciencedirect.com/science/article/pii/S0167819107001329,no,,,,,PRAM,,,,,,,,,,0,,0,,0,1,O(n),6,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
31,SDD Systems Solver,1,Exact Laplacian Solver,Exact Laplacian Solver,603,,,1,1,,,,,Blelloch et al.,2011,https://www.cs.cmu.edu/afs/cs/user/glmiller/www/Publications/Papers/spaa31r-blelloch.pdf,,,,,,,,O(m^(1/3 + theta) log 1/epsilon),O(m^(1/3 + theta) log 1/epsilon),5.61,https://www.cs.cmu.edu/afs/cs/user/glmiller/www/Publications/Papers/spaa31r-blelloch.pdf,O(m polylog(n) log 1/epsilon),15,https://www.cs.cmu.edu/afs/cs/user/glmiller/www/Publications/Papers/spaa31r-blelloch.pdf,no,"m: number of nonzero entries (O(n^2))
nxn: size of matrix",,,,PRAM,100,,,,,,,,,0,,0,,0,1,,7.15,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
33,Generating Random Permutations,1,General Permutations,General Permutations,604,,,,,,,,[https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=4568176 Reif (1985)],Reif,1985,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=4568176,,,,,,,,O(log n),O(log n),1,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=4568176,O(n),10,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=4568176,no,n: number of elements to permute,,,,CRCW PRAM,130,,,,,,,,,1,,0,,0,1,O(n/log n),9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
33,Generating Random Permutations,1,General Permutations,General Permutations,605,,,,,,,,[https://epubs.siam.org/doi/10.1137/0218041 Rajasekaran et al. (1989)],Rajasekaran et al.,1989,https://epubs.siam.org/doi/10.1137/0218041,,,,,,,,O(log n/log log n),O(log n/log log n),0.9,https://link.springer.com/article/10.1007/PL00009206,O(n log n),11,https://link.springer.com/article/10.1007/PL00009206,no,n: number of elements to permute,,,,CRCW PRAM,130,,,,,,,,,1,,0,,0,1,O(n(log log n)^2/log n),9.1,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
33,Generating Random Permutations,1,General Permutations,General Permutations,606,,,,,,,,[https://link.springer.com/article/10.1007/PL00009206 Czumaj et al. (1998)],Czumaj et al.,1998,https://link.springer.com/article/10.1007/PL00009206,,,,,,,,O(log log n),O(log log n),0.1,https://link.springer.com/article/10.1007/PL00009206,O(n log log n),10.1,https://link.springer.com/article/10.1007/PL00009206,no,n: number of elements to permute,,,,CREW PRAM,120,,,,,,,,,1,,0,,0,1,O(n^(1 + 1/c * log log n)),10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
33,Generating Random Permutations,1,General Permutations,General Permutations,607,,,,,,,,[https://link.springer.com/article/10.1007/PL00009206 Czumaj et al. (1998)],Czumaj et al.,1998,https://link.springer.com/article/10.1007/PL00009206,,,,,,,,O(log n),O(log n),1,https://link.springer.com/article/10.1007/PL00009206,O(n log n),11,https://link.springer.com/article/10.1007/PL00009206,no,n: number of elements to permute,,,,EREW PRAM,110,,,,,,,,,1,,0,,0,1,O(n),10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
33,Generating Random Permutations,1,General Permutations,General Permutations,608,,,,,,,,[https://link.springer.com/chapter/10.1007/3-540-54233-7_151 Hagerup (1991)],Hagerup,1991,https://link.springer.com/chapter/10.1007/3-540-54233-7_151,,,,,,,,O(1),O(1),0,https://link.springer.com/chapter/10.1007/3-540-54233-7_151,O(n * polylog(n)),15,https://link.springer.com/chapter/10.1007/3-540-54233-7_151,no,n: number of elements to permute,,,,CRCW PRAM,130,,,,,,,,,1,,0,,0,1,O(n * polylog(n)),15,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
33,Generating Random Permutations,1,General Permutations,General Permutations,609,,,,,,,,[https://link.springer.com/chapter/10.1007/3-540-54233-7_152 Hagerup (1991)],Hagerup,1991,https://link.springer.com/chapter/10.1007/3-540-54233-7_152,,,,,,,,O(log*n),O(log*n),0.001,https://link.springer.com/chapter/10.1007/3-540-54233-7_151,O(n),10,https://link.springer.com/chapter/10.1007/3-540-54233-7_151,no,n: number of elements to permute,,,,CRCW PRAM,130,,,,,,,,,1,,0,,0,1,O(n/log*n),9.999,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
33,Generating Random Permutations,1,General Permutations,General Permutations,610,,,,,,,,[https://link.springer.com/chapter/10.1007/3-540-54233-7_153 Hagerup (1991)],Hagerup,1991,https://link.springer.com/chapter/10.1007/3-540-54233-7_153,,,,,,,,O(log^2 n),O(log^2 n),2,https://link.springer.com/chapter/10.1007/3-540-54233-7_152,O(n log n),11,https://link.springer.com/chapter/10.1007/3-540-54233-7_152,no,n: number of elements to permute,,,,EREW PRAM,110,,,,,,,,,1,,0,,0,1,O(n/log n),9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
33,Generating Random Permutations,1,General Permutations,General Permutations,611,,,,,,,,[https://link.springer.com/chapter/10.1007/3-540-54233-7_154 Hagerup (1991)],Hagerup,1991,https://link.springer.com/chapter/10.1007/3-540-54233-7_154,,,,,,,,O(log n),O(log n),1,https://link.springer.com/chapter/10.1007/3-540-54233-7_152,O(n log n),11,https://link.springer.com/chapter/10.1007/3-540-54233-7_152,no,n: number of elements to permute,,,,EREW PRAM,110,,,,,,,,,1,,0,,0,1,O(n),10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
33,Generating Random Permutations,1,General Permutations,General Permutations,612,,,,,,,,[https://ieeexplore.ieee.org/document/1676138 Kruskal (1983)],Kruskal,1983,https://ieeexplore.ieee.org/document/1676138,,,,,,,,O(log n log log n),O(log n log log n),1.1,https://link.springer.com/chapter/10.1007/3-540-54233-7_151,O(n log n),11,https://link.springer.com/chapter/10.1007/3-540-54233-7_151,no,n: number of elements to permute,,,,CREW PRAM,120,,,,,,,,,1,,0,,0,1,O(n/log log n),9.1,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
33,Generating Random Permutations,1,General Permutations,General Permutations,613,,,,,,,,[https://ieeexplore.ieee.org/document/63478 Berkman et al. (1989)],Berkman et al.,1989,https://ieeexplore.ieee.org/document/63478,,,,,,,,O(log n log log log n),O(log n log log log n),1.05,https://link.springer.com/chapter/10.1007/3-540-54233-7_151,O(n log n),11,https://link.springer.com/chapter/10.1007/3-540-54233-7_151,no,n: number of elements to permute,,,,CREW PRAM,120,,,,,,,,,1,,0,,0,1,O(n/log log log n),9.2,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
33,Generating Random Permutations,0.001,General Permutations,General Permutations,614,,,,,,,,[https://www.sciencedirect.com/science/article/pii/0304397595001980 Alonso et al. (1996)],Alonso et al.,1996,https://www.sciencedirect.com/science/article/pii/0304397595001980,,,,,,,,O(log^2 n),O(log^2 n),2,https://www.sciencedirect.com/science/article/pii/0304397595001980,O(n log^2 n),12,https://www.sciencedirect.com/science/article/pii/0304397595001980,no,n: number of elements to permute,,,,,,,,,,,,,,1,,0,,0,1,O(n),10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
33,Generating Random Permutations,1,General Permutations,General Permutations,615,,,,,,,,[https://dl.acm.org/doi/pdf/10.1145/103418.103453 Matias et al. (1991)],Matias et al.,1991,https://dl.acm.org/doi/pdf/10.1145/103418.103453,,,,,,,,O(log*n),O(log*n),0.001,https://link.springer.com/chapter/10.1007/3-540-54233-7_151,O(n),10,https://link.springer.com/chapter/10.1007/3-540-54233-7_151,no,n: number of elements to permute,,,,CRCW PRAM,130,,,,,,,,,1,,0,,0,1,O(n),9.999,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
34,Convex Optimization (Non-linear),0.001,Convex Optimization (Non-linear),,616,,,,,,,,,"Han, Lou",1988,https://epubs.siam.org/doi/pdf/10.1137/0326019,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,m,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
34,Convex Optimization (Non-linear),0.001,Convex Optimization (Non-linear),,617,,,,,,,,,"Recht, Re, Wright, Niu (parallel stochastic gradient descent)",2011,https://proceedings.neurips.cc/paper_files/paper/2011/file/218a0aefd1d1a4be65601cc6ddc1520e-Paper.pdf,,,,,,,,,,,,,,,,,,,,shared memory (CRCW?),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
34,Convex Optimization (Non-linear),0.001,Convex Optimization (Non-linear),,618,,,,,,,,,"Necoara, Clipici (Parallel Coordinate Descent Method)",2013,https://arxiv.org/pdf/1302.3092.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
34,Convex Optimization (Non-linear),0.001,Convex Optimization (Non-linear),,619,,,,,,,,,"Cevher, Becker, Schmidt (Consensus ADMM - first order mehtod)",2014,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6879615,,,,,,,,O(n*n/m),O(n*n/m),10,,O(n^2),20,,,,,,,,,,,,,,,,,,,0,,0,1,m <= n,10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
34,Convex Optimization (Non-linear),0.001,Convex Optimization (Non-linear),,620,,,,,,,,,"Woodworth, Wang, Smith, McMahan, Srebro",2018,https://proceedings.neurips.cc/paper_files/paper/2018/file/3ec27c2cff04bc5fd2586ca36c62044e-Paper.pdf,,,,,,,,,,,,,,,,,,,,graph-based oracle model,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
34,Convex Optimization (Non-linear),0.001,Convex Optimization (Non-linear),,621,,,,,,,,,"Bubeck, Jiang, Lee, Li, Sidford",2019,https://proceedings.neurips.cc/paper_files/paper/2019/file/3c0cd9bcd0686e8bc0a9047eae120cc5-Paper.pdf,,,,,,,,,O(d^{1/3}(LR/\epsilon)^{2/3})*polylog(d)*polylog(\epsilon)*polylog(L)*polylog(R)*polylog(v^{-1}),,,O(d^{4/3}(LR/\epsilon)^{8/3})*polylog(d)*polylog(\epsilon)*polylog(L)*polylog(R)*polylog(v^{-1}),,,,,,,,graph-based oracle model,,,,,,,,,,1,probability 1-v,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
34,Convex Optimization (Non-linear),0.001,Convex Optimization (Non-linear),,622,,,,,,,,,"Carmon, Jambulapati, Jin, Lee, Liu, Sidford, Tian",2023,https://arxiv.org/pdf/2301.00457.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
37,All Permutations,1,All Permutations,All Permutations,623,,,,,O(n!/k * n),,,[https://academic.oup.com/comjnl/article/30/5/433/366802 Akl (1987)],Akl,1987,https://academic.oup.com/comjnl/article/30/5/433/366802,,,,,,,,O(n!/k * n),O(n),10,https://academic.oup.com/comjnl/article/30/5/433/366802,O(n! * n),9001,https://link.springer.com/chapter/10.1007/3-540-54233-7_151,no,"n: number of elements to permute
k: number of processors",,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(k),9000,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Optimal Binary Search Trees,1,OBST,OBST,624,,,,,O(n^(1-eps) log n),,,"[https://link.springer.com/chapter/10.1007/3-540-58338-6_92 Karpinski, Rytter (1994)]","Karpinski, Rytter",1994,https://link.springer.com/chapter/10.1007/3-540-58338-6_92,,,,,,,,O(n^(1-eps) log n),O(n^(1-eps) log n),8.31,https://link.springer.com/chapter/10.1007/3-540-58338-6_92,O(n^(2+2eps)),25.02,https://link.springer.com/chapter/10.1007/3-540-58338-6_92,yes,"n: number of elements
eps: processor parameter; 0 < eps ≤ 1/2",n,,,CREW PRAM?,120,,,,,,,,,0,,0,,0,1,n^(1+3eps)/log n?,15.019,0,0,,,,,Looks like CREW PRAM to me.,,,,,,,,,,,,,,,,,,,,,,
38,Optimal Binary Search Trees,1,OBST,OBST,625,,,,,O(n^2/p + p)?,,,"[https://ieeexplore.ieee.org/abstract/document/4492658 Kechid, Myoupo (2008)]","Kechid, Myoupo",2008,https://ieeexplore.ieee.org/abstract/document/4492658,,,,,,,,O(n^2/p + p)?,O(n)?,10,,O(n^2),20,,yes?,"n: number of elements
p: number of processors",n,,,CGM,400,,,,,,,,,0,,0,,0,1,p,10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Optimal Binary Search Trees,1,OBST,OBST,626,,,,,O(n^2/p + sqrt(p))?,,,"[https://www.researchgate.net/profile/Vianney-Tchendji-2/publication/264813372_Parallel_dynamic_programming_for_solving_the_optimal_search_binary_tree_problem_on_CGM/links/55fab12b08aeba1d9f37481a/Parallel-dynamic-programming-for-solving-the-optimal-search-binary-tree-problem-on-CGM.pdf Myoupo, Tchendji (2014)]","Myoupo, Tchendji",2014,https://www.researchgate.net/profile/Vianney-Tchendji-2/publication/264813372_Parallel_dynamic_programming_for_solving_the_optimal_search_binary_tree_problem_on_CGM/links/55fab12b08aeba1d9f37481a/Parallel-dynamic-programming-for-solving-the-optimal-search-binary-tree-problem-on-CGM.pdf,,,,,,,,O(n^2/p + sqrt(p))?,O(n^(2/3))?,7.2,,O(n^2),20,,yes?,"n: number of elements
p: number of processors",n,,,CGM,400,,,,,,,,,0,,0,,0,1,p,15.4,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Optimal Binary Search Trees,1,OBST,OBST,627,,,,,O(n^2/p + sqrt(p))?,,,"[https://link.springer.com/chapter/10.1007/978-3-319-32467-8_57 Tchendji, Myoupo, Dequen (2016)]","Tchendji, Myoupo, Dequen",2016,https://link.springer.com/chapter/10.1007/978-3-319-32467-8_57,,,,,,,,O(n^2/p + sqrt(p))?,O(n^(2/3))?,7.2,,O(n^2),20,,yes?,"n: number of elements
p: number of processors",n,,,CGM,400,,,,,,,,,0,,0,,0,1,p,15.4,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Optimal Binary Search Trees,1,OBST,OBST,628,,,,,"O(n^2/g * R(p, g))",,,"[https://www.igi-global.com/article/high-performance-cgm-based-parallel-algorithms-for-the-optimal-binary-search-tree-problem/172505 Tchendji, Myoupo, Dequen (2016)]","Tchendji, Myoupo, Dequen",2016,https://www.igi-global.com/article/high-performance-cgm-based-parallel-algorithms-for-the-optimal-binary-search-tree-problem/172505,,,,,,,,"O(n^2/g * R(p, g))",O(n)?,10,,O(n^2),20,,no,"n: number of elements
p: number of processors
g: model granularity
R(p, g): rounds parameter?",n,,,CGM,400,,,,,,,,,0,,0,,0,1,p,10,0,0,https://d1wqtxts1xzle7.cloudfront.net/53364630/High-Performance-CGM-based-Parallel-Algorithms-for-the-Optimal-Binary-Search-Tree-Problem-libre.pdf?1496389978=&response-content-disposition=inline%3B+filename%3DHigh_Performance_CGM_based_Parallel_Algo.pdf&Expires=1702968021&Signature=gUtaiu6VGr1ckVS6qS01vr5x0ceZgGGCCasdUYHmeOwlHIBJ9fJfACNut6H1nlRkdpY-0d0rzHnF29RrLt5Rhnrn-XbTCm9FZuAyxI3sm50Kwb4xPFtTJuPD85yiteCBudDVmvEho1wed~gnJvArkzcfvhPy1oF8BtiWhMGaXozCdDEUCVCS1TwVKJE1fq2CgOBbd-q0LzNVEh-o9KDFYI8iUw5IfOSjXyT8eNJd0yY-vWP3JRdIjamVgwjqegb~8CrItueBBPj5egdsrkr3m0JyYjy-SnG7KYtdXp7SPav4mzbzSh-CLvmvhTHhXwz4iZi7vztX-kq7-kkwKd7CLA__&Key-Pair-Id=APKAJLOHF5GGSLRBV4ZA,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Optimal Binary Search Trees,1,OBST,OBST,629,,,,,O(n^2/p + k*sqrt(p))?,,,"[https://link.springer.com/article/10.1007/s41019-019-0093-9 Tchendji, Zeutouo (2019)]","Tchendji, Zeutouo",2019,https://link.springer.com/article/10.1007/s41019-019-0093-9,,,,,,,,O(n^2/p + k*sqrt(p))?,O(n^(2/3))?,7.2,,O(n^2),20,,no,"n: number of elements
p: number of processors
k: integer parameter (for partitioning technique in algorithm)",n,,,CGM,400,,,,,,,,,0,,0,,0,1,p,15.4,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Optimal Binary Search Trees,1,OBST,OBST,630,,,,,O(n^2/sqrt(p) + k*sqrt(p))?,,,"[https://www.tandfonline.com/doi/abs/10.1080/17445760.2022.2102168 Zeutouo, Tchendji, Myoupo (2022)]","Zeutouo, Tchendji, Myoupo",2022,https://www.tandfonline.com/doi/abs/10.1080/17445760.2022.2102168,,,,,,,,O(n^2/sqrt(p) + k*sqrt(p))?,O(n)?,10,,O(n^2),20,,no,"n: number of elements
p: number of processors
k: integer parameter (for partitioning technique in algorithm)",n,,,CGM,400,,,,,,,,,0,,0,,0,1,p,10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
39,Nash Equilibria,1,2-Player Nash Equilibria,2-Player,631,,,1,1,,,,,Parallel Support Enumeration,2008,https://ieeexplore.ieee.org/document/4724254,,,,,,,,O(n^3*4^n/p),O(n^3),16,derived,O(n^3*4^n),951.5,derived,,n: rows and columns of the payoff matrix,,,,MPI,700,,,,,,,,,,,,,,,,950,,,,,Computing Equilibria in Bimatrix Games by Parallel Support Enumeration,Jonathan Widger and Daniel Grosu,,,,,,,,,,,,,,,,,,,,,,,
39,Nash Equilibria,0.001,n-Player Nash Equilibria,n-Player,632,,,1,1,,,,,Parallel Support Enumeration,2009,https://ieeexplore.ieee.org/document/5283001,,,,,,,,O(nk^{k+1}/p),,,,,,,,"n: number of players
k: number of pure strategies per player",,,,MPI,700,,,,,,,,,,,,,,,,,,,,,Parallel Computation of Nash Equilibria in N-Player Games,Jonathan Widger; Daniel Grosu,,,,,,,,,,,,,,,,,,,,,,,
39,Nash Equilibria,0.001,2-Player Nash Equilibria,2-Player,633,,,1,1,,,,,Parallel Vertex Enumeration,2009,https://ieeexplore.ieee.org/document/5361945,,,,,,,,,,,,,,,,,,,,master-worker model,700,,,,,,,,,,,,,,,,,,,,,Computing Equilibria in Bimatrix Games by Parallel Vertex Enumeration,Jonathan Widger and Daniel Grosu,,,,,,,,,,,,,,,,,,,,,,,
40,Maximum-Weight Matching,0.001,Bipartite Maximum-Weight Matching,Bipartite Maximum-Weight Matching,634,,,1,1,O(n/w),,,"[https://www.sciencedirect.com/science/article/abs/pii/S0020019005003108 Fayyazi, Kaeli, Meleis (2006)]","Fayyazi, Kaeli, Meleis",2006,https://www.sciencedirect.com/science/article/abs/pii/S0020019005003108,,,,0,0,2.6,n: 2.6,O(n/w),O(1)??,6,,O(n^6)?,30,,no,"n: number of vertices
m: number of edges
w: processor parameter; w≥1",n,,,CRCW PRAM?,130,,1,n: 1,O(1),Derived: dynamic programming and making use of Monge matrix properties,1,0,,0,,0,,0,1,"O(n^(max(2w, 4+w)))",26.5,0,0,,"In computer science, the maximum weight matching problem is the problem of finding, in a weighted graph, a matching in which the sum of weights is maximized.",,,,,,,,,,,,,63,,,,,,,,,1,,,Combinatorics
40,Maximum-Weight Matching,1,General Maximum-Weight Matching,General Maximum-Weight Matching,635,,,1,1,O(n^3/p + n^2 log n),,,"[https://ieeexplore.ieee.org/abstract/document/143503 Osiakwan, Akl (1990)]","Osiakwan, Akl",1990,https://ieeexplore.ieee.org/abstract/document/143503,,,,0,0,2.6,n: 2.6,O(n^3/p + n^2 log n),O(n^2 log n),11,https://ieeexplore.ieee.org/abstract/document/143503,O(n^3),16,https://ieeexplore.ieee.org/abstract/document/143503,yes,"n: number of vertices
m: number of edges
p: number of processors; p≤n",n,,,EREW PRAM,110,,1,n: 1,O(1),Derived: dynamic programming and making use of Monge matrix properties,1,0,,0,,0,,0,1,p,9,0,0,,"In computer science, the maximum weight matching problem is the problem of finding, in a weighted graph, a matching in which the sum of weights is maximized.",,,,,,,,,,,,,63,,,,,,,,,1,,,Combinatorics
40,Maximum-Weight Matching,0.001,General Maximum-Weight Matching,General Maximum-Weight Matching,636,,,1,1,,,,"[https://dspace.jaist.ac.jp/dspace/bitstream/10119/4915/1/C3966.pdf Uehara, Chen (2000)]","Uehara, Chen",2000,https://dspace.jaist.ac.jp/dspace/bitstream/10119/4915/1/C3966.pdf,,,,,,,,,,,,,,,,"n: number of vertices
m: number of edges",n,,,,,,1,n: 1,O(1),Derived: dynamic programming and making use of Monge matrix properties,1,0,,0,,0,,0,1,,,0,0,,"In computer science, the maximum weight matching problem is the problem of finding, in a weighted graph, a matching in which the sum of weights is maximized.",,,,,,,,,,,,,63,,,,,,,,,1,,,Combinatorics
41,Constructing Eulerian Trails in a Graph,1,Constructing Eulerian Trails in a Graph,Constructing Eulerian Trails in a Graph,637,,,1,1,O(log V),,,"[https://www.sciencedirect.com/science/article/pii/0022000084900035 Atallah, Vishkin (1984)]","Atallah, Vishkin",1984,https://www.sciencedirect.com/science/article/pii/0022000084900035,,,,,,,,O(log V),O(log V),1,https://www.sciencedirect.com/science/article/pii/0022000084900035,O(E log V),11,,no,"V: number of vertices
E: number of edges",V,,,CRCW PRAM,130,,#N/A,n: 1,O(1),Derived: dynamic programming and making use of Monge matrix properties,1,0,,0,,0,,0,1,O(E),10,0,0,,"In graph theory, an Eulerian trail (or Eulerian path) is a trail in a finite graph that visits every edge exactly once (allowing for revisiting vertices). Similarly, an Eulerian circuit or Eulerian cycle is an Eulerian trail that starts and ends on the same vertex.",,,,,,,,,,,,,63,,,,,,,,,1,,,Combinatorics
41,Constructing Eulerian Trails in a Graph,1,Constructing Eulerian Trails in a Graph,Constructing Eulerian Trails in a Graph,638,,,1,1,O(log V),,,"[https://dl.acm.org/doi/abs/10.1145/800057.808688 Awerbuch, Israeli, Shiloach (1984)]","Awerbuch, Israeli, Shiloach",1984,https://dl.acm.org/doi/abs/10.1145/800057.808688,,,,,,,,O(log V),O(log V),1,https://dl.acm.org/doi/abs/10.1145/800057.808688,O(E log V),11,,no,"V: number of vertices
E: number of edges",V,,,CRCW PRAM (ARBITRARY),131,,#N/A,n: 1,O(1),Derived: dynamic programming and making use of Monge matrix properties,1,0,,0,,0,,0,1,O(E),10,0,0,,"In graph theory, an Eulerian trail (or Eulerian path) is a trail in a finite graph that visits every edge exactly once (allowing for revisiting vertices). Similarly, an Eulerian circuit or Eulerian cycle is an Eulerian trail that starts and ends on the same vertex.",,,,,,,,,,,,,63,,,,,,,,,1,,,Combinatorics
41,Constructing Eulerian Trails in a Graph,1,Constructing Eulerian Trails in a Graph,Constructing Eulerian Trails in a Graph,639,,,1,1,O(log^2 V),,,"[https://www.worldscientific.com/doi/abs/10.1142/S0129626493000265 Caceres, Deo, Sastry, Szwarcfiter (1993)]","Caceres, Deo, Sastry, Szwarcfiter",1993,https://www.worldscientific.com/doi/abs/10.1142/S0129626493000265,,,,,,,,O(log^2 V),O(log^2 V),2,,O(E log V),11,,no,"V: number of vertices
E: number of edges",V,,,CREW PRAM,120,,#N/A,n: 1,O(1),Derived: dynamic programming and making use of Monge matrix properties,1,0,,0,,0,,0,1,O(E/log V),9,0,0,,"In graph theory, an Eulerian trail (or Eulerian path) is a trail in a finite graph that visits every edge exactly once (allowing for revisiting vertices). Similarly, an Eulerian circuit or Eulerian cycle is an Eulerian trail that starts and ends on the same vertex.",,,,,,,,,,,,,63,,,,,,,,,1,,,Combinatorics
41,Constructing Eulerian Trails in a Graph,1,Constructing Eulerian Trails in a Graph,Constructing Eulerian Trails in a Graph,640,,,1,1,O(log V),,,"[https://www.osti.gov/etdeweb/biblio/20142318 Park, Ryu (1999)]","Park, Ryu",1999,https://www.osti.gov/etdeweb/biblio/20142318,,,,,,,,O(log V),O(log V),1,https://www.osti.gov/etdeweb/biblio/20142318,O(E log V),11,,no,"V: number of vertices
E: number of edges",V,,,Priority CRCW PRAM,133,,#N/A,n: 1,O(1),Derived: dynamic programming and making use of Monge matrix properties,1,0,,1,Las Vegas,0,,0,1,O(E),10,0,0,,"In graph theory, an Eulerian trail (or Eulerian path) is a trail in a finite graph that visits every edge exactly once (allowing for revisiting vertices). Similarly, an Eulerian circuit or Eulerian cycle is an Eulerian trail that starts and ends on the same vertex.",,,,,,,,,,,,,63,,,,,,,,,1,,,Combinatorics
41,Constructing Eulerian Trails in a Graph,0.001,Constructing Eulerian Trails in a Graph,Constructing Eulerian Trails in a Graph,641,,,1,1,,,,[https://onlinelibrary.wiley.com/doi/abs/10.1002/int.10061 Tambouratzis (2002)],Tambouratzis,2002,https://onlinelibrary.wiley.com/doi/abs/10.1002/int.10061,,,,,,,,,,,,,,,no,"V: number of vertices
E: number of edges",V,,,,,,#N/A,n: 1,O(1),Derived: dynamic programming and making use of Monge matrix properties,1,0,,0,,0,,0,1,,,0,0,,"In graph theory, an Eulerian trail (or Eulerian path) is a trail in a finite graph that visits every edge exactly once (allowing for revisiting vertices). Similarly, an Eulerian circuit or Eulerian cycle is an Eulerian trail that starts and ends on the same vertex.",,,,,,,,,,,,,63,,,,,,,,,1,,,Combinatorics
41,Constructing Eulerian Trails in a Graph,1,Constructing Eulerian Trails in a Graph,Constructing Eulerian Trails in a Graph,642,,,1,1,O((E log p)/p)?,,,"[https://ieeexplore.ieee.org/document/1250336 Caceres, Nasu (2003)]","Caceres, Nasu",2003,https://ieeexplore.ieee.org/document/1250336,,,,,,,,O((E log p)/p)?,O(log V),1,https://ieeexplore.ieee.org/document/1250336,O(E log p),10,,no,"V: number of vertices
E: number of edges
p: number of processors",V,,,BSP,400,,#N/A,n: 1,O(1),Derived: dynamic programming and making use of Monge matrix properties,1,0,,0,,0,,0,1,p,9,0,0,,"In graph theory, an Eulerian trail (or Eulerian path) is a trail in a finite graph that visits every edge exactly once (allowing for revisiting vertices). Similarly, an Eulerian circuit or Eulerian cycle is an Eulerian trail that starts and ends on the same vertex.",,,,,,,,,,,,,63,,,,,,,,,1,,,Combinatorics
42,Discrete Fourier Transform,0.001,Discrete Fourier Transform,Discrete Fourier Transform,643,,,1,1,O(log n)?,,,[https://dl.acm.org/doi/10.1145/321450.321457 Pease (1968)],Pease,1968,https://dl.acm.org/doi/10.1145/321450.321457,,,,,,,,O(log n)?,O(log n)?,1,,O(n log n)?,11,,no,$n$: length of the input data set,n,,,CREW PRAM?,700,,,,,,,,,0,,0,,0,1,n,10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
42,Discrete Fourier Transform,1,Discrete Fourier Transform,Discrete Fourier Transform,644,,,1,1,O((n/p) log n)?,,,"[https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1676943 Norton, Silberger (1987)]","Norton, Silberger",1987,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1676943,,,,,,,,O((n/p) log n)?,O(log n)?,1,,O(n log n)?,11,,no,"$n$: length of the input data set
p: number of processors",n,,,CRCW MIMD-TC,330,,,,,,,,,0,,0,,0,1,p,10,0,0,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=1676943&tag=1,,,,,,,,,,,,,,,,,,,,,,,,,,
42,Discrete Fourier Transform,0.001,Discrete Fourier Transform,Discrete Fourier Transform,645,,,1,1,O(log n)?,,,[https://www.sciencedirect.com/science/article/pii/0167819187900184 Swarztrauber (1987)],Swarztrauber,1987,https://www.sciencedirect.com/science/article/pii/0167819187900184,,,,,,,,O(log n)?,O(log n)?,1,,O(n log n)?,11,,no,$n$: length of the input data set,n,,,,,,,,,,,,,0,,0,,0,1,,10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
42,Discrete Fourier Transform,1,Discrete Fourier Transform,Discrete Fourier Transform,646,,,1,1,O((n/p) log n),,,"[https://epubs.siam.org/doi/abs/10.1137/S1064827597316266 Edelman, McCorquodale, Toledo [Algorithm 1] (1998)]","Edelman, McCorquodale, Toledo [Algorithm 1]",1998,https://epubs.siam.org/doi/abs/10.1137/S1064827597316266,,,,,,,,O((n/p) log n),O(log n),1,,O(n log n),11,,no,"$n$: length of the input data set
p: number of processors",n,,, distributed-memory model,700,,,,,,,,,0,,0,,0,1,p,10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
42,Discrete Fourier Transform,1,Discrete Fourier Transform,Discrete Fourier Transform,647,,,1,1,O((n/p) log n),,,"[https://epubs.siam.org/doi/abs/10.1137/S1064827597316266 Edelman, McCorquodale, Toledo [Algorithm 2] (1998)]","Edelman, McCorquodale, Toledo [Algorithm 2]",1998,https://epubs.siam.org/doi/abs/10.1137/S1064827597316266,,,,,,,,O((n/p) log n),O(log n),1,,O(n log n),11,,no,"$n$: length of the input data set
p: number of processors",n,,, distributed-memory model,700,,,,,,,,,0,,0,,0,1,p,10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
42,Discrete Fourier Transform,0.001,Discrete Fourier Transform,Discrete Fourier Transform,648,,,1,1,O((n/p) log n)?,,,"[https://books.google.com/books?hl=en&lr=&id=30S3kRiX4xgC&oi=fnd&pg=IA1&dq=Discrete+Fourier+transform+parallel+algorithms&ots=uIlwuK8-RR&sig=MdNFN1FIfgCaikT01d1iE2uUlJ4#v=onepage&q=Discrete%20Fourier%20transform%20parallel%20algorithms&f=false Chu, George (1999)]","Chu, George",1999,https://books.google.com/books?hl=en&lr=&id=30S3kRiX4xgC&oi=fnd&pg=IA1&dq=Discrete+Fourier+transform+parallel+algorithms&ots=uIlwuK8-RR&sig=MdNFN1FIfgCaikT01d1iE2uUlJ4#v=onepage&q=Discrete%20Fourier%20transform%20parallel%20algorithms&f=false,,,,,,,,O((n/p) log n)?,O(log n)?,1,,O(n log n)?,11,,no,"$n$: length of the input data set
p: number of processors",n,,,,,,,,,,,,,0,,0,,0,1,p,10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
42,Discrete Fourier Transform,1,Discrete Fourier Transform,Discrete Fourier Transform,649,,,1,1,O((n/p) log n),,,"[https://ieeexplore.ieee.org/abstract/document/1578995 Cui-xiang, Guo-qiang, Ming-he (2005)]","Cui-xiang, Guo-qiang, Ming-he",2005,https://ieeexplore.ieee.org/abstract/document/1578995,,,,,,,,O((n/p) log n),O(log n),1,,O(n log n),11,,no,"$n$: length of the input data set
p: number of processors",n,,,distributed memory,700,,,,,,,,,0,,0,,0,1,p,10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
43,Line Drawing,1,Line Drawing,Single Line Drawing,650,,,1,1,O(n/p)?,,,[https://ieeexplore.ieee.org/abstract/document/59037 Pang (1990)],Pang,1990,https://ieeexplore.ieee.org/abstract/document/59037,,,,,,,,O(n/p)?,O(1)?,0,,O(n),10,,no,"n: number of pixels the line goes through
p: number of processors",n,,,SIMD,700,,,,,,,,,0,,0,,0,1,p,10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
43,Line Drawing,1,Line Drawing,Single Line Drawing,651,,,1,1,O(n/p),,,[https://ieeexplore.ieee.org/document/59038 Wright (1990)],Wright,1990,https://ieeexplore.ieee.org/document/59038,,,,,,,,O(n/p),O(1),0,,O(n),10,,no,"n: number of pixels the line goes through
p: number of processors",n,,,MIMD,300,,,,,,,,,0,,0,,0,1,p,10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
43,Line Drawing,1,Line Drawing,Single Line Drawing,652,,,1,1,O(n/p)?,,,"[https://link.springer.com/chapter/10.1007/3-540-56346-6_34 Graham, Iyengar, Zheng (1992)]","Graham, Iyengar, Zheng",1992,https://link.springer.com/chapter/10.1007/3-540-56346-6_34,,,,,,,,O(n/p)?,O(1)?,0,,O(n),10,,no,"n: number of pixels the line goes through
p: number of processors",n,,,MIMD,300,,,,,,,,,0,,0,,0,1,p,10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
43,Line Drawing,0.001,Line Drawing,,653,,,1,1,,,,"[https://ieeexplore.ieee.org/abstract/document/874642 Marti, Velasco (2000)]","Marti, Velasco",2000,https://ieeexplore.ieee.org/abstract/document/874642,,,,,,,,,,,,,,,,n: number of pixels the line goes through,n,,,Memory-Processor Array?,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
44,Polygon Clipping,1,Polygon Clipping with Arbitrary Clipping Polygon,Polygon Clipping with Arbitrary Clipping Polygon,654,,,,,,,,,"Puri, Prasad",2014,https://ieeexplore.ieee.org/abstract/document/6957233,,,,,,,,$O((n+k+k')\log{n+k+k'}/p)$,$O(\log{n})$,1,,$(n+k+k')\log{n+k+k'}$,,,,"""n: number of vertices
k: number of edge intersections
k': additional temporary vertices
p <= O(n+k+k'): number of processors""",,,,CREW PRAM,120,,,,,,,,,,,,,,1,$p$,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
44,Polygon Clipping,0.001,Polygon Clipping with Arbitrary Clipping Polygon,Polygon Clipping with Arbitrary Clipping Polygon,655,,,,,,,,,"Schneider, Welzen",1998,https://ieeexplore.ieee.org/abstract/document/722301,,,,,,,,,,,,,,,,,,,,SIMD,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
44,Polygon Clipping,1,Polygon Clipping with Arbitrary Clipping Polygon,Polygon Clipping with Arbitrary Clipping Polygon,656,,,,,,,,,"Theoharis, Page (1)",1989,https://onlinelibrary.wiley.com/doi/abs/10.1111/j.1467-8659.1989.tb00463.x?casa_token=8HHV2fLuoPYAAAAA:Z_JlTaYv_FkkynsDpcMJuLHGXAPke7KQwJ3SPOlehudDHF-2cWPgFMdMkwIC05sctM4UEz1_BZiiTg,,,,,,,,$(P+6)t_{clip.one.plane}$,$(P+6)t_{clip.one.plane}$,,,$O(Pt_{clip.one.plane})$,,,,"$P$: number of polygons
$t_{clip.one.plane}$: amount of time taken to
“fill” the pipeline of 6 clipping stages and it can be ignored if P is sufficiently large",,,,MIMD,700,,,,,,,,,0,,0,,0,1,6,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
44,Polygon Clipping,1,Polygon Clipping with Arbitrary Clipping Polygon,Polygon Clipping with Arbitrary Clipping Polygon,657,,,,,,,,,"Theoharis, Page (2)",1989,https://onlinelibrary.wiley.com/doi/abs/10.1111/j.1467-8659.1989.tb00463.x?casa_token=8HHV2fLuoPYAAAAA:Z_JlTaYv_FkkynsDpcMJuLHGXAPke7KQwJ3SPOlehudDHF-2cWPgFMdMkwIC05sctM4UEz1_BZiiTg,,,,,,,,$6 \lceil P/n^2 \rceil t_{clip.one.plane}$,$6 \lceil P/n^2 \rceil t_{clip.one.plane}$,,,$O(Pt_{clip.one.plane})$,,,,"$P$: number of polygons
$t_{clip.one.plane}$: amount of time taken to
“fill” the pipeline of 6 clipping stages and it can be ignored if P is sufficiently large
$n^2$: number of processors",,,,SIMD,700,,,,,,,,,0,,0,,0,1,$n^2$,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
44,Polygon Clipping,1,Polygon Clipping with Arbitrary Clipping Polygon,Polygon Clipping with Arbitrary Clipping Polygon,658,,,,,,,,,Narayanaswami,1996,https://link.springer.com/article/10.1007/BF01725102,,,,,,,,$O(n/p)$,$O(1)$ ?,0,,$O(n)$,10,,,"n: number of vertices
p: number of processors",,,,"CREW PRAM, SIMD",120,,,,,,,,,,,,,,1,$p$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
44,Polygon Clipping,1,Polygon Clipping with Arbitrary Clipping Polygon,Polygon Clipping with Arbitrary Clipping Polygon,659,,,,,,,,,"Ashan, Puri, Prasad",2023,https://www.cs.mu.edu/~satish/papers/GH_GPU_Camera_ready.pdf,,,,,,,,$O(\log{n})$,$O(\log{n})$,1,,$O(\log{n}(n+k))$,11,,,"""n: number of vertices
k: number of edge intersections""",,,,CREW PRAM,120,,,,,,,,,,,,,,1,$O(n+k)$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
44,Polygon Clipping,0,Polygon Clipping with Arbitrary Clipping Polygon,,660,,,,,,,,,"Amor, Sanjurjo, Padron, Doallo",2005,https://www.inderscienceonline.com/doi/abs/10.1504/IJHPCN.2004.007565,,,,,,,,,,,,,,,,,,,,distributed memory,700,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
47,Eigenvalues (Iterative Methods),1,,symmetric eigenvalue problem,661,,,,,,,,,"Kuck, Sameh (Jacobi's method)",1971,https://apps.dtic.mil/sti/pdfs/AD0737292.pdf,,,,,,,,$O( n^3 / p + n^2 / p^{1/2} + n )$,$\Theta( n )$,6,,$O( n^3 )$,16,,,P_E x P_E matrix,,,,massively parallel ? (based on ILLAC mention?),700,,,,,,,,,,,,,,1,p,10,,,,,,,"They do seem to compute Eigenvalues. Jacobi's method computes Eigenvalues directly (ref: bottom of page 7 and top of page 8 in Section 3.1). While it's true that with Householder's method they do tridiagonalization only, but once the tridiagonal matrix is obtained, one can find its Eigenvalues using the QR algorithm they describe in Section 5 (ref: the bottom paragraph of page 19 in Section 4.1). I have derived the following work, span, and parallel running time of the algorithms given in this paper (but I could not verify them very carefully given the limited time). Jacobi's method: parallel running time, T_p( n ) = O( n^3 / p + n^2 / p^{1/2} + n ); work, T_1( n ) = O( n^3 ), and span, T_infinity ( n ) = T_{n^2}( n ) = \Theta( n ). For Householder's method, T_n( n ) = (1/6) ( n^2 + 2n + (3/2) n^{3/2} ), T_1( n ) = (1/6) n^3 + (1/4) n^{5/2} + (1/3) n^2, T_infinity( n ) = \Theta( n ), T_p( n ) = O( n^3 / p ). For the QR algorithm, T_p( n ) = O( n^3 / p + n^2 ), T_1( n ) = O( n^3 ), and T_infinity( n ) = \Theta( n^2 ). ",,,,,,,,,,,,,,,,,,,,,,
47,Eigenvalues (Iterative Methods),1,,symmetric eigenvalue problem,662,,,,,,,,,"Kuck, Sameh (Householder's method)",1971,https://apps.dtic.mil/sti/pdfs/AD0737292.pdf,,,,,,,,$O( n^3 / p )$,$ \Theta( n )$,6,,$(1/6) n^3 + (1/4) n^{5/2} + (1/3) n^2$,16,,,P_E x P_E matrix,,,,massively parallel ? (based on ILLAC mention?),700,,,,,,,,,,,,,,1,p,10,,,,,,,"They do seem to compute Eigenvalues. Jacobi's method computes Eigenvalues directly (ref: bottom of page 7 and top of page 8 in Section 3.1). While it's true that with Householder's method they do tridiagonalization only, but once the tridiagonal matrix is obtained, one can find its Eigenvalues using the QR algorithm they describe in Section 5 (ref: the bottom paragraph of page 19 in Section 4.1). I have derived the following work, span, and parallel running time of the algorithms given in this paper (but I could not verify them very carefully given the limited time). Jacobi's method: parallel running time, T_p( n ) = O( n^3 / p + n^2 / p^{1/2} + n ); work, T_1( n ) = O( n^3 ), and span, T_infinity ( n ) = T_{n^2}( n ) = \Theta( n ). For Householder's method, T_n( n ) = (1/6) ( n^2 + 2n + (3/2) n^{3/2} ), T_1( n ) = (1/6) n^3 + (1/4) n^{5/2} + (1/3) n^2, T_infinity( n ) = \Theta( n ), T_p( n ) = O( n^3 / p ). For the QR algorithm, T_p( n ) = O( n^3 / p + n^2 ), T_1( n ) = O( n^3 ), and T_infinity( n ) = \Theta( n^2 ). ",,,,,,,,,,,,,,,,,,,,,,
47,Eigenvalues (Iterative Methods),1,,nonsymmetric eigenvalue problem,663,,,,,,,,,"Kuck, Sameh (QR algorithm)",1971,https://apps.dtic.mil/sti/pdfs/AD0737292.pdf,,,,,,,,$O( n^3 / p + n^2 )$,$ \Theta( n^2 )$,10,,$O( n^3 )$,16,,,P_E x P_E matrix,,,,massively parallel ? (based on ILLAC mention?),700,,,,,,,,,,,,,,1,p,6,,,,,,,"They do seem to compute Eigenvalues. Jacobi's method computes Eigenvalues directly (ref: bottom of page 7 and top of page 8 in Section 3.1). While it's true that with Householder's method they do tridiagonalization only, but once the tridiagonal matrix is obtained, one can find its Eigenvalues using the QR algorithm they describe in Section 5 (ref: the bottom paragraph of page 19 in Section 4.1). I have derived the following work, span, and parallel running time of the algorithms given in this paper (but I could not verify them very carefully given the limited time). Jacobi's method: parallel running time, T_p( n ) = O( n^3 / p + n^2 / p^{1/2} + n ); work, T_1( n ) = O( n^3 ), and span, T_infinity ( n ) = T_{n^2}( n ) = \Theta( n ). For Householder's method, T_n( n ) = (1/6) ( n^2 + 2n + (3/2) n^{3/2} ), T_1( n ) = (1/6) n^3 + (1/4) n^{5/2} + (1/3) n^2, T_infinity( n ) = \Theta( n ), T_p( n ) = O( n^3 / p ). For the QR algorithm, T_p( n ) = O( n^3 / p + n^2 ), T_1( n ) = O( n^3 ), and T_infinity( n ) = \Theta( n^2 ). ",,,,,,,,,,,,,,,,,,,,,,
47,Eigenvalues (Iterative Methods),0.001,,symmetric (tridiagonal?) eigenvalue problem,664,,,,,,,,,"Dongarra, Sorensen",1987,https://epubs.siam.org/doi/pdf/10.1137/0908018,,,,,,,,$O( n^3 / p )$,O(n^2 log n)?,11,,$O( n^3 )$,16,,,,,,,shared memory,300,,,,,,,,,,,,,,1,p,5.9,,,,,,,"In the worst case, T_1( n ) = O( n^3 ) and parallel running time, T_p( n ) = O( n^3 / p ). But when eigenvalues cluster and eigenvectors have many small entries the running time is much smaller than cubic.",,,,,,,,,,,,,,,,,,,,,,
47,Eigenvalues (Iterative Methods),0.001,,symmetric eigenvalue problem,665,,,,,,,,,Sameh (Jacobi),1971,https://www.ams.org/journals/mcom/1971-25-115/S0025-5718-1971-0297131-6/S0025-5718-1971-0297131-6.pdf,,,,,,,,n^3/p * convergence,,,,n^3 * (quadratic?) convergence,,,,,,,,distributed memory,700,,,,,,,,,,,,,,,,,,,,,,,"I see that for every sweep of the Jacobi algorithm T_1( n ) = O( n^3 ) and T_p( n ) = O( n^3 / p ) and very likely the algorithm converges in O(1) sweeps assuming that the convergence rate of the parallel algorithm has not changed from that of the original serial algorithm. For the Jacobi-like Eberlein's algorithm the parallel algorithm given in this paper is known to converge slower than the original serial algorithm with quadratic convergence. The convergence rate of this algorithm was later improved in the following article: https://pure.uvt.nl/ws/portalfiles/portal/1142310/PM5621297.pdf. The improved algorithm has T_1( n ) = O( n^3 log(n) ), T_infinity( n ) = O( n log^2 (n) ), and T_p( n ) = O( ( n^2 / p + log(n) ) n log(n) ).  ",,,,,,,,,,,,,,,,,,,,,,
47,Eigenvalues (Iterative Methods),1,,symmetric eigenvalue problem,666,,,,,,,,,Paardekooper,1986,https://pure.uvt.nl/ws/portalfiles/portal/1142310/PM5621297.pdf.,,,,,,,,,n log^2 n,6.2,,n^3 log n,16.1,,,,,,,distributed memory,700,,,,,,,,,,,,,,,,11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
47,Eigenvalues (Iterative Methods),0.001,,,667,,,,,,,,,"Xu, Xie, Zhang",2020,https://epubs.siam.org/doi/pdf/10.1137/19M128452X,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"The paper uses multigrid approximation and is designed for finding the first few eigenvalues efficiently. The parallel running time for finding all n eigenvalues is, T_p( n ) = O( ( n / p ) N ) under reasonable assumptions, where N is the size of the finest grid. Errors drops linearly with N.",,,,,,,,,,,,,,,,,,,,,,
48,Root Computation,0.001,General Root Computation,General Root Computation,668,approximates roots of polynomial that only has real roots,,,,,,,,"Narendran, Tiwari",1992,https://dl.acm.org/doi/pdf/10.1145/140901.140920,,,,,,,,$O(n^2(\log{n} + \log^2{X}))$,,,,,,,,"$n$: degree of polynomial, assumes n distinc real roots
 $x$: rational point 
 $\mu>0$ s.t. $2^\mu x$ is an integer
 $X=||2^\mu x||$",,,,shared memory?,,,,,,,,,,,,,,,,20?,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
48,Root Computation,0.001,General Root Computation,General Root Computation,669,,,,,,,,,"Ben-Or, Feig, Kozen, Tiwari (BFKT)",1986,https://dl.acm.org/doi/pdf/10.1145/12130.12165,,,,,,,,,$O(\log{n})$,1,https://www.sciencedirect.com/science/article/pii/S0022000005800613,,,,,"$n$: degree of polynomial
 $m$: bits in coefficients (?) // $2^m+1$: upper bound on root absolute value
 $2^{-\mu}$: error bound",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
48,Root Computation,0.001,General Root Computation,General Root Computation,670,,,,,,,,,Neff,1994,https://www.sciencedirect.com/science/article/pii/S0022000005800613,,,,,,,,$O(\log^3{n+m+\mu})$,$O(\log^3{n+m+\mu})$,,,$O(\log^3{n+m+\mu} (n+m+\mu)^f$,,,,"$n$: degree of polynomial
 $2^m$: upper bound
 $2^{-\mu}$: error bound
 $f$: positive constant",,,,"""an attempt has been made to avoid much of the formalization of an exact model of parallel computation""; refrences BFKT sand they use EREW PRAM",110,,,,,,,,,,,,,,,$O(n+m+mu)^f$,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
48,Root Computation,1,General Root Computation,General Root Computation,671,,,,,,,,,"parallel Graeffe's method - Rice, Jamieson",1989,https://ieeexplore.ieee.org/abstract/document/21130,,,,,,,,$O(1)$,$O(1)$,0,,$O(n)$,10,,,$n$: degree of polynomial,,,,SIMD,700,,,,,,,,,,,,,,,$n+1$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
48,Root Computation,0.001,General Root Computation,General Root Computation,672,,,,,,,,,"Serial Algorithm Parallel function Evaluation (SAPE) - Katz, Franklin (1)",1985,https://epubs.siam.org/doi/abs/10.1137/0906023,,,,,,,,,,,,,,,,"$n$:
 $a,b$: endpoint values $a<b$",,,,MIMD,,,,,,,,,,,,,,,,$n$,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
48,Root Computation,0.001,General Root Computation,General Root Computation,673,,,,,,,,,"Parallel Algorithm Serial Function Evaluation (PASE) - Katz, Franklin (2)",1985,https://epubs.siam.org/doi/abs/10.1137/0906023,,,,,,,,,,,,,,,,"$n$:
 $a,b$: endpoint values $a<b$",,,,MIMD,,,,,,,,,,,,,,,,$n$,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
48,Root Computation,0.001,General Root Computation,General Root Computation,674,,,,,,,,,"Ellis, Watson",1984,https://www.sciencedirect.com/science/article/pii/0898122184900427,,,,,,,,,,,,,,,,,,,,SIMD,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,k Nearest Neighbors Search,k Nearest Neighbors Search,675,,,,,,,,,"Two-dimensional partitioning with query point replication - Xiao, Biros (1)",2016,https://epubs.siam.org/doi/abs/10.1137/15M1026377,,,,,,,,"$O(mnd/p + 1/p^0.5 (m+n) + mn/p \log{n/p^0.5} + k\log{p^0.5})$ for large k
 $O(mnd/p + 1/p^0.5 (m+n) + mn/p + k\log{p^0.5})$ for small k",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,k Nearest Neighbors Search,k Nearest Neighbors Search,676,,,,,,,,,"Cyclic partitioning - Xiao, Biros (2)",2016,https://epubs.siam.org/doi/abs/10.1137/15M1026377,,,,,,,,"$O(mnd/p + m + n + mn/p \log{n/p})$ for large k
 $O(mnd/p + m + n + mn/p)$ for small k",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,,,677,,,,,,,,,"Ramasubramanian, Paliwal",1992,https://maxwell.ict.griffith.edu.au/spl/publications/papers/ieeesp92_ram.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,k Nearest Neighbors Search,k Nearest Neighbors Search,678,,,,,,,,,"Berchtold, Bohm, Braunmuller, Keim, Kriegel",1997,https://dl.acm.org/doi/abs/10.1145/253262.253263,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,,,679,,,,,,,,,"Kumari, Maurya, Goyal, Balasubramaniam, Goyal",2016,https://ieeexplore.ieee.org/abstract/document/7839671,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,1,All Nearest Neighbors,All Nearest Neighbors,680,,,,,,,,,Goodrich,1985,https://docs.lib.purdue.edu/cgi/viewcontent.cgi?article=1452&context=cstech,,,,,,,,$O(\log{n})$,$O(\log{n})$,1,,$O(n)$,10,,,"$n$: number of points
$k=1$: neighbors",,,,CREW PRAM,120,,,,,,,,,,,,,,,$O(n/ \log{n})$,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,1,All Nearest Neighbors,All Nearest Neighbors,681,,,,,,,,,"Schieber, Vishkin",1990,https://www.sciencedirect.com/science/article/pii/0166218X9090084P,,,,,,,,$O(\log{\log{n}})$,$O(\log{\log{n}})$,0.1,,$O(n)$,10,,,"$n$: number of points
$k=1$: neighbors",,,,CRCW PRAM,130,,,,,,,,,,,,,,,$O(n/ \log{\log{n}})$,9.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,1,k Nearest Neighbors Search,k Nearest Neighbors Search,682,,,,,,,,,"Callahan, Kosaraju",1995,https://dl.acm.org/doi/abs/10.1145/200836.200853,,,,,,,,$O(\log{n})$,$O(\log{n})$,1,,$O(n \log{n})$,11,,,"$n$: number of points
",,,,CREW PRAM,120,,,,,,,,,,,,,,,$O(n)$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,1,k Nearest Neighbors Search,k Nearest Neighbors Search,683,,,,,,,,,"Frieze, Miller, Teng",1992,https://dl.acm.org/doi/pdf/10.1145/140901.141934,,,,,,,,$O(\log{n})$,$O(\log{n})$,1,,$O(n \log{n})$,11,,,"$n$: number of points
",,,,CRCW PRAM,130,,,,,,,,,1,,,,,,$O(n)$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,k Nearest Neighbors Search,k Nearest Neighbors Search,684,,,,,,,,,"Best-First based Parallel kNN (BFPkNN) - Gao, Chen Chen, Chen",2006,https://link.springer.com/chapter/10.1007/11751649_5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,,,685,,,,,,,,,"Papadopoulos, Manolopoulos",1997,https://dl.acm.org/doi/pdf/10.1145/258319.258330,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,,,686,,,,,,,,,"Papadopoulos, Manolopoulos",1998,https://dl.acm.org/doi/pdf/10.1145/276305.276325,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,,,687,,,,,,,,,"Connor, Kumar",2008,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=cefc2eca176f490d1c6a09d689262da37a326b13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,1,k Nearest Neighbors Search,k Nearest Neighbors Search,688,,,,,,,,,Gavrilova,2002,https://link.springer.com/article/10.1023/A:1014310721543,,,,,,,,$O(\log{n} \log)$,$O(\log{n} \log)$,1.1,,$O(n)$,10,,,,,,,EREW PRAM,110,,,,,,,,,,,,,,,$n/ \log{n}$,8.95,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,1,,all nearest FOREIGN neighbors,689,,,,,,,,,"Graf, Kamakoti, Janaki Latha, Pandu Rangan",1997,https://ieeexplore.ieee.org/abstract/document/634483,,,,,,,,$O(\log{n})$,$O(\log{n})$,1,,$O(n \log{n})$,11,,,,,,,CREW PRAM,120,,,,,,,,,,,,,,,$O(n)$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Nearest Neighbor Search,0.001,,,690,,,,,,,,,"KNN-MR (map reduce) - Kim, Kim, Shim",2016,https://ieeexplore.ieee.org/abstract/document/7840662,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
50,Coset Enumeration,0.001,Coset Enumeration,Coset Enumeration,691,,,,,,,,,Harris,2003,https://scholarworks.lib.csusb.edu/etd-project/2432/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
50,Coset Enumeration,0.001,Coset Enumeration,Coset Enumeration,692,,,,,,,,,"Cooperman, Havas",1997,https://link.springer.com/chapter/10.1007/3540761691_3,,,,,,,,,,,,,,,,,,,,SMP machine,300,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
50,Coset Enumeration,0.001,Coset Enumeration,Coset Enumeration,693,,,,,,,,,"Akl, Labonte, Leeder, Qui",1991,https://www.sciencedirect.com/science/article/pii/0166218X91900769,,,,,,,,,,,,,,,,,,,,CRCW PRAM,130,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
50,Coset Enumeration,0.001,Coset Enumeration,Coset Enumeration,694,,,,,,,,,"Havas, Ramsay",2000,https://www.worldscientific.com/doi/abs/10.1142/9789812791962_0004,,,,,,,,,,,,,,,,,,,,multi-threaded SMP,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
51,Maximum Likelihood Parameters,0.001,Maximum Likelihood Parameters,,695,,,1,1,,,,[https://www.sciencedirect.com/science/article/pii/S1064185883710624 Chen et al. (1993)],Chen et al.,1993,https://www.sciencedirect.com/science/article/pii/S1064185883710624,,,,,,,,,,,,,,,,"n: number of observations in sample
r: number of parameters + latent variables",n,,,SIMD/MIMD?,,,,,,,,,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
51,Maximum Likelihood Parameters,0.001,Maximum Likelihood Parameters,,696,,,1,1,,,,[https://link.springer.com/article/10.1023/A:1015021911216 Swann (2002)],Swann,2002,https://link.springer.com/article/10.1023/A:1015021911216,,,,,,,,,,,,,,,,"n: number of observations in sample
r: number of parameters + latent variables",n,,,,,,,,,,,,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
51,Maximum Likelihood Parameters,0.001,Maximum Likelihood Parameters,,697,,,1,1,,,,"[https://analyticalsciencejournals.onlinelibrary.wiley.com/doi/abs/10.1002/cem.789 Vega-Montoto, Wentzell (2003)]","Vega-Montoto, Wentzell",2003,https://analyticalsciencejournals.onlinelibrary.wiley.com/doi/abs/10.1002/cem.789,,,,,,,,,,,,,,,,"n: number of observations in sample
r: number of parameters + latent variables",n,,,,,,,,,,,,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
54,Voronoi Diagrams,1,Constuct Voronoi Diagram,Constuct Voronoi Diagram,698,,,1,1,O(log^3 n),,,[https://dl.acm.org/doi/10.5555/909732 Chow (1980)],Chow,1980,https://dl.acm.org/doi/10.5555/909732,,,,,,,,O(log^3 n),O(log^3 n),3,https://dl.acm.org/doi/10.5555/909732,O(n log^3 n),13,,no,n: number of points,n,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(n),10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
54,Voronoi Diagrams,1,Constuct Voronoi Diagram,Constuct Voronoi Diagram,699,,,1,1,O(log^2 n),,,"[https://dl.acm.org/doi/10.1145/41958.41980 Dadoun, Kirkpatrick (1987)]","Dadoun, Kirkpatrick",1987,https://dl.acm.org/doi/10.1145/41958.41980,,,,,,,,O(log^2 n),O(log^2 n),2,https://dl.acm.org/doi/10.1145/41958.41980,O(n log^2 n),12,,no,n: number of points,n,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(n),10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
54,Voronoi Diagrams,1,Constuct Voronoi Diagram,Constuct Voronoi Diagram,700,,,1,1,O(log^2 n),,,"[https://link.springer.com/content/pdf/10.1007/BF01762120.pdf Aggarwal, Chazelle, Guibas, Ó'Dúnlaing, Yap (1988)]","Aggarwal, Chazelle, Guibas, Ó'Dúnlaing, Yap",1988,https://link.springer.com/content/pdf/10.1007/BF01762120.pdf,,,,,,,,O(log^2 n),O(log^2 n),2,https://link.springer.com/content/pdf/10.1007/BF01762120.pdf,O(n log^2 n),12,,no,n: number of points,n,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(n),10,0,0,,,,,"""Shamos (1977)"" gave reductions from Voronoi diagrams to other geometric proximity problems, including closest pair",,,,,,,,,,,,,,,,,,,,,,
54,Voronoi Diagrams,1,Constuct Voronoi Diagram,Constuct Voronoi Diagram,701,,,1,1,O(log n log log n),,,"[https://link.springer.com/chapter/10.1007/BFb0032049 Cole, Goodrich, Ó'Dúnlaing [Theorem 7.1] (1990)]","Cole, Goodrich, Ó'Dúnlaing [Theorem 7.1]",1990,https://link.springer.com/chapter/10.1007/BFb0032049,,,,,,,,O(log n log log n),O(log n log log n),1.1,https://link.springer.com/chapter/10.1007/BFb0032049,O(n log^2 n),12,https://link.springer.com/chapter/10.1007/BFb0032049,no,n: number of points,n,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(n),10.9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
54,Voronoi Diagrams,1,Constuct Voronoi Diagram,Constuct Voronoi Diagram,702,,,1,1,O(log^2 n),,,"[https://link.springer.com/chapter/10.1007/BFb0032049 Cole, Goodrich, Ó'Dúnlaing [Theorem 7.2] (1990)]","Cole, Goodrich, Ó'Dúnlaing [Theorem 7.2]",1990,https://link.springer.com/chapter/10.1007/BFb0032049,,,,,,,,O(log^2 n),O(log^2 n),2,https://link.springer.com/chapter/10.1007/BFb0032049,O(n log n),11,https://link.springer.com/chapter/10.1007/BFb0032049,yes,n: number of points,n,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(n/log n),9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
54,Voronoi Diagrams,1,Constuct Voronoi Diagram,Constuct Voronoi Diagram,703,,,1,1,O(log n),Points independently drawn from uniform distribution in square window,https://link.springer.com/chapter/10.1007/3-540-19487-8_21,"[https://link.springer.com/chapter/10.1007/3-540-19487-8_21 Levcopoulos, Katajainen, Lingas (1988)]","Levcopoulos, Katajainen, Lingas",1988,https://link.springer.com/chapter/10.1007/3-540-19487-8_21,,,,,,,,O(log^2 n)?,O(log^2 n)?,2,,O(n log n)?,11,,no,n: number of points,n,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(n/log n),9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
54,Voronoi Diagrams,1,Constuct Voronoi Diagram,Constuct Voronoi Diagram,704,,,1,1,O((n log n)/p)?,,,[https://www.sciencedirect.com/science/article/pii/S0010448512002369 Xin et al. (2013)],Xin et al.,2013,https://www.sciencedirect.com/science/article/pii/S0010448512002369,,,,,,,,O((n log n)/p)?,O(log n)?,1,,O(n log n),11,https://www.sciencedirect.com/science/article/pii/S0010448512002369,no,"n: number of points
p: number of processors",n,,,CREW PRAM?,120,,,,,,,,,0,,0,,0,1,p,10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
54,Voronoi Diagrams,0.001,Constuct Voronoi Diagram,Constuct Voronoi Diagram,705,,,1,1,O((n/p)log(n/p) + sqrt(np)log(np))?,,,[https://onlinelibrary.wiley.com/doi/full/10.1002/cpe.3005 Wang et al. (2013)],Wang et al.,2013,https://onlinelibrary.wiley.com/doi/full/10.1002/cpe.3005,,,,,,,,O((n/p)log(n/p) + sqrt(np)log(np))?,O(n^(2/3) log n)?,,,O(n log n),11,,no,"n: number of points
p: number of processors",n,,,SIMD?,700,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
54,Voronoi Diagrams,1,Constuct Voronoi Diagram,Constuct Voronoi Diagram,706,,,1,1,O((n log n log p)/p)?,,,"[https://link.springer.com/chapter/10.1007/bfb0028576 Diallol, Ferreira, Rau-Chaplin (1998)]","Diallol, Ferreira, Rau-Chaplin",1998,https://link.springer.com/chapter/10.1007/bfb0028576,,,,,,,,O((n log n log p)/p)?,O(n^(1/2) log^2 n)?,6.2,,O(n log n),11,,no,"n: number of points
p: number of processors; n/p = Omega(p)",n,,,CGM,400,,,,,,,,,0,,0,,0,1,p,5.9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
54,Voronoi Diagrams,0.001,Constuct Voronoi Diagram,,707,,,1,1,,,,[https://ieeexplore.ieee.org/abstract/document/323267 Roos (1994)],Roos,1994,https://ieeexplore.ieee.org/abstract/document/323267,,,,,,,,,,,,,,,no,n: number of points,n,,,,,,,,,,,,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
54,Voronoi Diagrams,0.001,Constuct Voronoi Diagram,Constuct Voronoi Diagram,708,,,1,1,O((n log n)/p)?,,,[https://arxiv.org/abs/1212.1095 Reem (2012)],Reem,2012,https://arxiv.org/abs/1212.1095,,,,,,,,O((n log n)/p)?,O(log n)?,,,O(n log n)?,,,no,"n: number of points
p: number of processors",n,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
54,Voronoi Diagrams,1,Constuct Voronoi Diagram,Constuct Voronoi Diagram,709,,,1,1,O(n*(1 + (log n)/p)),,,"[https://ieeexplore.ieee.org/abstract/document/5363466 Dong, Wu, Zhou [22-merger] (2009)]","Dong, Wu, Zhou [22-merger]",2009,https://ieeexplore.ieee.org/abstract/document/5363466,,,,,,,,O(n*(1 + (log n)/p)),O(n),10,,O(n log n),11,,no,"n: number of points
p: number of processors",n,,,MPI-based?,700,,,,,,,,,0,,0,,0,1,p,1,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
54,Voronoi Diagrams,1,Constuct Voronoi Diagram,Constuct Voronoi Diagram,710,,,1,1,O(log n),,,"[https://dl.acm.org/doi/10.1145/73007.73045 Reif, Sen (1989)]","Reif, Sen",1989,https://dl.acm.org/doi/10.1145/73007.73045,,,,,,,,O(log n),O(log n),1,https://dl.acm.org/doi/10.1145/73007.73045,O(n log n),11,https://dl.acm.org/doi/10.1145/73007.73045,yes,n: number of points,n,,,CREW PRAM,120,,,,,,,,,1,Las Vegas,0,,0,1,O(n),10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
55,Variance Calculations,1,Variance Calculations,Variance Calculations,711,,0,1,1,O(log n),Any distribution of values?,(need to read entire input),[http://i.stanford.edu/pub/cstr/reports/cs/tr/79/773/CS-TR-79-773.pdf Chan's algorithm Parallel Implementation (1979)],Chan's algorithm Parallel Implementation,1979,http://i.stanford.edu/pub/cstr/reports/cs/tr/79/773/CS-TR-79-773.pdf,,,,0,0,2,n: 2,O(\log n),$O(\log n)$,1,https://dbs.ifi.uni-heidelberg.de/files/Team/eschubert/publications/SSDBM18-covariance-authorcopy.pdf,$O(n\log n)$,11,https://dbs.ifi.uni-heidelberg.de/files/Team/eschubert/publications/SSDBM18-covariance-authorcopy.pdf,no,n: number of values,n,,,EREW PRAM,110,words,3,n: 3,O(1) per processor,"Each processor maintains O(1) information related to count, mean, M2",1,0,,0,,0,,0,1,O(n),10,0,0,https://dbs.ifi.uni-heidelberg.de/files/Team/eschubert/publications/SSDBM18-covariance-authorcopy.pdf,,,,,,,,,,,,,,1,,,,,,,,,6,,,Numerical Analysis
55,Variance Calculations,0.001,Variance Calculations,Variance Calculations,712,,0,1,1,O(n/p + p)?,,,[https://ieeexplore.ieee.org/abstract/document/5289161 Bennett et. al (2009)],Bennett et. al,2009,https://ieeexplore.ieee.org/abstract/document/5289161,,,,0,0,2,n: 2,O(n/p + p)?,O(sqrt(n))?,,,O(n)?,,,no,"n: number of points
p: number of processors",n,,,MPI-based,700,words,3,n: 3,O(1) per processor,"Each processor maintains O(1) information related to count, mean, M2",1,0,,0,,0,,0,1,p,,0,0,,,,,"The paper does not explain how they parallelized their algorithm. So, I was looking at their implementation here: https://gitlab.kitware.com/vtk/vtk/-/blob/master/Filters/ParallelStatistics/vtkPDescriptiveStatistics.cxx. The code was updated 5 months ago. That implementation (MPI-based distributed) has a parallel running time of \Theta( n/p + p ). The work is \Theta( n ), but the span (by definition) is also \Theta( n ) as the maximum number of processors one can use is p = n. However, with p = sqrt(n), one can gets the smallest parallel running time of \Theta( sqrt( n ) ). This \Theta( sqrt( n ) ) is the correct span which can be derived from parallelism. Since parallelism is an upper bound on speedup and the maximum speedup one can achieve is \T, heta( sqrt( n ) ) with p = sqrt( n ), parallelism will be sqrt( n ). But parallelism = T_1 / T_inf. Since T_1 = \Theta( n ), we get T_inf = \Theta( sqrt( n ) ).",,,,,,,,,,1,,,,,,,,,6,,,Numerical Analysis
55,Variance Calculations,0.001,Variance Calculations,Variance Calculations,713,,0,1,1,O(log n)?,,,"[https://dl.acm.org/doi/abs/10.1145/3221269.3223036 Schubert, Gertz (2018)]","Schubert, Gertz",2018,https://dl.acm.org/doi/abs/10.1145/3221269.3223036,,,,0,0,2,n: 2,O(log n)?,O(log n)?,,https://dl.acm.org/doi/abs/10.1145/3221269.3223036,O(n)?,,,no,n: number of values,n,,,EREW PRAM?,,words,3,n: 3,O(1) per processor,"Each processor maintains O(1) information related to count, mean, M2",1,0,,0,,0,,0,1,O(n),,0,0,,,,,"Based on the merge equations given in Section 4.3 (column 2), one can easily compute mean and variance/covariance in \Theta( n ) work and \Theta( \log{ n } ) span using a tree-like merging of the stats (as mentioned in Section 4.5).",,,,,,,,,,1,,,,,,,,,6,,,Numerical Analysis
56,Topological Sorting,0.001,Topological Sorting,Topological Sorting,714,,,1,1,,,,[https://dl.acm.org/doi/10.1145/368996.369025 Kahn (1962)],Kahn,1962,https://dl.acm.org/doi/10.1145/368996.369025,,,,0,0,#N/A,V: 2,,,,,,,,,,,,,,,words,#N/A,V: 5,O(V^2)??,"Their n*n*n cube setup seems to only require each processor to keep track of one entry A[i, j], B[i, j] and propagates the results across the structure, only requiring O(1) auxiliary space per processor. Comparison sorting can be done easily with O(1) auxiliary space per processor.",1,0,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,6,,,Combinatorics
56,Topological Sorting,1,Topological Sorting,Topological Sorting,715,,,1,1,O( log² V),,,[https://www.proquest.com/docview/920003939?pq-origsite=gscholar&fromopenview=true Dekel; Nassimi & Sahni Parallel Implementation  (1981)],Dekel; Nassimi & Sahni Parallel Implementation ,1981,https://www.proquest.com/docview/920003939?pq-origsite=gscholar&fromopenview=true,,,,0,0,2,V: 2,O(\log^2 V),$O(\log^2 V)$,2,https://www.proquest.com/docview/920003939?fromopenview=true&pq-origsite=gscholar&parentSessionId=sFqBaY3zmnfUFqEv4cfbNEqD%2FS7jMtMwgheB67Bgqws%3D,$O(V^3\log^2 V)$?,16.2,https://www.proquest.com/docview/920003939?fromopenview=true&pq-origsite=gscholar&parentSessionId=sFqBaY3zmnfUFqEv4cfbNEqD%2FS7jMtMwgheB67Bgqws%3D,no,"V: number of vertices
E: number of edges",V,,,"PRAM (not sure what type), SIMD computers?",700,words,5,V: 5,O(V^2)??,"Their n*n*n cube setup seems to only require each processor to keep track of one entry A[i, j], B[i, j] and propagates the results across the structure, only requiring O(1) auxiliary space per processor. Comparison sorting can be done easily with O(1) auxiliary space per processor.",1,0,,0,,0,,0,1,O(V^3)?,16,0,0,,,,,,,,,,,,,,,,,,,,,,,,6,,,Combinatorics
56,Topological Sorting,1,Topological Sorting,Topological Sorting,716,,,1,1,O(p),,,[https://academic.oup.com/comjnl/article/26/4/293/377400 Er (1983)],Er,1983,https://academic.oup.com/comjnl/article/26/4/293/377400,,,,,,,,O(p),O(p),,https://academic.oup.com/comjnl/article/26/4/293/377400,O(np)?,,,no,"n: number of vertices
m: number of edges
p: length of longest path from sink to source",n,,,SIMD,700,,,,,,,,,0,,0,,0,1,O(n)?,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
56,Topological Sorting,2,Topological Sorting,Topological Sorting,717,,,1,1,O( log² n),,,"[https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=581703 Ma, Iwama, Takaoka, Gu (1991)]","Ma, Iwama, Takaoka, Gu",1991,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=581703,,,,0,0,#N/A,V: 2,O(\log^2 n),$O(\log^2 n)$,2,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=581703,$O(M(n)logn)$,,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=581703,no,"n: number of vertices,
M(n) - number of processors needed to multiply two n x n matrices; currently equal to n^\omega the matrix multiplication runnint time.



",n,,,PRAM - CREW,120,words,#N/A,V: 5,O(V^2)??,"Their n*n*n cube setup seems to only require each processor to keep track of one entry A[i, j], B[i, j] and propagates the results across the structure, only requiring O(1) auxiliary space per processor. Comparison sorting can be done easily with O(1) auxiliary space per processor.",1,0,,0,,0,,0,1,O(M(n) / logn),,0,0,,,,,,,,,,,,,,,,,,,,,,,,6,,,Combinatorics
56,Topological Sorting,0.001,Topological Sorting,Topological Sorting,718,,,1,1,O(log n),,,[https://www.semanticscholar.org/paper/Parallel-algorithms%3A-design-and-analysis-Chaudhuri/b839df4f1527853960e4979d2066fbb07e3debe5 Chaudhuri (1992)],Chaudhuri,1992,https://www.semanticscholar.org/paper/Parallel-algorithms%3A-design-and-analysis-Chaudhuri/b839df4f1527853960e4979d2066fbb07e3debe5,,,,0,0,#N/A,V: 2,O(log n),O(log n),1,https://www.semanticscholar.org/paper/Parallel-algorithms%3A-design-and-analysis-Chaudhuri/b839df4f1527853960e4979d2066fbb07e3debe5,$O(n^3 logn)$,16.1,https://www.semanticscholar.org/paper/Parallel-algorithms%3A-design-and-analysis-Chaudhuri/b839df4f1527853960e4979d2066fbb07e3debe5,no,n: number of vertices,n,,,CRCW PRAM,130,words,#N/A,V: 5,O(V^2)??,"Their n*n*n cube setup seems to only require each processor to keep track of one entry A[i, j], B[i, j] and propagates the results across the structure, only requiring O(1) auxiliary space per processor. Comparison sorting can be done easily with O(1) auxiliary space per processor.",1,0,,0,,0,,0,1,O(n^3)?,16,0,0,,,,,,,,,,,,,,,,,,,,,,,,6,,,Combinatorics
56,Topological Sorting,1,Topological Sorting,Topological Sorting,719,,,1,1,O(log n),,,"[https://link.springer.com/article/10.1023/A:1022080713267 Li, Pan, Shen (2003)]","Li, Pan, Shen",2003,https://link.springer.com/article/10.1023/A:1022080713267,,,,,,,,O(log n),O(log n),1,https://link.springer.com/article/10.1023/A:1022080713267,O(n^3),16,,no,"n: number of vertices
m: number of edges",n,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(n^3/log n),15.95,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
56,Topological Sorting,1,Topological Sorting,Topological Sorting,720,,,,,,,,[https://dl.acm.org/doi/pdf/10.1145/1378533.1378560 Schudy (2008)],Schudy,2008,https://dl.acm.org/doi/pdf/10.1145/1378533.1378560,,,,,,,,O(t poly(log n)),O((n^2/m)^(1/3)),3,https://dl.acm.org/doi/pdf/10.1145/1378533.1378560,O(m)?,12,,no,"n: number of vertices
m: number of edges",n,,,CRCW PRAM?,130,,,,,,,,,1,Las Vegas,0,,0,1,mn/t^2,9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
57,DFA Minimization,1,DFA Minimization,DFA Minimization,721,,,1,1,O(log^2 n),,,"[https://ieeexplore.ieee.org/document/1743 JaJa, Kosaraju (1988)]","JaJa, Kosaraju",1988,https://ieeexplore.ieee.org/document/1743,,,,,,,,O(log^2 n),O(log^2 n),2,https://ieeexplore.ieee.org/document/1743,O(n^6),60,https://link.springer.com/chapter/10.1007/978-1-4613-3282-4_10,no,"$n$: number of states
$k$: size of alphabet",n,,,CREW PRAM,120,words,,,,,,,,0,,0,,0,1,O(n^6)?,58,0,0,https://link.springer.com/chapter/10.1007/978-1-4613-3282-4_10,,,,,,,,,,,,,,,,,,,,,,,,,,
57,DFA Minimization,1,DFA Minimization,DFA Minimization,722,,,1,1,O(log^2 n),,,"[https://www.sciencedirect.com/science/article/pii/002001909290095D Cho, Huynh (1992)]","Cho, Huynh",1992,https://www.sciencedirect.com/science/article/pii/002001909290095D,,,,,,,,O(log^2 n),O(log^2 n),2,https://www.sciencedirect.com/science/article/pii/002001909290095D,O(n^6),60,https://link.springer.com/chapter/10.1007/978-1-4613-3282-4_10,no,"$n$: number of states
$k$: size of alphabet",n,,,EREW PRAM,110,words,,,,,,,,0,,0,,0,1,O(n^6)?,58,0,0,https://link.springer.com/chapter/10.1007/978-1-4613-3282-4_10,,,,,,,,,,,,,,,,,,,,,,,,,,
57,DFA Minimization,1,DFA Minimization,DFA Minimization,723,,,1,1,O((kn log^2 n)/p),,,"[https://ieeexplore.ieee.org/abstract/document/508056 Ravikumar, Xiong (1996)]","Ravikumar, Xiong",1996,https://ieeexplore.ieee.org/abstract/document/508056,,,,,,,,"O((kn log n)*max(1, (log n)/p))",O(kn log n),11,https://link.springer.com/chapter/10.1007/978-1-4613-3282-4_10,O(kn log^2 n),12,https://link.springer.com/chapter/10.1007/978-1-4613-3282-4_10,yes,"$n$: number of states
$k$: size of alphabet
$p$: number of processors",n,,,EREW PRAM,110,words,,,,,,,,0,,0,,0,1,p,1,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
57,DFA Minimization,1,DFA Minimization,DFA Minimization,724,,,1,1,O(kn log n),,,"[https://link.springer.com/chapter/10.1007/3-540-36265-7_4 Tewari, Srivastava, Gupta (2002)]","Tewari, Srivastava, Gupta",2002,https://link.springer.com/chapter/10.1007/3-540-36265-7_4,,,,,,,,O(kn log n),O(kn log n),11,https://link.springer.com/chapter/10.1007/3-540-36265-7_4,O(kn^2),20,https://link.springer.com/chapter/10.1007/3-540-36265-7_4,no,"$n$: number of states
$k$: size of alphabet",n,,,Arbitrary CRCW PRAM,131,words,,,,,,,,0,,0,,0,1,O(n/log n),9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
57,DFA Minimization,0.001,DFA Minimization,DFA Minimization,725,,,1,1,O(n^2 log k)?,,,"[https://link.springer.com/chapter/10.1007/978-3-540-74282-1_9 Sun, Lu, Li, Wang (2007)]","Sun, Lu, Li, Wang",2007,https://link.springer.com/chapter/10.1007/978-3-540-74282-1_9,,,,,,,,O(n^2 log k)?,O(n^2 log k),20,,$O(kn^2)$,20,,no,"$n$: number of states
$k$: size of alphabet",n,,,CRCW PRAM?,130,words,,,,,,,,0,,0,,0,1,,0,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
58,Lowest Common Ancestor,1,Lowest Common Ancestor,,726,,,1,1,O(ceil(m/(nK)) log n + n/K),,,"[https://epubs.siam.org/doi/abs/10.1137/0213036 Tsin, Chin (1984)]","Tsin, Chin",1984,https://epubs.siam.org/doi/abs/10.1137/0213036,,,,0,0,,,O(ceil(m/(nK)) log n + n/K),O(log n),1,https://epubs.siam.org/doi/abs/10.1137/0213036,O(m log n + n^2)?,,,,"n: number of vertices
m: number of total number of op.s (queries, links, cuts)
K: processor parameter",n,,,(SIMD-type) PRAM CREW,120,words,O(n) total (auxiliary?),n: 3,https://www.proquest.com/docview/919780720?pq-origsite=gscholar&fromopenview=true,,,,,0,,0,,0,1,nK,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
58,Lowest Common Ancestor,1,Lowest Common Ancestor,,727,,,1,1,O(ceil((n+m)/p) log n),,,[https://ieeexplore.ieee.org/abstract/document/1676830 Tsin [Section 3] (1986)],Tsin [Section 3],1986,https://ieeexplore.ieee.org/abstract/document/1676830,,,,,,,,O(ceil((n+m)/p) log n),O(log n),1,,O(n^2)?,,,no,"n: number of vertices
m: number of total number of op.s (queries, links, cuts)
p: number of processors",n,,,(SIMD-type) PRAM CREW,120,words,O(n) total (auxiliary?),n: 3,https://www.proquest.com/docview/919780720?pq-origsite=gscholar&fromopenview=true,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
58,Lowest Common Ancestor,1,Lowest Common Ancestor,,728,,,1,1,O(n^2/p + log n),,,[https://ieeexplore.ieee.org/abstract/document/1676830 Tsin [Section 4] (1986)],Tsin [Section 4],1986,https://ieeexplore.ieee.org/abstract/document/1676830,,,,,,,,O(n^2/p + log n),O(log n),1,,O(n^2)?,,,no,"n: number of vertices
m: number of total number of op.s (queries, links, cuts)
p: number of processors",n,,,(SIMD-type) PRAM CREW,120,words,O(n) total (auxiliary?),n: 3,https://www.proquest.com/docview/919780720?pq-origsite=gscholar&fromopenview=true,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
58,Lowest Common Ancestor,1,Lowest Common Ancestor,Lowest Common Ancestor with Static Trees,729,,,1,1,O(m+log(n)),,,[https://epubs.siam.org/doi/abs/10.1137/0217079?journalCode=smjcat Schieber; Vishkin [Parallel] (1988)],Schieber; Vishkin [Parallel],1988,https://epubs.siam.org/doi/abs/10.1137/0217079?journalCode=smjcat,,,,0,0,,,O(m+log(n)),$O(m+\log(n))$,,https://epubs.siam.org/doi/epdf/10.1137/0217079,$O(m+n)$,,https://epubs.siam.org/doi/epdf/10.1137/0217079,no,"n: number of vertices
m: number of total number of op.s (queries, links, cuts)",n,,,EREW PRAM,110,words,O(n) total (auxiliary?),n: 3,https://www.proquest.com/docview/919780720?pq-origsite=gscholar&fromopenview=true,,,,,0,,0,,0,1,O(n/log n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
58,Lowest Common Ancestor,1,Lowest Common Ancestor,,730,,,1,1,O(m*alpha(n)),,,"[https://apps.dtic.mil/sti/tr/pdf/ADA227803.pdf Berkman, Vishkin (1990)]","Berkman, Vishkin",1990,https://apps.dtic.mil/sti/tr/pdf/ADA227803.pdf,,,,0,0,,,O(m*alpha(n)),O(m*alpha(n)),,https://apps.dtic.mil/sti/tr/pdf/ADA227803.pdf,O(m + n),,https://apps.dtic.mil/sti/tr/pdf/ADA227803.pdf,no,"n: number of vertices
m: number of total number of op.s (queries, links, cuts)",n,,,Common CRCW PRAM,132,words,O(n) total (auxiliary?),n: 3,https://www.proquest.com/docview/919780720?pq-origsite=gscholar&fromopenview=true,,,,,0,,0,,0,1,O(n)?,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
58,Lowest Common Ancestor,1,Lowest Common Ancestor,Single-Pair LCA,731,,,1,1,O(log n),,,"[https://ieeexplore.ieee.org/abstract/document/288276 Das, Halverson, Min (1994)]","Das, Halverson, Min",1994,https://ieeexplore.ieee.org/abstract/document/288276,,,,0,0,,,O(log n),O(log n),1,https://ieeexplore.ieee.org/abstract/document/288276,O(n),,,no,n: number of vertices,n,,,EREW PRAM,110,words,O(n) total (auxiliary?),n: 3,https://www.proquest.com/docview/919780720?pq-origsite=gscholar&fromopenview=true,,,,,0,,0,,0,1,O(n/log n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
58,Lowest Common Ancestor,1,Lowest Common Ancestor,,732,,,1,1,"O(m/p + r log p + min(m, r log n))",,,[https://link.springer.com/chapter/10.1007/3-540-58218-5_28 Schenk (1994)],Schenk,1994,https://link.springer.com/chapter/10.1007/3-540-58218-5_28,,,,0,0,,,"O(m/p + r log p + min(m, r log n))",O(m/n + r log n)?,,,O(m + r)?,,,no,"n: number of vertices
m: number of total number of op.s (queries, links, cuts)
p: number of processors
r: number of rounds",n,,,CREW PRAM,120,words,O(n) total (auxiliary?),n: 3,https://www.proquest.com/docview/919780720?pq-origsite=gscholar&fromopenview=true,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
58,Lowest Common Ancestor,0.001,Lowest Common Ancestor,,733,,,1,1,,,,[https://academic.oup.com/proteincell/article/3/2/148/6874195 Zhao et. al. (2012)],Zhao et. al.,2012,https://academic.oup.com/proteincell/article/3/2/148/6874195,,,,0,0,,,,,,,,,,,"n: number of vertices
m: number of total number of op.s (queries, links, cuts)",n,,,,,words,O(n) total (auxiliary?),n: 3,https://www.proquest.com/docview/919780720?pq-origsite=gscholar&fromopenview=true,,,,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
58,Lowest Common Ancestor,0.001,Lowest Common Ancestor,Lowest Common Ancestor with Static Trees,734,,,1,1,O(m*log(h)),,,[https://www.schoolofhaskell.com/user/edwardk/online-lca Kmett (2015)],Kmett,2015,https://www.schoolofhaskell.com/user/edwardk/online-lca,,,,0,0,,,O(m*log(h)),,,,,,,,"n: number of vertices
m: number of total number of op.s (queries, links, cuts)
h: height of tree",,,,Word RAM,100,words,,,,,,,,0,,0,,0,1,O(n/log n),,0,0,,,,,Has an implimentation.,,,,,,,,,,,,,,,,,,,,,,Combinatorics
59,Graph Edit Distance Computation,0.001,Exact GED,,735,,,,,,,,,"Abu-Aisheh, Raveaux, Ramel, Martineau",2018,https://www.sciencedirect.com/science/article/pii/S095741741730725X,,,,,,,,,,,,,,,,,,,,distributed memory,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
59,Graph Edit Distance Computation,0.001,Exact GED,,736,,,,,,,,,"Wang, Fang, Feng",2019,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8750933,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
59,Graph Edit Distance Computation,0.001,Exact GED,,737,,,,,,,,,Kim,2020,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9205828,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
60,Clique Problems,1,Enumerating Maximal Cliques,"Enumerating Maximal Cliques, arbitrary graph",738,,,,,,,,,"Dahlhaus, Karpinski",1988,https://link.springer.com/chapter/10.1007/3-540-19487-8_16,,,,,,,,$O(\log^3{nM})$,$O(\log^3{nM})$,,,$O(M^6 n^2 \log^3{nM})$,,,,"$n$: number of vertices
 $M$: number of cliques",,,,CREW PRAM,120,,,,,,,,,,,,,,1,$O(M^6 n^2)$,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
60.4,Clique Problems,0.001,k-Clique,Max-Weight k-Clique,739,,,,,,,,,"Pardalos, Rappe, Resende",1998,https://link.springer.com/chapter/10.1007/978-1-4613-3279-4_18,,,,,,,,,,,,,,,,,,,,MPI,700,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
60.4,Clique Problems,0.001,k-Clique,Max-Weight k-Clique,740,,,,,,,,,"Wang, Tang, Cao",2003,https://ieeexplore.ieee.org/abstract/document/6790173,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
60,Clique Problems,0.001,Enumerating Maximal Cliques,"Enumerating Maximal Cliques, arbitrary graph",741,,,,,,,,,"Du, Wu, Xu, Wang, Pei",2006,https://ieeexplore.ieee.org/abstract/document/4063647,,,,,,,,"$O((\delta * M_c * Tri^2)/p)$ ""time delay"" ?
",,,,,,,,"$\delta$: max degree
$M_c$: size of maximum clique
$Tri$: number of all triangles",,,,,,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
60,Clique Problems,0.001,Enumerating Maximal Cliques,"Enumerating Maximal Cliques, arbitrary graph",742,,,,,,,,,"Schmidt, Samatova, Thomas, Park",2009,https://www.sciencedirect.com/science/article/pii/S0743731509000082,,,,,,,,,,,,,,,,,,,,distributed and/or shared memory high performance computing architectures,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
60,Clique Problems,0.001,Enumerating Maximal Cliques,"Enumerating Maximal Cliques, arbitrary graph",743,,,,,,,,,"Cheng, Zhu, Ke, Chu",2012,https://dl.acm.org/doi/abs/10.1145/2339530.2339724,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
60.4,Clique Problems,0.001,k-Clique,Max-Weight k-Clique,744,,,,,,,,,"Depolli, Konc, Rozman, Trobec, Janezic",2013,https://pubs.acs.org/doi/full/10.1021/ci4002525,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
60.4,Clique Problems,0.001,k-Clique,,745,,,,,,,,,"Xiang, Guo, Aboulnaga",2013,https://ieeexplore.ieee.org/abstract/document/6544815,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
60,Clique Problems,0.001,Enumerating Maximal Cliques,"Enumerating Maximal Cliques, arbitrary graph",746,,,,,,,,,"Chen, You, Li, Ives",2014,https://wowbigdata.cn/paper/clique.pdf,,,,,,,,O(|E| mu),,,,O(|E| mu) ??,,,,"|E|: number of edges
mu: number of cliques",,,,BSP; MapReduce model,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
60,Clique Problems,0.001,Enumerating Maximal Cliques,"Enumerating Maximal Cliques, arbitrary graph",747,,,,,,,,,"Svendsen, Mukherjee, Tirthapura",2015,https://www.sciencedirect.com/science/article/pii/S0743731514001531,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
60.4,Clique Problems,0.001,k-Clique,Max-Weight k-Clique,748,,,,,,,,,"El Baz, Hifi, Wu, Shi",2016,https://ieeexplore.ieee.org/abstract/document/7529942,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
60,Clique Problems,0.001,Enumerating Maximal Cliques,"Enumerating Maximal Cliques, arbitrary graph",749,,,,,,,,,"Lessley, Perciano, Mathai, Childs, Bethel",2017,https://ieeexplore.ieee.org/abstract/document/8231847,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
60.4,Clique Problems,0.001,k-Clique,Max-Weight k-Clique,750,,,,,,,,,"Lu, Yu, Wei, Zhang",2017,https://dl.acm.org/doi/abs/10.14778/3137628.3137660,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
60.4,Clique Problems,0,k-Clique,Max-Weight k-Clique,751,,,,,,,,,"Kiziloz, Dokeroglu",2018,https://www.sciencedirect.com/science/article/abs/pii/S0360835218300548,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
60,Clique Problems,1,Enumerating Maximal Cliques,"Enumerating Maximal Cliques, arbitrary graph",752,,,,,,,,,"Das, Sanei-Mehri, Tirthapura",2018,https://ieeexplore.ieee.org/abstract/document/8638066,,,,,,,,$O(3^{n/3}/(M \log{n}) +P)$,$O(M \log{n})$,6.1,,$O(3^{n/3})$,938,,,"n: number of vertices
M: size of maximum clique
p: number of processors
",,,,shared memory (CRCW PRAM),130,,,,,,,,,,,,,,1,p,937.9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
60.1,Clique Problems,0.001,k-Clique,k-Clique,753,,,,,,,,,Garcia,2019,https://iris.uniroma1.it/bitstream/11573/1283982/1/Tesi_dottorato_Renan.pdf,,,,,,,,$O(k m)$ ?,$O(k m)$,,,$O(m^{k/2})$,,,,"m: number of edges
k: required clique size",,,,fork/join shared memory,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
60,Clique Problems,0.001,Enumerating Maximal Cliques,"Enumerating Maximal Cliques, arbitrary graph",754,,,,,,,,,"Hua, Zhong, Liu, Wang",2020,https://iopscience.iop.org/article/10.1088/1757-899X/790/1/012076/meta,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
60.4,Clique Problems,0.001,k-Clique,Max-Weight k-Clique,755,,,,,,,,,"Sevinc, Dokeroglu",2020,https://link.springer.com/article/10.1007/s00500-019-04122-z,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
60.4,Clique Problems,0,k-Clique,Max-Weight k-Clique,756,,,,,,,,,"Shimizu, Yamaguchi, Masuda",2021,https://www.sciencedirect.com/science/article/abs/pii/S1572528621000256,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
60.4,Clique Problems,0.001,k-Clique,Max-Weight k-Clique,757,,,,,,,,,"Kadivar, Mohammadi",2023,https://www.researchsquare.com/article/rs-3111268/v1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
60,Clique Problems,0.001,Enumerating Maximal Cliques,"Enumerating Maximal Cliques, arbitrary graph",758,,,,,,,,,"Kose, Weckwerth, Linke, Fiehn",2001,https://academic.oup.com/bioinformatics/article/17/12/1198/225504,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
61,The Traveling-Salesman Problem,0.001,The Traveling-Salesman Problem,,759,,,1,1,,,,,"Burkhovetskiy, Steinberg",2017,https://www.sciencedirect.com/science/article/pii/S187705091732375X,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
61,The Traveling-Salesman Problem,0.001,The Traveling-Salesman Problem,,760,,,1,,,,,,Mohan,1983,https://www.osti.gov/biblio/5214576,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Experience with two parallel programs solving the traveling salesman problem,J. Mohan,,,,,,,,,,,,,,,,,,,,,,,
61,The Traveling-Salesman Problem,0.001,The Traveling-Salesman Problem,,761,,,1,1,,,,,"Pekny, Miller",1990,https://dl.acm.org/doi/pdf/10.1145/100348.100358,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,A Parallel Branch and Bound Algorithm For Solving Large Asymmetrlc l?aveling Salesman Problems,"Joseph F. Pekny, Donald L. Miller 
 ",,,,,,,,,,,,,,,,,,,,,,,
61,The Traveling-Salesman Problem,0.001,The Traveling-Salesman Problem,,762,,,1,1,,,,,"Pruul, Nemhauser, Rushmeier",1988,https://www.sciencedirect.com/science/article/abs/pii/0167637788900673,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,BRANCH-AND-BOUND AND PARALLEL COMPUTATION: A HISTORICAL NOTE ,E.A. PRUUL and G.L. NEMHAUSER,,,,,,,,,,,,,,,,,,,,,,,
61,The Traveling-Salesman Problem,0.001,The Traveling-Salesman Problem,,763,,,1,1,,,,,"Quinn, Deo ",1986,https://link.springer.com/article/10.1007/BF01939360,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,AN UPPER BOUND FOR THE SPEEDUP OF PARALLEL BEST-BOUND BRANCH-AND-BOUND ALGORITHMS t,"MJ Quinn, N Deo",Analizes Mohan,,,,,,,,,,,,,,,,,,,,,,
62,Poisson Problem,0.001,2-Dimensional Poisson Problem,2-Dimensional Poisson Problem,764,,,1,1,O(n^3/p)?,,,[https://ieeexplore.ieee.org/document/5009160 Buzbee [SOR] (1973)],Buzbee [SOR],1973,https://ieeexplore.ieee.org/document/5009160,,,,,,,,O(n^3/p)?,O(n)?,,,O(n^3),,https://ieeexplore.ieee.org/document/5009160,,"n: dimension of grid (where grid is discretized)
p: number of processors",n,,,,,words,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
62,Poisson Problem,1,2-Dimensional Poisson Problem,2-Dimensional Poisson Problem,765,,,1,1,O(log n),,,"[https://link.springer.com/article/10.1007/BF02259647 Sameh, Chen, Kuck (1976)]","Sameh, Chen, Kuck",1976,https://link.springer.com/article/10.1007/BF02259647,,,,,,,,O(log n),O(log n),1,https://link.springer.com/article/10.1007/BF02259647,O(n^2 log n),21,,no,n: dimension of grid (where grid is discretized),n,,,shared memory MIMD,300,words,,,,,,,,0,,0,,0,1,O(n^2),20,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
62,Poisson Problem,0.001,2-Dimensional Poisson Problem,2-Dimensional Poisson Problem,766,,,1,1,O(log n)?,,,[https://www.osti.gov/servlets/purl/6623927#page=104 Grosch (1978)],Grosch,1978,https://www.osti.gov/servlets/purl/6623927#page=104,,,,,,,,O(log n)?,O(log n)?,,,O(n^2 log n)?,,,no,n: dimension of grid (where grid is discretized),n,,,"""array computer""??",,words,,,,,,,,0,,0,,0,1,O(n^2),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
62,Poisson Problem,1,2-Dimensional Poisson Problem,2-Dimensional Poisson Problem,767,,,1,1,O(log n),,,[https://www.sciencedirect.com/science/article/pii/S016781918490293X Vatjersic (1984)],Vatjersic,1984,https://www.sciencedirect.com/science/article/pii/S016781918490293X,,,,,,,,O(log n),O(log n),1,https://www.sciencedirect.com/science/article/pii/S016781918490293X,O(n^2 log n),21,,no,n: dimension of grid (where grid is discretized),n,,,SIMD,200,words,,,,,,,,0,,0,,0,1,O(n^2),20,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
62,Poisson Problem,0.001,2-Dimensional Poisson Problem,2-Dimensional Poisson Problem,768,,,1,1,O(log n)?,,,"[https://onlinelibrary.wiley.com/doi/full/10.1002/num.20556 Xu, Wang (2011)]","Xu, Wang",2011,https://onlinelibrary.wiley.com/doi/full/10.1002/num.20556,,,,,,,,O(log n)?,O(log n)?,,,O(n^2 log n)?,,,no,n: dimension of grid (where grid is discretized),n,,,MIMD?,,words,,,,,,,,0,,0,,0,1,O(n^2),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
62,Poisson Problem,0.001,2-Dimensional Poisson Problem,2-Dimensional Poisson Problem,769,,,1,1,,,,"[https://www.sciencedirect.com/science/article/pii/S0021999114007256 Notay, Napov (2015)]","Notay, Napov",2015,https://www.sciencedirect.com/science/article/pii/S0021999114007256,,,,,,,,,,,,,,,,n: dimension of grid (where grid is discretized),n,,,,,words,,,,,,,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
62,Poisson Problem,1,2-Dimensional Poisson Problem,2-Dimensional Poisson Problem,770,,,1,1,O(n log n)?,,,[https://www.dynamicpublishers.com/Neural/NPSC2015/14-npsc-267-276.pdf Chen (2015)],Chen,2015,https://www.dynamicpublishers.com/Neural/NPSC2015/14-npsc-267-276.pdf,,,,,,,,O(n log n)?,O(n log n)?,11,,O(n^2 log n)?,21,,no,n: dimension of grid (where grid is discretized),n,,,networked computers,700,words,,,,,,,,0,,0,,0,1,O(n),10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
63,Poisson Problem,1,3-Dimensional Poisson Problem,3-Dimensional Poisson Problem,771,,,1,1,O((n^3 log n)/p)?,,,"[https://journals.sagepub.com/doi/abs/10.1177/109434200101500104 Giraud, Guivarch, Stein (2001)]","Giraud, Guivarch, Stein",2001,https://journals.sagepub.com/doi/abs/10.1177/109434200101500104,,,,,,,,O((n^3 log n)/p)?,O(n^2 log n)?,21,,O(n^3 log n)?,31,,no,"n: dimension of grid (where grid is discretized)
p: number of processors",n,,,distributed memory,700,words,,,,,,,,0,,0,,0,1,p,10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
63,Poisson Problem,0.001,3-Dimensional Poisson Problem,3-Dimensional Poisson Problem,772,,,1,1,O((n^3 log n)/p)?,,,"[https://ieeexplore.ieee.org/abstract/document/5452414 Ament, Knittel, Weiskopf, Strasser (2010)]","Ament, Knittel, Weiskopf, Strasser",2010,https://ieeexplore.ieee.org/abstract/document/5452414,,,,,,,,O((n^3 log n)/p)?,O(n^2 log n)?,21,,O(n^3 log n)?,31,,no,"n: dimension of grid (where grid is discretized)
p: number of processors",n,,,SIMD,,words,,,,,,,,0,,0,,0,1,p,10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
63,Poisson Problem,0.001,3-Dimensional Poisson Problem,3-Dimensional Poisson Problem,773,,,1,1,O((n^3 log n)/p)?,,,"[https://www.sciencedirect.com/science/article/abs/pii/S0010465511001809 Budiardja, Cardall (2011)]","Budiardja, Cardall",2011,https://www.sciencedirect.com/science/article/abs/pii/S0010465511001809,,,,,,,,O((n^3 log n)/p)?,O(n^2 log n)?,,,O(n^3 log n)?,,,no,"n: dimension of grid (where grid is discretized)
p: number of processors",n,,,CREW PRAM with MPI?,,words,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
63,Poisson Problem,0.001,3-Dimensional Poisson Problem,3-Dimensional Poisson Problem,774,,,1,1,O(n^2 log n)?,,,"[https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=224bb1891102e79342f861507c4122d07be1b571#page=242 Zhao Ning, Wang XuBen (2012)]","Zhao Ning, Wang XuBen",2012,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=224bb1891102e79342f861507c4122d07be1b571#page=242,,,,,,,,O(n^2 log n)?,O(n^2 log n)?,,,O(n^3 log n)?,,,no,n: dimension of grid (where grid is discretized),n,,,CUDA?,,words,,,,,,,,0,,0,,0,1,O(n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
64,Delaunay Triangulation,1,2-Dimensional Delaunay Triangulation,2-Dimensional Delaunay Triangulation,775,,,1,1,O(log^2 n),,,"[https://link.springer.com/content/pdf/10.1007/BF01762120.pdf Aggarwal, Chazelle, Guibas, Ó'Dúnlaing, Yap (1988)]","Aggarwal, Chazelle, Guibas, Ó'Dúnlaing, Yap",1988,https://link.springer.com/content/pdf/10.1007/BF01762120.pdf,,,,,,,,O(log^2 n),O(log^2 n),2,https://link.springer.com/article/10.1007/PL00008262,O(n log^2 n)?,12,,no,n: number of points,n,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(n),10,0,0,,,,,"""Shamos (1977)"" gave reductions from Voronoi diagrams to other geometric proximity problems, including closest pair",,,,,,,,,,,,,,,,,,,,,,
64,Delaunay Triangulation,1,2-Dimensional Delaunay Triangulation,2-Dimensional Delaunay Triangulation,776,,,1,1,O(log^2 n),,,"[https://link.springer.com/chapter/10.1007/BFb0032049 Cole, Goodrich, Ó'Dúnlaing (1990)]","Cole, Goodrich, Ó'Dúnlaing",1990,https://link.springer.com/chapter/10.1007/BFb0032049,,,,,,,,O(log^2 n),O(log^2 n),2,https://link.springer.com/article/10.1007/PL00008262,O(n log n),11,https://link.springer.com/article/10.1007/PL00008262,yes,n: number of points,n,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(n/log n),9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
64,Delaunay Triangulation,0.001,,,777,,,1,1,O(n),,,"[ Saxena, Bhatt, Prasad (1986)]","Saxena, Bhatt, Prasad",1986,,,,,,,,,O(n),O(n),10,https://link.springer.com/chapter/10.1007/3-540-18099-0_45,O(n log n),11,,,n: number of points,n,,,CREW PRAM,120,,,,,,,,,0,,,,0,1,O(log n),1,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
64,Delaunay Triangulation,0.001,,,778,,,1,1,O(log n log log n),,,"[ Saxena, Bhatt, Prasad (1986)]","Saxena, Bhatt, Prasad",1986,,,,,,,,,O(log n log log n),O(log n log log n),1.1,https://link.springer.com/chapter/10.1007/3-540-18099-0_45,O(n^2 log n log log n),21.1,,,n: number of points,n,,,CREW PRAM,120,,,,,,,,,0,,,,0,1,O(n^2),20,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
64,Delaunay Triangulation,0.001,,,779,,,1,1,O(log log n),,,"[ Saxena, Bhatt, Prasad (1986)]","Saxena, Bhatt, Prasad",1986,,,,,,,,,O(log log n),O(log log n),0.1,https://link.springer.com/chapter/10.1007/3-540-18099-0_45,O(n^3 log log n),30.1,,,n: number of points,n,,,CREW PRAM,120,,,,,,,,,0,,,,0,1,O(n^3),30,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
64,Delaunay Triangulation,0.001,,,780,,,1,1,O(1),,,"[ Saxena, Bhatt, Prasad (1986)]","Saxena, Bhatt, Prasad",1986,,,,,,,,,O(1),O(1),0,https://link.springer.com/chapter/10.1007/3-540-18099-0_45,O(n^4),40,,,n: number of points,n,,,common CRCW PRAM,132,,,,,,,,,0,,,,0,1,O(n^4),40,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
64,Delaunay Triangulation,1,2-Dimensional Delaunay Triangulation,2D,781,,,,,O(nlogn),,,"[Blelloch, G., Miller, G., Hardwick, J. et al. Design and Implementation of a Practical Parallel Delaunay Algorithm . Algorithmica 24, 243–269 (1999). https://doi.org/10.1007/PL00008262 Belloch et al. (1999)]",Belloch et al.,1999,"Blelloch, G., Miller, G., Hardwick, J. et al. Design and Implementation of a Practical Parallel Delaunay Algorithm . Algorithmica 24, 243–269 (1999). https://doi.org/10.1007/PL00008262",,,,,,,,$O(\log^3 n)$,$O(\log^3 n)$,3,https://link.springer.com/article/10.1007/PL00008262,$O(n\log n)$,11,https://link.springer.com/article/10.1007/PL00008262,,n: number of points,n,,,CREW PRAM,120,,,,,,,,,0,,,,0,1,$O(n/\log n)$,8.9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
64,Delaunay Triangulation,1,2-Dimensional Delaunay Triangulation,2-Dimensional Delaunay Triangulation,782,,,1,1,O(nlogn),,,"[https://web.archive.org/web/20180425231851/https://www.cs.cmu.edu/~ygu1/paper/SPAA16/Incremental.pdf Belloch, Gu, Shun, Sun (2006)]","Belloch, Gu, Shun, Sun",2006,https://web.archive.org/web/20180425231851/https://www.cs.cmu.edu/~ygu1/paper/SPAA16/Incremental.pdf,,,,0,0,4,n: 4,$O(\log^2 n)$,$O(\log^2 n)$,2,https://web.archive.org/web/20180425231851/https://www.cs.cmu.edu/~ygu1/paper/SPAA16/Incremental.pdf,$O(n\log n)$,11,https://web.archive.org/web/20180425231851/https://www.cs.cmu.edu/~ygu1/paper/SPAA16/Incremental.pdf,yes,n: number of points,n,,,CRCW PRAM,130,words,3,n: 3,O(n),"Keep track of triangles in current triangulation, based on which points have been added so far and which triangles to remove (see other incremental algos)",1,0,,1,Las Vegas?,0,,0,1,$O(n/\log n)$,9,0,0,,,,,,,,,,,,,,,9965,,,,,,,,,4,,,Combinatorics
64,Delaunay Triangulation,0.001,2-Dimensional Delaunay Triangulation,2-Dimensional Delaunay Triangulation,783,,,,,O((n/p)^2 + (n/p) log p)?,,,"[https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=574023 Lee, Park, Park (1997)]","Lee, Park, Park",1997,https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=574023,,,,,,,,O((n/p)^2 + (n/p) log p)?,O(log n)?,1,,O(n^2)?,20,,no,"n: number of points
p: number of processors",n,,,CREW PRAM? (TRAM??),120,,,,,,,,,0,,0,,0,1,p,19,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
64,Delaunay Triangulation,1,2-Dimensional Delaunay Triangulation,2-Dimensional Delaunay Triangulation,784,,,,,O((n log n log p)/p),,,[https://dl.acm.org/doi/pdf/10.1145/258492.258516 Hardwick (1997)],Hardwick,1997,https://dl.acm.org/doi/pdf/10.1145/258492.258516,,,,,,,,O((n log n log p)/p),O(log^2 n),2,,O(n log n),11,,no,"n: number of points
p: number of processors",n,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,p,9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
64,Delaunay Triangulation,0.001,2-Dimensional Delaunay Triangulation,2-Dimensional Delaunay Triangulation,785,,,,,O((n/p)^2 + (n/p) log p)?,,,"[https://onlinelibrary.wiley.com/doi/epdf/10.1111/1467-8659.1230129 Cignoni, Montani, Perego, Scopigno (1993)]","Cignoni, Montani, Perego, Scopigno",1993,https://onlinelibrary.wiley.com/doi/epdf/10.1111/1467-8659.1230129,,,,,,,,O((n/p)^2 + (n/p) log p)?,O(log n)?,1,,O(n^2)?,20,,no,"n: number of points
p: number of processors",n,,,MIMD,300,,,,,,,,,0,,0,,0,1,p,19,0,0,https://onlinelibrary.wiley.com/doi/abs/10.1002/cpe.4330070106,,,,,,,,,,,,,,,,,,,,,,,,,,
64,Delaunay Triangulation,0.001,3-Dimensional Delaunay Triangulation,3-Dimensional Delaunay Triangulation,786,,,,,poly(log n)?,,,"[https://dl.acm.org/doi/pdf/10.1145/169627.169667 Teng, Sullivan, Beichl, Puppo (1993)]","Teng, Sullivan, Beichl, Puppo",1993,https://dl.acm.org/doi/pdf/10.1145/169627.169667,,,,,,,,O(n)?,O(n)?,,,O(n^2)?,,,no,n: number of points,n,,,CREW PRAM?,120,,,,,,,,,0,,0,,0,1,O(n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
64,Delaunay Triangulation,0.001,2-Dimensional Delaunay Triangulation,2-Dimensional Delaunay Triangulation,787,,,,,,,,"[https://dl.acm.org/doi/abs/10.1145/984952.984966 Kohout, Kolingerova (2003)]","Kohout, Kolingerova",2003,https://dl.acm.org/doi/abs/10.1145/984952.984966,,,,,,,,,,,,,,,,n: number of points,n,,,,,,,,,,,,,0,,0,,0,1,,,0,0,https://www.sciencedirect.com/science/article/pii/S0167819105000323,,,,,,,,,,,,,,,,,,,,,,,,,,
64,Delaunay Triangulation,0.001,2-Dimensional Delaunay Triangulation,2-Dimensional Delaunay Triangulation,788,,,,,O((n/p)^2 + (n/p) log p)?,,,[https://www.sciencedirect.com/science/article/pii/S0168874X12001473 Lo (2012)],Lo,2012,https://www.sciencedirect.com/science/article/pii/S0168874X12001473,,,,,,,,O((n/p)^2 + (n/p) log p)?,O(log n)?,1,,O(n^2)?,20,,no,"n: number of points
p: number of processors",n,,,CREW PRAM?,120,,,,,,,,,0,,0,,0,1,p,19,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
64,Delaunay Triangulation,0.001,3-Dimensional Delaunay Triangulation,3-Dimensional Delaunay Triangulation,789,,,,,O((n/p)^2 + (n/p) log p)?,,,[https://www.sciencedirect.com/science/article/pii/S0045782512001570 Lo (2012)],Lo,2012,https://www.sciencedirect.com/science/article/pii/S0045782512001570,,,,,,,,O((n/p)^2 + (n/p) log p)?,O(log n)?,,,O(n^2)?,,,no,"n: number of points
p: number of processors",n,,,CREW PRAM?,120,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
64,Delaunay Triangulation,0.001,,,790,,,,,,,,"[https://link.springer.com/chapter/10.1007/978-3-642-41905-8_4 Chen, Gotsman (2013)]","Chen, Gotsman",2013,https://link.springer.com/chapter/10.1007/978-3-642-41905-8_4,,,,,,,,,,,,,,,,n: number of points,n,,,,,,,,,,,,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
64,Delaunay Triangulation,0.001,,,791,,,,,,,,"[https://www.sciencedirect.com/science/article/abs/pii/S0098300411000598 Wu, Guan, Gong (2011)]","Wu, Guan, Gong",2011,https://www.sciencedirect.com/science/article/abs/pii/S0098300411000598,,,,,,,,,,,,,,,,n: number of points,n,,,,,,,,,,,,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
64,Delaunay Triangulation,1,2-Dimensional Delaunay Triangulation,2-Dimensional Delaunay Triangulation,792,,,,,O(log^3 n),,,"[https://link.springer.com/article/10.1007/PL00008262 Blelloch, Miller, Hardwick, Talmor (1999)]","Blelloch, Miller, Hardwick, Talmor",1999,https://link.springer.com/article/10.1007/PL00008262,,,,,,,,O(log^3 n),O(log^3 n),3,,O(n log n),11,,yes,n: number of points,n,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(n)?,8.9,0,0,https://dl.acm.org/doi/pdf/10.1145/237218.237357,,,,,,,,,,,,,,,,,,,,,,,,,,
64,Delaunay Triangulation,1,2-Dimensional Delaunay Triangulation,2-Dimensional Delaunay Triangulation,793,,,,,O(log n),,,"[https://dl.acm.org/doi/10.1145/73007.73045 Reif, Sen (1989)]","Reif, Sen",1989,https://dl.acm.org/doi/10.1145/73007.73045,,,,,,,,O(log n),O(log n),1,https://dl.acm.org/doi/10.1145/73007.73045,O(n log n),11,https://dl.acm.org/doi/10.1145/73007.73045,yes,n: number of points,n,,,CREW PRAM,120,,,,,,,,,1,Las Vegas,0,,0,1,O(n),10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
64,Delaunay Triangulation,0.001,2-Dimensional Delaunay Triangulation,2-Dimensional Delaunay Triangulation,794,,,,,O((n/p) log(n/p) + (n/p) log p)?,,,[https://www.tandfonline.com/doi/full/10.1080/15481603.2014.946666 Wu et al. (2014)],Wu et al.,2014,https://www.tandfonline.com/doi/full/10.1080/15481603.2014.946666,,,,,,,,O((n/p) log(n/p) + (n/p) log p)?,O(log n)?,1,,O(n log n)?,11,,no,"n: number of points
p: number of processors",n,,,CREW PRAM?,120,,,,,,,,,0,,0,,0,1,p,10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
64,Delaunay Triangulation,0.001,,d-Dimensional Delaunay Triangulation,795,,,,,O(n^(ceil(d/2))/p)?,,,"[https://epubs.siam.org/doi/abs/10.1137/1.9781611974768.17 Funke, Sanders (2017)]","Funke, Sanders",2017,https://epubs.siam.org/doi/abs/10.1137/1.9781611974768.17,,,,,,,,O(n^(ceil(d/2))/p)?,O(n^(ceil(d/2))/p)?,,,O(n^(ceil(d/2)))?,,,no,"n: number of points
d: dimension of space
p: number of processors",n,,,,,,,,,,,,,0,,0,,0,1,p,,0,0,https://link.springer.com/chapter/10.1007/978-3-030-29400-7_12#Sec6,,,,,,,,,,,,,,,,,,,,,,,,,,
64,Delaunay Triangulation,0.001,2-Dimensional Delaunay Triangulation,"2-Dimensional Delaunay Triangulation, Spherical Delaunay Triangulation",796,,,,,,,,[https://gmd.copernicus.org/articles/6/1353/2013/ Jacobsen et al. (2013)],Jacobsen et al.,2013,https://gmd.copernicus.org/articles/6/1353/2013/,,,,,,,,,,,,,,,,n: number of points,n,,,,,,,,,,,,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
64,Delaunay Triangulation,0.001,2-Dimensional Delaunay Triangulation,2-Dimensional Delaunay Triangulation,797,,,,,O((n/p) log(n/p) + (n/p) log p)?,,,"[https://ieeexplore.ieee.org/abstract/document/1183458 Chen, Chuang, Wu (2002)]","Chen, Chuang, Wu",2002,https://ieeexplore.ieee.org/abstract/document/1183458,,,,,,,,O((n/p) log(n/p) + (n/p) log p)?,O(log n)?,1,,O(n log n)?,11,,,"n: number of points
p: number of processors",n,,,MPI,700,,,,,,,,,0,,0,,0,1,p,10,0,0,https://onlinelibrary.wiley.com/doi/abs/10.1002/cpe.1007,,,,,,,,,,,,,,,,,,,,,,,,,,
64,Delaunay Triangulation,0.001,,,798,,,,,,,,"[https://dl.acm.org/doi/abs/10.1145/3221269.3223034 Nguyen, Rhodes [TIPP] (2018)]","Nguyen, Rhodes [TIPP]",2018,https://dl.acm.org/doi/abs/10.1145/3221269.3223034,,,,,,,,,,,,,,,,n: number of points,n,,,,,,,,,,,,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
64,Delaunay Triangulation,0.001,,,799,,,,,,,,"[https://arxiv.org/pdf/2308.06484 Hadiniya, Ghodsi (2023)]","Hadiniya, Ghodsi",2023,https://arxiv.org/pdf/2308.06484,,,,,,,,,,,,,,,,n: number of points,n,,,,,,,,,,,,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
65,De Novo Genome Assembly,0.001,De Novo Genome Assembly,,800,,,,,,,,,"Georganas, Buluc, Chapman, Oliker, Rokhsar, Yelick",2014,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7013023,,,,,,,,,,,,,,,,,,,,MPP - Cray XC30 supercomputer,700,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
65,De Novo Genome Assembly,0.001,De Novo Genome Assembly,,801,,,,,,,,,"Jackson, Schnable, Aluru (YAGA)",2009,https://link.springer.com/content/pdf/10.1186/1471-2105-10-S1-S14.pdf,,,,,,,,O(g/p),O(log g),,https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-15-S9-S2,O(g),,,,"g: size of genome
n: number of nodes in the graph",,,,IBM Blue Gene/L,700,,,,,,,,,0,,,"""1% error rate is expected with current technology""",,1,p <= g/log g,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
65,De Novo Genome Assembly,0.001,De Novo Genome Assembly,,802,,,,,,,,,"Liu, Pande, Meyerhenke, Bader",2013,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6226376,,,,,,,,,,,,O(n log l) + O(n^2) + O(?),,,,,,,,shared memory,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
65,De Novo Genome Assembly,0.001,De Novo Genome Assembly,,803,,,,,,,,,"Simpson, Wong, Jackman, Schein, Jones, Birol (ABySS)",2009,https://genome.cshlp.org/content/19/6/1117.full.pdf,,,,,,,,,O(log g),,https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-15-S9-S2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
65,De Novo Genome Assembly,0.001,De Novo Genome Assembly,,804,,,,,,,,,"Liu, Schmidt, Maskell (PASHA)",2011,https://link.springer.com/content/pdf/10.1186/1471-2105-12-354.pdf,,,,,,,,,O(log g),,https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-15-S9-S2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
65,De Novo Genome Assembly,0.001,De Novo Genome Assembly,,805,,,,,,,,,"Meng, Seo, Balaji, Wei, Wang, Feng",2016,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7573818,,,,,,,,O(log log g),,,https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-15-S9-S2,O(n log log g)?,,,,"g: size of genome
n: number of nodes in the graph",,,,shared memory,,,,,,,,,,,,,,,,p <= length of longest path d_max,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
65,De Novo Genome Assembly,0.001,De Novo Genome Assembly,,806,,,,,,,,,"Li, Zhu, Ruan, Qian, Fang, Shi, Li, Li, Shan, Kristiansen, Li, Yang, Wang, Wang",2010,https://genome.cshlp.org/content/20/2/265.full.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
65,De Novo Genome Assembly,0.001,De Novo Genome Assembly,,807,,,,,,,,,"Guidi, Selvitopi, Ellis, Oliker, Yelick, Buluc (ELBA)",2021,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9460463,,,,,,,,,,,,,,,,,,,,distributed memory,700,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
66,The Subset-Sum Problem,1,Subset Sum,Subset Sum,808,,,1,1,O(n*2^n/p)?,,,[https://link.springer.com/chapter/10.1007/3-540-52921-7_57 Djokić et al [enumeration of subsets] (1990)],Djokić et al [enumeration of subsets],1990,https://link.springer.com/chapter/10.1007/3-540-52921-7_57,,,,0,0,4,n: 4,O(n*2^n/p)?,O(n),10,,O(n*2^n)?,1010,,no,"n: the number of integers in the set
t: target sum
p: number of processors; 1≤p≤2^n",n,,,(shared memory? no communication),300,words,3,n: 3,O(n),"Keep track of triangles in current triangulation, based on which points have been added so far and which triangles to remove (see other incremental algos)",1,0,,0,,0,,0,1,p,1000,0,0,,,,,,,,,,,,,,,9965,,,,,,,,,4,,,Combinatorics
66,The Subset-Sum Problem,1,Subset Sum,Subset Sum,809,,,1,1,O(n*2^(n*eps/2)),,,[https://ieeexplore.ieee.org/document/73593 Ferreira (1991)],Ferreira,1991,https://ieeexplore.ieee.org/document/73593,,,,0,0,4,n: 4,O(n*2^(n*eps/2)),O(n),10,https://ieeexplore.ieee.org/document/73593,O(n*2^(n/2)),988.1,,no,"n: the number of integers in the set
t: target sum
eps: processor parameter",n,,,CREW SIMD PRAM,120,words,3,n: 3,O(n),"Keep track of triangles in current triangulation, based on which points have been added so far and which triangles to remove (see other incremental algos)",1,0,,0,,0,,0,1,O(n*2^(n*(1-eps)/2)),988,0,0,,,,,,,,,,,,,,,9965,,,,,,,,,4,,,Combinatorics
66,The Subset-Sum Problem,1,Subset Sum,Subset Sum,810,,,1,1,O(n * 2^(n/2) * sigma(2^(n/2))/p),,,"[https://www.sciencedirect.com/science/article/abs/pii/S0743731596901501 Ferreira, Robson (1996)]","Ferreira, Robson",1996,https://www.sciencedirect.com/science/article/abs/pii/S0743731596901501,,,,0,0,4,n: 4,O(n * 2^(n/2) * sigma(2^(n/2))/p),O(n * 2^(n/4) * sigma(2^(n/2))),986.1,https://www.sciencedirect.com/science/article/abs/pii/S0743731596901501,O(n * 2^(n/2) * sigma(2^(n/2))),988.1,,no,"n: the number of integers in the set
t: target sum
p: number of processors; 1≤p≤2^(n/4)
sigma(m): sorting overhead in parallel sorting; optimal is O(1)",n,,,EREW PRAM,110,words,3,n: 3,O(n),"Keep track of triangles in current triangulation, based on which points have been added so far and which triangles to remove (see other incremental algos)",1,0,,0,,0,,0,1,p,986,0,0,,,,,,,,,,,,,,,9965,,,,,,,,,4,,,Combinatorics
66,The Subset-Sum Problem,1,Subset Sum,Subset Sum,811,,,1,1,O(2^(n/2)/p),,,"[https://www.sciencedirect.com/science/article/pii/S0377221705008258 Sanches, Soma, Yanasse (2007)]","Sanches, Soma, Yanasse",2007,https://www.sciencedirect.com/science/article/pii/S0377221705008258,,,,0,0,4,n: 4,O(2^(n/2)/p),O(n),10,https://www.sciencedirect.com/science/article/pii/S0377221705008258,O(2^(n/2)),988,,no,"n: the number of integers in the set
t: target sum
p: number of processors; 1≤p≤2^(n/2)/n and p is a power of 2",n,,,CREW PRAM,120,words,3,n: 3,O(n),"Keep track of triangles in current triangulation, based on which points have been added so far and which triangles to remove (see other incremental algos)",1,0,,0,,0,,0,1,p,987.9,0,0,,,,,,,,,,,,,,,9965,,,,,,,,,4,,,Combinatorics
66,The Subset-Sum Problem,1,Subset Sum,Subset Sum,812,,,1,1,O(2^(3n/8)),,,[https://www.sciencedirect.com/science/article/pii/S0167819107001238 Chedid (2008)],Chedid,2008,https://www.sciencedirect.com/science/article/pii/S0167819107001238,,,,0,0,4,n: 4,O(2^(3n/8)),O(2^(3n/8)),987,https://www.sciencedirect.com/science/article/pii/S0167819107001238,O(2^(n/2)),988,https://www.sciencedirect.com/science/article/pii/S0167819107001238,yes,"n: the number of integers in the set
t: target sum",n,,,CREW SIMD PRAM,120,words,3,n: 3,O(n),"Keep track of triangles in current triangulation, based on which points have been added so far and which triangles to remove (see other incremental algos)",1,0,,0,,0,,0,1,O(2^(n/8)),984,0,0,,,,,,,,,,,,,,,9965,,,,,,,,,4,,,Combinatorics
66,The Subset-Sum Problem,1,Subset Sum,Subset Sum,813,,,1,1,O(2^(n(1+eps)/4)),,,"[https://link.springer.com/article/10.1007/BF02973436 Li, Li, Li (2008)]","Li, Li, Li",2008,https://link.springer.com/article/10.1007/BF02973436,,,,,,,,O(2^(n(1+eps)/4)),O(2^(n/4)),986,https://link.springer.com/article/10.1007/BF02973436,O(2^(n/2)),988,https://link.springer.com/article/10.1007/BF02973436,yes,"n: the number of integers in the set
t: target sum
eps: processor parameter",n,,,EREW PRAM,110,words,3,n: 3,O(n),"Keep track of triangles in current triangulation, based on which points have been added so far and which triangles to remove (see other incremental algos)",1,0,,0,,0,,0,1,O(2^(n(1-eps)/4)),986,0,0,,,,,,,,,,,,,,,9965,,,,,,,,,4,,,Combinatorics
66,The Subset-Sum Problem,1,Subset Sum,Subset Sum,814,,,1,1,O(n/p * (c - w_min) + (c + w_max - w_min)/p + n + log p),,,"[https://www.sciencedirect.com/science/article/pii/S0304397508004854 Sanches, Soma, Yanasse [Algorithm 1] (2008)]","Sanches, Soma, Yanasse [Algorithm 1]",2008,https://www.sciencedirect.com/science/article/pii/S0304397508004854,,,,0,0,4,n: 4,O(n/p * (c - w_min) + (c + w_max - w_min)/p + n + log p),O(n/w_min * (c - w_min) + (c + w_max - w_min)/w_min + n + log(w_min)),,,O(n(c - w_min) + (c + w_max - w_min) + n)?,,,no,"n: the number of integers in the set
w_min: minimum weight
w_max: maximum weight
c: capacity
p: number of processors; 1≤p≤w_min",n,,,CREW PRAM,120,words,3,n: 3,O(n),"Keep track of triangles in current triangulation, based on which points have been added so far and which triangles to remove (see other incremental algos)",1,0,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,9965,,,,,,,,,4,,,Combinatorics
66,The Subset-Sum Problem,1,Subset Sum,Subset Sum,815,,,1,1,O(n/p * (c - 2*w_min) + c/p + n),,,"[https://www.sciencedirect.com/science/article/pii/S0304397508004854 Sanches, Soma, Yanasse [Algorithm 2a] (2008)]","Sanches, Soma, Yanasse [Algorithm 2a]",2008,https://www.sciencedirect.com/science/article/pii/S0304397508004854,,,,0,0,4,n: 4,O(n/p * (c - 2*w_min) + c/p + n),O((c - 2*w_min) + c/n + n),,,O(n(c - 2*w_min) + c + n)?,,,no,"n: the number of integers in the set
w_min: minimum weight
w_max: maximum weight
c: capacity
p: number of processors; log n≤p≤n",n,,,EREW PRAM,110,words,3,n: 3,O(n),"Keep track of triangles in current triangulation, based on which points have been added so far and which triangles to remove (see other incremental algos)",1,0,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,9965,,,,,,,,,4,,,Combinatorics
66,The Subset-Sum Problem,1,Subset Sum,Subset Sum,816,,,1,1,O((n-2 log c)(c - 2*w_min)/p + c/p + n - 2 log c + log^2 c),,,"[https://www.sciencedirect.com/science/article/pii/S0304397508004854 Sanches, Soma, Yanasse [Algorithm 3] (2008)]","Sanches, Soma, Yanasse [Algorithm 3]",2008,https://www.sciencedirect.com/science/article/pii/S0304397508004854,,,,0,0,4,n: 4,O((n-2 log c)(c - 2*w_min)/p + c/p + n - 2 log c + log^2 c),O((n-2 log c)(c - 2*w_min)/n + c/n + n - 2 log c + log^2 c),,,O((n-2 log c)(c - 2*w_min) + c + n - 2 log c + log^2 c)?,,,no,"n: the number of integers in the set
w_min: minimum weight
w_max: maximum weight
c: capacity
p: number of processors; log(n - 2 log c)≤p≤n - 2 log c",n,,,CREW PRAM,120,words,3,n: 3,O(n),"Keep track of triangles in current triangulation, based on which points have been added so far and which triangles to remove (see other incremental algos)",1,0,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,9965,,,,,,,,,4,,,Combinatorics
66,The Subset-Sum Problem,1,Subset Sum,Subset Sum,817,,,1,1,O(nt/p),,,[https://onlinelibrary.wiley.com/doi/pdf/10.1002/cpe.2800 Bokhari (2012)],Bokhari,2012,https://onlinelibrary.wiley.com/doi/pdf/10.1002/cpe.2800,,,,0,0,4,n: 4,O(nt/p),O(n),10,,O(nt),1010,,no,"n: the number of integers in the set
t: target sum
p: number of processors; 1≤p≤t",n,,,CREW PRAM?,300,words,3,n: 3,O(n),"Keep track of triangles in current triangulation, based on which points have been added so far and which triangles to remove (see other incremental algos)",1,0,,0,,0,,0,1,p,1000,0,0,,,,,,,,,,,,,,,9965,,,,,,,,,4,,,Combinatorics
66,The Subset-Sum Problem,1,Subset Sum,Subset Sum,818,,,1,1,O(2^(n/2-eps)),,,[https://link.springer.com/chapter/10.1007/978-3-642-33065-0_16 Chedid (2012)],Chedid,2012,https://link.springer.com/chapter/10.1007/978-3-642-33065-0_16,,,,0,0,4,n: 4,O(2^(n/2-eps)),O(n^2),20,https://link.springer.com/chapter/10.1007/978-3-642-33065-0_16,O(2^(n/2)),988,https://link.springer.com/chapter/10.1007/978-3-642-33065-0_16,yes,"n: the number of integers in the set
t: target sum
eps: processor parameter; 0 ≤ eps ≤ n/2 - 2 log n + 2",n,,,CREW PRAM,120,words,3,n: 3,O(n),"Keep track of triangles in current triangulation, based on which points have been added so far and which triangles to remove (see other incremental algos)",1,0,,0,,0,,0,1,2^eps,987.8,0,0,,,,,,,,,,,,,,,9965,,,,,,,,,4,,,Combinatorics
66,The Subset-Sum Problem,1,Subset Sum,Subset Sum,819,,,1,1,O(n(m-w_min)/p),,,"[https://onlinelibrary.wiley.com/doi/full/10.1002/cpe.3636 Curtis, Sanches (2015)]","Curtis, Sanches",2015,https://onlinelibrary.wiley.com/doi/full/10.1002/cpe.3636,,,,0,0,4,n: 4,O(n(m-w_min)/p),O(n),10,https://onlinelibrary.wiley.com/doi/full/10.1002/cpe.3636,O(n(m-w_min)),1010,,no,"n: the number of integers in the set
w_min: minimum weight
c: capacity
m: min(c, sum of weights minus c)
p: number of processors; 1≤p≤m-w_min",n,,,CRCW PRAM,130,words,3,n: 3,O(n),"Keep track of triangles in current triangulation, based on which points have been added so far and which triangles to remove (see other incremental algos)",1,0,,0,,0,,0,1,p,1000,0,0,,,,,,,,,,,,,,,9965,,,,,,,,,4,,,Combinatorics
71,Disk Scheduling,0.001,Disk Scheduling,Disk Scheduling,820,,,,,,,,,"Kallahalla, Varman",1999,https://dl.acm.org/doi/pdf/10.1145/301816.301835,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
71,Disk Scheduling,0.001,Disk Scheduling,Disk Scheduling,821,,,,,,,,,"Kallahalla, Varman",1998,https://ieeexplore.ieee.org/abstract/document/738012,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
71,Disk Scheduling,0.001,Disk Scheduling,Disk Scheduling,822,,,,,,,,,"Chen, Stankovic, Kurose, Towsley",1991,https://link.springer.com/article/10.1007/BF00364960,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
71,Disk Scheduling,0.001,Disk Scheduling,Disk Scheduling,823,,,,,,,,,"Singh, Thapar, Bhatia, Singh, Goyal",2015,https://www.tandfonline.com/doi/full/10.1080/23311916.2015.1011929,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
71,Disk Scheduling,0.001,Disk Scheduling,Disk Scheduling,824,,,,,,,,,"Ertug, Kallahalla, Varman",2000,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=16d267557916645eb8405fe84d60cd82c0037f91,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
72,The Vertex Cover Problem,1,The Vertex Cover Problem,The Vertex Cover Problem,825,,,1,1,4 log n + O(k^k),,,"[https://link.springer.com/content/pdf/10.1007/BFb0057945.pdf Cesati, Ianni (1998)]","Cesati, Ianni",1998,https://link.springer.com/content/pdf/10.1007/BFb0057945.pdf,,,,,,,,4 log n + O(k^k),4 log n + O(k^k),,https://link.springer.com/chapter/10.1007/978-3-319-48749-6_35,O(n^2(log n + k^k))?,,,no,"n: number of vertices
m: number of edges
k: size of vertex cover (worst case O(n))",n,,,PRAM,100,,,,,,,,,0,,0,,0,1,O(n^2),,0,0,https://link.springer.com/chapter/10.1007/978-3-319-48749-6_35,,,,,,,,,,,,,,,,,,,,,,,,,,
72,The Vertex Cover Problem,0.001,The Vertex Cover Problem,The Vertex Cover Problem,826,,,1,1,O(((1.325)^k k^2 + kn)/p)?,,,[https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=5ae76bd80f9c074902c4aa079c3f485a3e3657bd Cheetham et. al. (2003)],Cheetham et. al.,2003,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=5ae76bd80f9c074902c4aa079c3f485a3e3657bd,,,,,,,,O(((1.325)^k k^2 + kn)/p)?,,,,,,,no,"n: number of vertices
m: number of edges
k: size of vertex cover (worst case O(n))
p: number of processors",n,,,BSP/CGM,400,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
72,The Vertex Cover Problem,1,,The Vertex Cover Problem for Two-Terminal Series-Parallel Graphs,827,,,1,1,O(log n),,,"[https://www.inderscienceonline.com/doi/abs/10.1504/IJHPCN.2006.013490 Nagy, Akl (2007)]","Nagy, Akl",2007,https://www.inderscienceonline.com/doi/abs/10.1504/IJHPCN.2006.013490,,,,,,,,O(log n),O(log n),,,O(n),,,yes,"n: number of vertices
m: number of edges
k: size of vertex cover (worst case O(n))",n,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,O(n/log n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
72,The Vertex Cover Problem,0.001,The Vertex Cover Problem,The Vertex Cover Problem,828,,,1,1,,,,[https://www.researchgate.net/profile/Henrique-Mongelli/publication/228439792_An_Alternative_Implementation_for_the_FPT_k-Vertex_Cover_Parallel_Algorithm/links/0a85e53584fdabd8da000000/An-Alternative-Implementation-for-the-FPT-k-Vertex-Cover-Parallel-Algorithm.pdf Mongelli et. al. (2009)],Mongelli et. al.,2009,https://www.researchgate.net/profile/Henrique-Mongelli/publication/228439792_An_Alternative_Implementation_for_the_FPT_k-Vertex_Cover_Parallel_Algorithm/links/0a85e53584fdabd8da000000/An-Alternative-Implementation-for-the-FPT-k-Vertex-Cover-Parallel-Algorithm.pdf,,,,,,,,,,,,,,,no,"n: number of vertices
m: number of edges
k: size of vertex cover (worst case O(n))
p: number of processors",n,,,BSP/CGM,400,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
72,The Vertex Cover Problem,0.001,The Vertex Cover Problem,The Vertex Cover Problem,829,,,1,1,O(k log^3 n),,,[https://link.springer.com/chapter/10.1007/978-3-319-48749-6_35 Abu-Khzam et. al. (2016)],Abu-Khzam et. al.,2016,https://link.springer.com/chapter/10.1007/978-3-319-48749-6_35,,,,,,,,O(k log^3 n),O(k log^3 n),6.23,https://link.springer.com/chapter/10.1007/978-3-319-48749-6_35,O(km log^3 n),16.23,,no,"n: number of vertices
m: number of edges
k: size of vertex cover (worst case O(n))",n,,,,,,,,,,,,,0,,0,,0,1,O(m),10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
73,CFG Problems,0.001,CFG Parsing,CFG Parsing,830,,,,,,,,,Sandstrom,1994,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=5e67d48a0091317de1723b5313ef3c9e25a58993,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
73,CFG Problems,0.001,,,831,,,,,,,,,Parallel Earley's method,??,,,,,,,,,O(n),O(n),10,https://dl.acm.org/doi/pdf/10.1145/181577.181586,O(n^3),30,https://dl.acm.org/doi/pdf/10.1145/181577.181586,,,,,,,,,,,,,,,,0,,0,,0,1,O(n^2),20,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
73,CFG Problems,1,CFG Parsing,CFG Parsing,832,,,,,,,,,"Barnard, Skillicorn",1992,https://d1wqtxts1xzle7.cloudfront.net/46626362/0096-0551_2892_2990022-f20160619-1704-57z2yz-libre.pdf?1466375637=&response-content-disposition=inline%3B+filename%3DContext_free_parsing_on_O_n_processors.pdf&Expires=1704697901&Signature=RfUXV3Dhjnmy3sy8VCZ~Amm8slq1aJ54V~IRPh3ywZcvOisrgcO0VFwzEn~njPOwrwFCqUXTk7DUhnpJgZCfG8Oqm5v~g2PC1eNhfrBWKe9GSnRIxU-cCG06MFJbVMOIhYvM652Ns1998gs6wa5KTOCHuTnA1VTTt8kdlrH8ZTfZD37GPNJQRpQH9tAyHX49HfoPQmNUZUCXckL1G~AmyaIzjkO2aNJ3QltWlBIz5gK65xc7h1FebZ4CudvZxbrXgH5OT7pZowKy2E0iO~qKl8KtOh~b4lHSoqiBJ36eKe77ymntWKKlyk~PDBFr-cMugULIMW8Bp9P7qW~XufKTog__&Key-Pair-Id=APKAJLOHF5GGSLRBV4ZA,,,,,,,,O(n^2),O(n^2),20,,O(n^3),30,,,,,,,PRAM,100,,,,,,,,,0,,0,,0,1,O(n),10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
74,Finding Frequent Itemsets,0.001,Finding Frequent Itemsets,,833,,,,,,,,,Kessl,2021,https://arxiv.org/pdf/2108.05038.pdf,,,,,,,,,,,,O(2^s·|M|),,,,"s: size of the longest MFI
M: all maximal frequent itemsets",,,,distributed memory,700,,,,,,,,,,,,,,,p <= |D|,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
74,Finding Frequent Itemsets,0.001,Finding Frequent Itemsets,,834,,,,,,,,,"Moonesinghe, Chung, Tan",2006,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=9141511a5c6da719c0417238daf275df04549aeb,,,,,,,,O(N^2/P^2) +O(nN/P)+O((∑_{k=1}^n (T_Merging_K + T_FP-Growth_K)) / P)+O(n^2 P),,,,,,,,"n: number of frequent items
N: number of transactions",,,,distributed memory,700,,,,,,,,,0,,0,,0,1,P<=N,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
74,Finding Frequent Itemsets,0.001,Finding Frequent Itemsets,,835,,,,,,,,,"Craus, Archip",2008,https://www.researchgate.net/profile/Alexandru-Archip/publication/234803256_A_generalized_parallel_algorithm_for_frequent_itemset_mining/links/54bcda5a0cf253b50e2d6afe/A-generalized-parallel-algorithm-for-frequent-itemset-mining.pdf,,,,,,,,,,,,,,,,n: num of individual frequent items,,,,distributed memory,700,,,,,,,,,0,,0,,0,1,m<=n,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
74,Finding Frequent Itemsets,0.001,Finding Frequent Itemsets,,836,,,,,,,,,"Veloso, Meira, Parthasarath",2003,https://cin.ufpe.br/~jtalr/Mestrado/Mineracao/veloso03new.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
74,Finding Frequent Itemsets,0.001,Finding Frequent Itemsets,,837,,,,,,,,,"Ye, Chiang",2006,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1691365,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
74,Finding Frequent Itemsets,0.001,Finding Frequent Itemsets,,838,,,,,,,,,"Mesa, Feregrino-Uribe, Cumplido, Hern´andez-Palancar",2010,https://www.researchgate.net/profile/Jose-Hernandez-Palancar/publication/220827298_A_Highly_Parallel_Algorithm_for_Frequent_Itemset_Mining/links/0046351e0577037d5b000000/A-Highly-Parallel-Algorithm-for-Frequent-Itemset-Mining.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
74,Finding Frequent Itemsets,0.001,Finding Frequent Itemsets,,839,,,,,,,,,"Zaki, Parthasarathy, Ogihara, Li",1997,https://link.springer.com/content/pdf/10.1023/A:1009773317876.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
74,Finding Frequent Itemsets,0.001,Finding Frequent Itemsets,,840,,,,,,,,,"Agrawal, Shafer",1996,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=553164,,,,,,,,,,,,,,,,,,,,distributed memory,700,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
74,Finding Frequent Itemsets,0.001,Finding Frequent Itemsets,,841,,,,,,,,,"Chung, Luo",2003,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=9e9b834bf1c8e01c9b28388ac63b410abc7b5b50,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
74,Finding Frequent Itemsets,0.001,Finding Frequent Itemsets,,842,,,,,,,,,"Ozkural, Uçar, Aykanat",2011,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5703072,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
74,Finding Frequent Itemsets,0.001,Finding Frequent Itemsets,,843,,,,,,,,,"Phan, Le",2018,https://link.springer.com/chapter/10.1007/978-3-319-95786-9_21,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
74,Finding Frequent Itemsets,0.001,Finding Frequent Itemsets,,844,,,,,,,,,"Zhang, Zhang, Liao, Jin",2018,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8465270,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
74,Finding Frequent Itemsets,0.001,Finding Frequent Itemsets,,845,,,,,,,,,"Zaiane, El-Hajj, Lu",2001,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=989600,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
74,Finding Frequent Itemsets,0.001,Finding Frequent Itemsets,,846,,,,,,,,,"Cheung, Hu, Xia",1998,https://dl.acm.org/doi/pdf/10.1145/277651.277694,,,,,,,,,,,,,,,,,,,,SMP (shared memory),300,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
74,Finding Frequent Itemsets,0.001,Finding Frequent Itemsets,,847,,,,,,,,,"Nadimi-Shahraki, Mansouri",2017,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8078825,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
74,Finding Frequent Itemsets,0.001,Finding Frequent Itemsets,,848,,,,,,,,,"Sivanandam, Sumathi, Hamsapriya, Babu",2004,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=a235ab84bb6b6e888b658b9761a58bd0ea949b60,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
75,Data Compression,0.001,,,849,,,,,,,,,"CZ algorithm - Jiancheng, Yiqin, Yu",2017,https://www.hindawi.com/journals/js/2017/4209397/,,,,,,,,$O(N+\log{M})$,,,,,,,,"N: data window size
M: number of symbols",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
75,Data Compression,0,Lossless Compression,Lossless Compression,850,,,,,,,,,De Agostino,2001,https://www.sciencedirect.com/science/article/abs/pii/S0020025501001001,,,,,,,,"""polynomial""",,,,,,,,$\log^k{n}$: size of dictionary,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
75,Data Compression,1,Lossless Compression,Lossless Compression,851,,,,,,,,,"Edwards, Vishkin",2014,https://www.sciencedirect.com/science/article/pii/S0304397513007615,,,,,,,,$O(\log^2{n})$,$O(\log^2{n})$,2,,$O(n)$,10,,,$n$: string length,,,,PRAM,100,,,,,,,,,,,,,,1,$O(n/ \log^2{n})$ ?,8.9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
75,Data Compression,0.001,Lossless Compression,Lossless Compression,852,,,,,,,,,"Krishnan, Baron",2015,https://ieeexplore.ieee.org/abstract/document/7042260?casa_token=NH_AXOYPm_EAAAAA:WrTnLuOpddmLsApsacThx5hMsSaeNg7ajE1AhgVQF_D79O5tF1zVg6hd2RStn_j70u8Max0,,,,,,,,$O(n/p)$,$O(1)$,0,,$O(n)$,10,,,"$n$: input length
$p$: number og blocks / processors",,,,,,,,,,,,,,,,,,,1,p,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
75,Data Compression,1,Lossless Compression,Lossless Compression,853,,,,,,,,,"Nagumo, Lu, Watson (1)",1995,https://ieeexplore.ieee.org/abstract/document/515506,,,,,,,,$O(L+\log{n})$,$O(L+\log{n})$,1,,$O((L+\log{n})n)$,11,,,"$n$: input length
$L$: max allowed length of dictionary entries, is $O(\log{n})$",,,,CREW PRAM,120,,,,,,,,,,,,,,1,$O(n)$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
75,Data Compression,1,Lossless Compression,Lossless Compression,854,,,,,,,,,"longest-fragment-first (LFF) dictionary compression - Nagumo, Lu, Watson (2)",1995,https://ieeexplore.ieee.org/abstract/document/515506,,,,,,,,$O(L+\log{n})$,$O(L+\log{n})$,1,,$O((L+\log{n})nL)$,12,,,"$n$: input length
$L$: max allowed length of dictionary entries, is $O(\log{n})$",,,,CREW PRAM,120,,,,,,,,,,,,,,1,$O(nL)$,11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
75,Data Compression,1,Lossless Compression,Lossless Compression,855,,,,,,,,,"Agostino, Storer",1992,https://www.computer.org/csdl/proceedings-article/dcc/1992/00227476/12OmNyp9Mn2,,,,,,,,$O(L+\log{n})$,$O(L+\log{n})$,1,,$O((L+\log{n})n^2)$,21,,,"$n$: input length
$L$: max allowed length of dictionary entries, is $O(\log{n})$",,,,(CREW?) PRAM,120,,,,,,,,,,,,,,1,$O(n^2)$,20,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
75,Data Compression,1,Lossless Compression,Lossless Compression,856,,,,,,,,,"Agostino, Storer",1992,https://www.computer.org/csdl/proceedings-article/dcc/1992/00227476/12OmNyp9Mn2,,,,,,,,$O(L+\log^2{n})$,$O(L+\log^2{n})$,2,,$O((L+\log^2{n})n)$,12,,,"$n$: input length
$L$: max allowed length of dictionary entries, is $O(\log{n})$",,,,(CREW?) PRAM,120,,,,,,,,,,,,,,1,$O(n)$,10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
75,Data Compression,1,Lossless Compression,Lossless Compression,857,,,,,,,,,"Stauffer, Hirschberg",1994,https://ieeexplore.ieee.org/abstract/document/288279?casa_token=s0pIf7TuFI0AAAAA:c7SYtivVaQqAQmag56nOax1_loqvBE3TwLH9a4Rh-tA3fohA391DDg9_1h_wtJdkhIAzLtUZ,,,,,,,,$O(L \log{n})$,$O(L \log{n})$,2,,$O(Ln)$,11,,,"$n$: input length
$L$: max allowed length of dictionary entries, is $O(\log{n})$",,,,CREW PRAM,120,,,,,,,,,,,,,,1,$O(n/ \log{n})$,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
75,Data Compression,0.001,,,858,,,,,,,,,"You, Xi, Zhang, Chen",2008,https://ieeexplore.ieee.org/abstract/document/4529804?casa_token=O89E_gQ-r7EAAAAA:onidonBQ8a6w_QDE0eO_STCK1vl7I3WFfR3bUnzYbVxAN-2jIrRZ1Ka8vu2QM7u6cU6qdmY,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
75,Data Compression,0,,,859,,,,,,,,,"Dua, Kumar, Singh",2021,https://www.sciencedirect.com/science/article/abs/pii/S0743731520304202,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
75,Data Compression,0.001,,,860,,,,,,,,,"Mishra, Mishra, Pani",2012,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=be7cb6d0d3935337fd633dc9b3667bf28904c891,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
75,Data Compression,1,Lossless Compression,Lossless Compression,861,,,,,,,,,"Pérez, Saeed",2015,https://ieeexplore.ieee.org/abstract/document/7345648,,,,,,,,$O(n/p) + O(n/(lp)) +O(n/(rkp))$,$O(1)$ ?,,,$O(n)$ ?,10,,,"n: input length
p: number of processors
l: size of chunks p reads
r=n/M where M size of compressed data
k: size of chunks p will write",,,,distributed memory architecture,700,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
75,Data Compression,0.001,Lossless Compression,Lossless Compression,862,,,,,,,,,"Milward, Nunez, Mulvaney",2004,https://ieeexplore.ieee.org/abstract/document/1291818?casa_token=YGi001m6yMcAAAAA:fb0PX2hwIk3Cw_TUmGTL3MRTuizVtSL7ldQt_HQkAe4tEOmzp4Ke4DIru6zdJm_MixOhvMg,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
75,Data Compression,0.001,Lossless Compression,Lossless Compression,863,,,,,,,,,"Mahammad, Viswanatham",2018,https://link.springer.com/article/10.1007/s11227-018-2478-3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
75,Data Compression,0.001,Lossless Compression,Lossless Compression,864,,,,,,,,,Penzhorn,1992,https://ieeexplore.ieee.org/abstract/document/274290,,,,,,,,$O(nm)$,$O(nm)$,,,$O(nm)$,,,,"n: input length
m: number of symbols",,,,,,,,,,,,,,,,,,,1,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
75,Data Compression,1,Lossless Compression,Lossless Compression,865,,,,,,,,,"Simpson, Sabharwal",1998,https://dl.acm.org/doi/pdf/10.1145/330560.331007,,,,,,,,$O(n+nL^2/p)$,$O(n)$,10,,$O(n+nL^2)$,,,,"L: number of library records
n: input length
p: number of processors",,,,MPI ?,700,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
75,Data Compression,0.001,Lossless Compression,Lossless Compression,866,,,,,,,,,"Stassen, Tjalkens",2001,https://www.sps.tue.nl/wp-content/uploads/2015/09/benelux01-stassen-tjalkens.pdf,,,,,,,,,,,,$n(B+1)$,,,,"n: sequence length
p: number of processors
B: sub-tree realized by a leaf processor distribution ??",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
75,Data Compression,0.001,Lossless Compression,Lossless Compression,867,,,,,,,,,"Franaszek, Robinson, Thomas",1996,https://ieeexplore.ieee.org/abstract/document/488325,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
75,Data Compression,0.001,Lossless Compression,Lossless Compression,868,,,,,,,,,Willems,200,https://www.sps.tue.nl/wp-content/uploads/2015/09/Willems2000ITG.pdf,,,,,,,,$O(nD/p)$,,,,$O(nD)$,,,,"""$n$: input length
$p$: number og blocks / processors""
$D$: maximal context depth",,,,,,,,,,,,,,,,,,,1,p,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
76,Factorization of Polynomials Over Finite Fields,1,,,869,,,1,1,O(log^2 n log^2 k log p),,,[https://dl.acm.org/doi/abs/10.1145/800061.808728 von zur Gathen (1983)],von zur Gathen,1983,https://dl.acm.org/doi/abs/10.1145/800061.808728,,,,,,,,O(log^2 n log^2 k log p),O(log^2 n log^2 k log p),,https://dl.acm.org/doi/abs/10.1145/800061.808728,O(poly(n))?,,,no,"n: degree of polynomial
q: characteristic of finite field
p, k: prime and exponent such that p^k = q",n,,,CREW PRAM?,100,,,,,,,,,1,Monte Carlo,0,,0,1,poly(n)?,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
78,Stable Matching Problem,0.001,Stable Marriage Problem,Stable Marriage Problem,870,,,1,1,O(n^2),,,[https://link.springer.com/content/pdf/10.1007/BF02136029.pdf S. S. TSENG and R. C. T. LEE (1984)],S. S. TSENG and R. C. T. LEE,1984,https://link.springer.com/content/pdf/10.1007/BF02136029.pdf,,,,0,0,5,n: 5,O(n^2),,,,,,,,n: number of men and number of women,n,,,Word RAM,,words,3,n: 3,$O(n)$ per processor?,Only need to keep track of current (provisional) matchings,1,0,,0,,0,,0,1,,,0,0,https://di.ku.dk/forskning/Publikationer/tekniske_rapporter/tekniske-rapporter-1997/97-05.pdf,,,,,,,,,,,,,,1000000,,,,,,,,,4,,,Combinatorics
78,Stable Matching Problem,1,Stable Marriage Problem,Stable Marriage Problem,871,,,1,1,O(n^{0.5}),,,"[http://theory.stanford.edu/~megiddo/pdf/soda94.pdf Tomas Feder, Nimrod Megiddo, Serge A. Plotkin (1994)]","Tomas Feder, Nimrod Megiddo, Serge A. Plotkin",1994,http://theory.stanford.edu/~megiddo/pdf/soda94.pdf,,,,0,0,2.5,n: 2.5,$O(\Delta^{0.5} \log^3(\Delta)$,$O(\Delta^{0.5} \log^3(\Delta)$,6.23,http://theory.stanford.edu/~megiddo/pdf/soda94.pdf,$O(\Delta^{4.5} \log^3(\Delta)$?,44.8,http://theory.stanford.edu/~megiddo/pdf/soda94.pdf,no,"n: number of men and number of women
Delta: maximum number of acceptable partners for one participant",n,,,CRCW PRAM,130,words,2.5,n: 2.5,$O(n^{0.5})$ auxiliary per processor?,bounded by runtime,1,0,,0,,0,,0,1,$\Delta^4$,40,0,0,,,,,,,,,,,,,,,31.62,,,,,,,,,4,,,Combinatorics
78,Stable Matching Problem,0.001,Stable Marriage Problem,Stable Marriage Problem,872,,,1,1,,,,[https://www.researchgate.net/publication/2757845_A_Parallel_Approach_to_the_Stable_Marriage_Problem Larsen (1997)],Larsen,1997,https://www.researchgate.net/publication/2757845_A_Parallel_Approach_to_the_Stable_Marriage_Problem,,,,,,,,,,,,,,,,"n: number of men and number of women
Delta: maximum number of acceptable partners for one participant",n,,,MIMD,,words,2.5,n: 2.5,$O(n^{0.5})$ auxiliary per processor?,bounded by runtime,1,0,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,31.62,,,,,,,,,4,,,Combinatorics
79,Longest Path,0.001,Longest Path on Interval Graphs,Longest Path on Interval Graphs,873,,,,,,,,,"Fieger, Balyo, Schulz, Schreiber",2019,https://ojs.aaai.org/index.php/SOCS/article/view/18503,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
80,Maximum Subarray Problem,1,1D Maximum Subarray,1D Maximum Subarray,874,,,1,1,O(log n),^see above,^see above,[https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.24.1291&rep=rep1&type=pdf Perumalla and Deo (1995)],Perumalla and Deo,1995,https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.24.1291&rep=rep1&type=pdf,,,,0,0,2,n: 2,O(\log n),$O(\log n)$,1,https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.24.1291&rep=rep1&type=pdf,$O(n)$,10,https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.24.1291&rep=rep1&type=pdf,yes,n: length of array,n,,,EREW PRAM,110,words,3,n: 3,O(n) auxiliary,constant number of arrays as outlined in algorithm,1,0,,0,,0,,0,1,O(n/log n),9,0,0,,,,,,,,,,,,,,,9965,,,,,,,,,3,,,Combinatorics
80,Maximum subarray problem,1,1D Maximum Subarray,1-dimensional,875,,,1,1,O(log n),"""Any distribution/runtime same regardless of input""",(same general behavior regardless of input),[https://www.sciencedirect.com/science/article/abs/pii/016781919400063G Wen (1995)],Wen,1995,https://www.sciencedirect.com/science/article/abs/pii/016781919400063G,,,,,,,,O(log n),$O(\log n)$,1,https://www.sciencedirect.com/science/article/abs/pii/016781919400063G,$O(n)$,10,https://www.sciencedirect.com/science/article/abs/pii/016781919400063G,??,n: length of array,,,,EREW PRAM,110,words,,,,,,,,0,,0,,0,1,O(n/log n),9,0,0,,,,,,,,,,,,,,,,,,,,,,,,3,,,Combinatorics
80,Maximum subarray problem,1,2D Maximum Subarray,2-dimensional,876,,,1,1,O(log^2 n),^see above,^see above,[https://www.sciencedirect.com/science/article/pii/0167642387900347 Smith (1987)],Smith,1987,https://www.sciencedirect.com/science/article/pii/0167642387900347,,,,,,,,O(log^2 n),$O(\log^2 n)$,2,https://www.sciencedirect.com/science/article/pii/0167642387900347,???,30,https://www.sciencedirect.com/science/article/pii/0167642387900347,no?,n: dimension of array,,,,PRAM (not sure which type),700,words,,,,,,,,0,,0,,0,1,?,29.3,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
80,Maximum subarray problem,1,2D Maximum Subarray,2-dimensional,877,,,1,1,O(log n),^see above,^see above,[https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.24.1291&rep=rep1&type=pdf KALYAN PERUMALLA and NARSINGH DEO (1995)],KALYAN PERUMALLA and NARSINGH DEO,1995,https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.24.1291&rep=rep1&type=pdf,,,,,,,,O(log n),$O(\log n)$,1,https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.24.1291&rep=rep1&type=pdf,$O(n^3)$,30,https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.24.1291&rep=rep1&type=pdf,yes,n: dimension of array,,,,CREW PRAM,120,words,,,,,,,,0,,0,,0,1,O(n^3 / log n),29.5,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
80,Maximum subarray problem,1,2D Maximum Subarray,2-dimensional,878,,,1,1,O(log n),^see above,^see above,[https://www.sciencedirect.com/science/article/abs/pii/016781919400063G Wen (1995)],Wen,1995,https://www.sciencedirect.com/science/article/abs/pii/016781919400063G,,,,,,,,O(log n),$O(\log n)$,1,https://www.sciencedirect.com/science/article/abs/pii/016781919400063G,$O(n^3)$,30,https://www.sciencedirect.com/science/article/abs/pii/016781919400063G,??,n: dimension of array,,,,EREW PRAM,110,words,,,,,,,,0,,0,,0,1,O(n^3 / log n),29.5,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
80,Maximum subarray problem,1,2D Maximum Subarray,2-dimensional,879,,,1,1,O(log n),,,"[https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=ab94754349b43861551a4ec5adde65381addf10c Qiu, Akl (1999)]","Qiu, Akl",1999,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=ab94754349b43861551a4ec5adde65381addf10c,,,,,,,,O(log n),$O(\log n)$,1,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=ab94754349b43861551a4ec5adde65381addf10c,$O(n^3)$,30,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=ab94754349b43861551a4ec5adde65381addf10c,yes,n: dimension of array,,,,"Hypercube, Star, or Pancake interconnection network",700,words,,,,,,,,0,,0,,0,1,O(n^3 / log n),29.5,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
80,Maximum subarray problem,1,1D Maximum Subarray,1-dimensional,880,,,1,1,O(n/p),,,"[https://link.springer.com/chapter/10.1007/978-3-540-30218-6_24 Alves, Caceres, Song (2004)]","Alves, Caceres, Song",2004,https://link.springer.com/chapter/10.1007/978-3-540-30218-6_24,,,,,,,,O(n / p),O(n / p),0,https://link.springer.com/chapter/10.1007/978-3-540-30218-6_24,$O(n)$,10,https://link.springer.com/chapter/10.1007/978-3-540-30218-6_24,??,"n: dimension of array
p: number of processors",,,,BSP,400,words,,,,,,,,0,,0,,0,1,arbitrary p,10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
80,Maximum subarray problem,1,2D Maximum Subarray,2-dimensional,881,,,1,1,O(n^3/p),,,"[https://link.springer.com/chapter/10.1007/978-3-540-30218-6_24 Alves, Caceres, Song (2004)]","Alves, Caceres, Song",2004,https://link.springer.com/chapter/10.1007/978-3-540-30218-6_24,,,,,,,,O(n^3 / p),O(n^3 / p),0,https://link.springer.com/chapter/10.1007/978-3-540-30218-6_24,$O(n^3)$,30,https://link.springer.com/chapter/10.1007/978-3-540-30218-6_24,??,"n: dimension of array
p: number of processors",,,,BSP,400,words,,,,,,,,0,,0,,0,1,arbitrary p,30,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
80,Maximum subarray problem,1,2D Maximum Subarray,2-dimensional,882,,,1,1,O(n^3/p),,,"[https://link.springer.com/chapter/10.1007/978-3-319-21404-7_29 Lima, Branco, Caceres (2015)]","Lima, Branco, Caceres",2015,https://link.springer.com/chapter/10.1007/978-3-319-21404-7_29,,,,,,,,O(n^3 / p),O(n^3 / p),0,https://link.springer.com/chapter/10.1007/978-3-319-21404-7_29,$O(n^3)$,30,https://link.springer.com/chapter/10.1007/978-3-319-21404-7_29,??,"n: dimension of array
p: number of processors",,,,BSP,400,words,,,,,,,,0,,0,,0,1,arbitrary p,30,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
80,Maximum subarray problem,0.001,2D Maximum Subarray,2-dimensional,883,,,1,1,,,,"[https://scholar.google.com/scholar?cluster=18407123903621316241&hl=en&as_sdt=40000005&sciodt=0,22 Bae, Takaoka (2003)]","Bae, Takaoka",2003,"https://scholar.google.com/scholar?cluster=18407123903621316241&hl=en&as_sdt=40000005&sciodt=0,22",,,,,,,,,,,,,,,??,n: dimension of array,,,,,,words,,,,,,,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
80,Maximum subarray problem,1,2D Maximum Subarray,2-dimensional,884,,,1,1,O(n^3/p),,,[https://ir.canterbury.ac.nz/items/31430f74-3e1f-4f81-b50c-799f7efcf2f1 Bae (2007)],Bae,2007,https://ir.canterbury.ac.nz/items/31430f74-3e1f-4f81-b50c-799f7efcf2f1,,,,,,,,O(n),O(n),10,https://ir.canterbury.ac.nz/items/31430f74-3e1f-4f81-b50c-799f7efcf2f1,$O(n^3)$,30,https://ir.canterbury.ac.nz/items/31430f74-3e1f-4f81-b50c-799f7efcf2f1,??,n: dimension of array,,,,BSP,400,words,,,,,,,,0,,0,,0,1,O(n^2),20,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
80,Maximum subarray problem,1,2D Maximum Subarray,2-dimensional,885,,,1,1,O(n^3/p),,,[https://crpit.scem.westernsydney.edu.au/confpapers/CRPITV152Takaoka.pdf Takaoka (2014)],Takaoka,2014,https://crpit.scem.westernsydney.edu.au/confpapers/CRPITV152Takaoka.pdf,,,,,,,,O(n^3 / p),O(n),10,https://crpit.scem.westernsydney.edu.au/confpapers/CRPITV152Takaoka.pdf,$O(n^3)$,30,https://crpit.scem.westernsydney.edu.au/confpapers/CRPITV152Takaoka.pdf,yes,"n: dimension of array
p: number of processors",,,,BSP,400,words,,,,,,,,0,,0,,0,1,p,20,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,Combinatorics
81,Constructing Suffix Trees,1,Constructing Suffix Trees,Constructing Suffix Trees,886,,,1,1,O(log n),,,"[https://dl.acm.org/doi/10.1145/12130.12152 Landau, Vishkin (1986)]","Landau, Vishkin",1986,https://dl.acm.org/doi/10.1145/12130.12152,,,,0,0,2.03,n: 2.03,O(log n),O(log n),1,https://dl.acm.org/doi/10.1145/12130.12152,O(n^2)?,20,,no,n: length of string,n,,,CRCW PRAM,130,words,3,n: 3,O(n),https://www.sciencedirect.com/science/article/pii/S0022000097914963,0,1,,0,,0,,0,1,O(n^2/log n),19,0,0,,,,,,,,,,,,,,,9860.7,,,,,,,,,4,,,Combinatorics
81,Constructing Suffix Trees,1,Constructing Suffix Trees,Constructing Suffix Trees,887,,,1,1,O(log n),,,"[https://link.springer.com/chapter/10.1007/3-540-18088-5_26 Landau, Schieber, Vishkin (1987)]","Landau, Schieber, Vishkin",1987,https://link.springer.com/chapter/10.1007/3-540-18088-5_26,,,,,,,,O(log n),O(log n),1,https://link.springer.com/chapter/10.1007/3-540-18088-5_26,O(n log n)?,11,,no,n: length of string,n,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(n),10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
81,Constructing Suffix Trees,1,Constructing Suffix Trees,Constructing Suffix Trees,888,,,1,1,O((log n)/eps),,,"[https://link.springer.com/article/10.1007/BF01762122 Apostolico, Iliopoulos, Landau, Schieber, Vishkin (1988)]","Apostolico, Iliopoulos, Landau, Schieber, Vishkin",1988,https://link.springer.com/article/10.1007/BF01762122,,,,0,0,2.03,n: 2.03,O((log n)/eps),O((log n)/eps),1,https://link.springer.com/article/10.1007/BF01762122,O((n log n)/eps),11,https://epubs.siam.org/doi/abs/10.1137/1.9781611972917.5,no,"n: length of string
eps: (exponent on space usage) - 1",n,,,CRCW PRAM,130,words,3,n: 3,O(n),https://www.sciencedirect.com/science/article/pii/S0022000097914963,0,1,,0,,0,,0,1,O(n),10,0,0,,,,,,,,,,,,,,,9860.7,,,,,,,,,4,,,Combinatorics
81,Constructing Suffix Trees,1,Constructing Suffix Trees,Constructing Suffix Trees,889,,,1,1,O(log^2(n)),,,"[https://epubs.siam.org/doi/abs/10.1137/1.9781611972917.5 Blelloch, Shun (2011)]","Blelloch, Shun",2011,https://epubs.siam.org/doi/abs/10.1137/1.9781611972917.5,,,,,,,,O(log^2(n)),O(log^2(n)),2,https://epubs.siam.org/doi/abs/10.1137/1.9781611972917.5,O(n),10,https://epubs.siam.org/doi/abs/10.1137/1.9781611972917.5,no?,n: length of string,n,,,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,O(n),8.9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
81,Constructing Suffix Trees,1,Constructing Suffix Trees,Constructing Suffix Trees,890,,,1,1,O(log^4(n)),,,[https://www.sciencedirect.com/science/article/pii/S0022000097914963 Hariharan (1997)],Hariharan,1997,https://www.sciencedirect.com/science/article/pii/S0022000097914963,,,,0,0,2.03,n: 2.03,O(log^4(n)),$O(\log^4(n))$,4,https://www.sciencedirect.com/science/article/pii/S0022000097914963,$O(n)$,10,https://www.sciencedirect.com/science/article/pii/S0022000097914963,yes,n: length of string,n,,,CREW PRAM,120,words,3,n: 3,O(n),https://www.sciencedirect.com/science/article/pii/S0022000097914963,0,1,,0,,0,,0,1,$O(n/\log^4(n))$?,8.7,0,0,,,,,,,,,,,,,,,9860.7,,,,,,,,,4,,,Combinatorics
81,Constructing Suffix Trees,1,Constructing Suffix Trees,Constructing Suffix Trees,891,,,1,1,O(log^2(n)),,,[https://link.springer.com/content/pdf/10.1007/3-540-57811-0_3.pdf Süleyman Cenk Sahinalp ; Uzi Vishkin (1994)],Süleyman Cenk Sahinalp ; Uzi Vishkin,1994,https://link.springer.com/content/pdf/10.1007/3-540-57811-0_3.pdf,,,,1,0,2.01,n: 2.01,$O(n^\epsilon)$,$O(n^\epsilon)$,5.02,https://link.springer.com/content/pdf/10.1007/3-540-57811-0_3.pdf,$O(n \log^* n)$,10.001,https://link.springer.com/content/pdf/10.1007/3-540-57811-0_3.pdf,no,"n: length of string
epsilon: time/space parameter",n,,,CRCW PRAM,130,words,4.01,n: 4.01,$O(n^{(1+\eps)})$ for any fixed eps>0,https://link.springer.com/content/pdf/10.1007/3-540-57811-0_3.pdf,0,1,,0,,0,,0,1,,8.301,0,0,,,,,,,,,,,,,,,99.3,0,,397.2674256,0,,893.8517077,0,,4,,,Combinatorics
81,Constructing Suffix Trees,1,Constructing Suffix Trees,Constructing Suffix Trees,892,,,1,1,O(log n),,,[https://www.cs.rutgers.edu/~farach/pubs/PRAMSuffixICALP.pdf Farach (1997)],Farach,1997,https://www.cs.rutgers.edu/~farach/pubs/PRAMSuffixICALP.pdf,,,,0,0,2,n: 2,O(\log n),$O(\log n)$,1,https://people.cs.rutgers.edu/~farach/pubs/PRAMSuffixICALP.pdf,$O(n)$,10,https://people.cs.rutgers.edu/~farach/pubs/PRAMSuffixICALP.pdf,yes,n: length of string,n,,,CRCW PRAM,130,words,3,n: 3,O(n),https://www.cs.rutgers.edu/~farach/pubs/PRAMSuffixICALP.pdf,0,1,,1,Las Vegas,0,,0,1,$O(n)$?,9,0,0,,,,,,,,,,,,,,,1000,,,,,,,,,4,,,Combinatorics
81,Constructing Suffix Trees,1,Constructing Suffix Trees,Constructing Suffix Trees,893,,,1,1,O(logn),,,[https://www.researchgate.net/publication/228945502_On_parallel_transformations_of_suffix_arrays_into_suffix_trees Rytter (2004)],Rytter,2004,https://www.researchgate.net/publication/228945502_On_parallel_transformations_of_suffix_arrays_into_suffix_trees,,,,1,6->7,2,n: 2,O(\log n),$O(\log n)$,1,https://www.researchgate.net/publication/228945502_On_parallel_transformations_of_suffix_arrays_into_suffix_trees,$O(n\log n)$,11,https://www.researchgate.net/publication/228945502_On_parallel_transformations_of_suffix_arrays_into_suffix_trees,no,n: length of string,n,,,CREW PRAM,130,words,3,n: 3,O(n),https://www.researchgate.net/publication/228945502_On_parallel_transformations_of_suffix_arrays_into_suffix_trees,0,1,,0,,0,,0,1,$O(n)$,10,0,0,,,,,,,,,,,,,,,9.965,0,,19.93156857,0,,29.89735285,0,,4,,,Combinatorics
83,Entity Resolution,0,Entity Resolution,Entity Resolution,894,,,,,,,,,Gao,2019,https://manu44.magtech.com.cn/Jwk_infotech_wk3/EN/10.11925/infotech.2096-3467.2018.1388,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
83,Entity Resolution,0,Entity Resolution,Entity Resolution,895,,,,,,,,,"Efthymiou, Papadakis, Papastefanatos, Stefanidis, Palpanas",2017,https://www.sciencedirect.com/science/article/abs/pii/S030643791530199X,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
83,Entity Resolution,0,Entity Resolution,Entity Resolution,896,,,,,,,,,"Sadiq, Amin, Lee",2018,https://www.dbpia.co.kr/Journal/articleDetail?nodeId=NODE07502962,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
83,Entity Resolution,0.001,Entity Resolution,Entity Resolution,897,,,,,,,,,"Tachinaba, Garcia-Molina",2009,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=bc2e36cb02cd92a02e15893fd90dba121e801cbf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
83,Entity Resolution,0.001,Entity Resolution,,898,,,,,,,,,"Grant, Wang, Wick",2016,https://ieeexplore.ieee.org/abstract/document/7785743,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
83,Entity Resolution,0.001,Entity Resolution,Entity Resolution,899,,,,,,,,,"Alami, Aassem, Hafidi",2021,https://iopscience.iop.org/article/10.1088/1742-6596/1743/1/012005/meta,,,,,,,,$O((pkRn+k)/J+R*m*T^2)$,$O(RmT^2)$,,,$O((pkRn+k)+R*m*T^2)$,,,,"k: number of clusters/centers
p: number of iterations (?)
R: complexity distance of n-uplets
n: number of entities
J: number of workers -> processors
m: number of similarity rules (?)
T: max number of elements in a cluster",,,,,,,,,,,,,,,,,,,,J,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
86,Graph Isomorphism Problem,0.001,"Graph Isomorphism, General Graphs","Graph Isomorphism, General Graphs",900,,,1,1,,,,"[https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=49129c584f9c34dc817c22e3b2f7227f07d3846a Balpande, Mahajan (2015)]","Balpande, Mahajan",2015,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=49129c584f9c34dc817c22e3b2f7227f07d3846a,,,,1,0,#VALUE!,,,,,,,,,,"n: number of vertices
m: number of edges",n,,,OpenMP?,,words, 3m,"n: 3
m: 3",O(mn)?,"Stores a constant number of n*m matrices, along with a constant number of vectors of length O(m+n)",1,0,,0,,0,,0,1,n,,0,0,,,,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
86,Graph Isomorphism Problem,0.001,"Graph Isomorphism, General Graphs","Graph Isomorphism, General Graphs (parameterized by vertex deletion distance)",901,,,1,1,,,,"[https://link.springer.com/chapter/10.1007/978-3-319-75172-6_22 Das, Enduri, Reddy (2018)]","Das, Enduri, Reddy",2018,https://link.springer.com/chapter/10.1007/978-3-319-75172-6_22,,,,1,0,#VALUE!,,,,,,,,,,"n: number of vertices
m: number of edges",n,,,,,words, 3m,"n: 3
m: 3",O(mn)?,"Stores a constant number of n*m matrices, along with a constant number of vectors of length O(m+n)",1,0,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
86,Graph Isomorphism Problem,1,"Graph Isomorphism, General Graphs","Graph Isomorphism, General Graphs",902,,,1,1,poly(n),,,"[https://arxiv.org/abs/2002.04638 Pham, Palem, Rao (2020)]","Pham, Palem, Rao",2020,https://arxiv.org/abs/2002.04638,,,,1,0,#VALUE!,,poly(n),poly(n),,https://arxiv.org/abs/2002.04638,n^(O(log n))?,,https://arxiv.org/abs/2002.04638,no,"n: number of vertices
m: number of edges",n,,,CRCW PRAM,130,words, 3m,"n: 3
m: 3",O(mn)?,"Stores a constant number of n*m matrices, along with a constant number of vectors of length O(m+n)",1,0,,0,,0,,0,1,n^(O(log n))?,,0,0,,,,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
86,Graph Isomorphism Problem,0.001,"Graph Isomorphism, General Graphs","Graph Isomorphism, General Graphs",903,,,1,1,,,,[https://link.springer.com/article/10.3103/S0146411621070166 Vasilchikov (2021)],Vasilchikov,2021,https://link.springer.com/article/10.3103/S0146411621070166,,,,1,0,#VALUE!,,,,,,,,,,"n: number of vertices
m: number of edges",n,,,,,words, 3m,"n: 3
m: 3",O(mn)?,"Stores a constant number of n*m matrices, along with a constant number of vectors of length O(m+n)",1,0,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,1,,,Combinatorics
92,Collaborative Filtering,0.001,Collaborative Filtering,Matrix Factorization,904,,,,,,,,,"Yu, Hsieh, Si, Dhillon (CCD++)",2012,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6413853,,,,,,,,,,,,O(|Ω|k) * T iterations,,,,,,,,shared memory,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
92,Collaborative Filtering,0.001,Collaborative Filtering,Matrix Factorization,905,,,,,,,,,"Narang, Gupta, Joshi, Garg",2010,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5713175,,,,,,,,T_seq/P_0,,,,T_seq = O(NkI_{max}d [(1 − (k/X)^{1+lg(N/X)/lg(X/k )} / (1 − (k/X))]),,,,"N: Total number of input feature vectors
X: Number of feature vectors per compute node
k: Number of mean feature vectors per compute node
d: Dimensionality of each unpartitioned feature vector
I_max: Maximum number of iterations by any node in the tree
P_i: Number of physical threads utilized at level i",,,,massive threaded multi-core architectures,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
92,Collaborative Filtering,0.001,Collaborative Filtering,Matrix Factorization,906,,,,,,,,,"Zhuang, Chin, Juan, Lin",2013,https://dl.acm.org/doi/pdf/10.1145/2507157.2507164,,,,,,,,,,,,,,,,,,,,shared memory,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
97,Optimal Policies for MDPs,0.001,Optimal Policies for MDPs,Optimal Policies for MDPs,907,,,,,,,,,"Liu, Zhou, Kalathil, Kumar, Tian",2021,https://arxiv.org/abs/2111.00552,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
97,Optimal Policies for MDPs,0.001,Optimal Policies for MDPs,Optimal Policies for MDPs,908,,,,,,,,,"Primal-Dual Stochastic Mirror Descent - Tiapkin, Gasnikov",2022,https://proceedings.mlr.press/v151/tiapkin22a.html?roistat_visit=8274511,,,,,,,,$O(A_tot n)$,$O(1)$,,,,,,,"n: 
A_tot: state-action pairs",,,,,,,,,,,,,,,,,,,1,$A_tot$,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
97,Optimal Policies for MDPs,0.001,Optimal Policies for MDPs,Optimal Policies for MDPs,909,,,,,,,,,"Nachaoui, Chafik, Daoui",2022,https://www.aimsciences.org/article/doi/10.3934/dcdss.2022189?viewType=HTML,,,,,,,,$O(npS)$,,,,,,,,"n:
p: levels (?)
S: state space",,,,Message Passing Interface (MPI),700,,,,,,,,,,,,,,1,np,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
97,Optimal Policies for MDPs,1,Optimal Policies for MDPs,Optimal Policies for MDPs,910,,,,,,,,,"parallel policy iteration - Zhang, Sun, Xu (1)",2009,https://link.springer.com/chapter/10.1007/978-3-642-03095-6_45,,,,,,,,"$O((S^3+ AS^2)/p)$ computation, $O(pS^2)$ communication",$O((A+S)^0.5 S^2)$ ?,,,"$O(S^3+ AS^2)$ computation, $O(pS^2)$ communication",,,,"A: size of set of actions
S: size of set of states
p: number of processors",,,,"p synchronous processors, w/ communication cost",700,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
97,Optimal Policies for MDPs,1,Optimal Policies for MDPs,Optimal Policies for MDPs,911,,,,,,,,,"parallel value iteration - Zhang, Sun, Xu (2)",2009,https://link.springer.com/chapter/10.1007/978-3-642-03095-6_45,,,,,,,,"$O((AS^2)/p)$ computation, $O(pS)$ communication",$O(A^0.5 S^1.5)$ ?,,,"$O(AS^2)$ computation, $O(pS)$ communication",,,,"A: size of set of actions
S: size of set of states
p: number of processors",,,,"p synchronous processors, w/ communication cost",700,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
97,Optimal Policies for MDPs,0,Optimal Policies for MDPs,Optimal Policies for MDPs,912,,,,,,,,,"Andersen, Andersen, Kulahci, Nielsen",2022,https://www.sciencedirect.com/science/article/abs/pii/S0377221721006020,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
97,Optimal Policies for MDPs,0.001,Optimal Policies for MDPs,Optimal Policies for MDPs,913,,,,,,,,,"parallel q-learning - Printista, Errecalde, Montoya",2002,http://sedici.unlp.edu.ar/handle/10915/9432,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
97,Optimal Policies for MDPs,0.001,Optimal Policies for MDPs,Optimal Policies for MDPs,914,,,,,,,,,"parallelized parallel rollout - Kim, Chang",2003,https://link.springer.com/chapter/10.1007/3-540-45009-2_10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
97,Optimal Policies for MDPs,0.001,Optimal Policies for MDPs,Optimal Policies for MDPs,915,,,,,,,,,"Chafik, Daoui",2016,https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=1b529e19039739861df028bd3612d451c682ff9f,,,,,,,,,,,,,,,,,,,,"Open Multi-Processing (Open-MP)
programming model; shared memory",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
97,Optimal Policies for MDPs,0.001,Optimal Policies for MDPs,Optimal Policies for MDPs,916,,,,,,,,,"Anchor-changing Regularized Natural Policy Gradient (ARNPG) framework - Zhou, Liu, Kalathil, Kumar, Tian",2022,https://proceedings.neurips.cc/paper_files/paper/2022/hash/57fbe68cb318cad62c4ae4c91c83cba3-Abstract-Conference.html,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
99,Motif Search,0.001,Motif Search,,917,,,,,,,,,"Carvalho, Oliveira, Freitas, Sagot",2004,https://dl.acm.org/doi/pdf/10.1145/967900.967932,,,,,,,,,,,,"T_seq = O(Nn_{pk+(p−1)d_max}ν^p(e, k)), v(e,k) <=k^e |Σ|^e",,,,,,,,CREW PRAM,120,,,,,,,,,,,1?,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
99,Motif Search,0.001,Motif Search,"(l, d) Edit-distance-based Motif Search - EMS",918,,,,,,,,,"Pal, Xiao, Rajasekaran",2016,https://link.springer.com/content/pdf/10.1186/s12864-016-2789-9.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
99,Motif Search,0.001,Motif Search,,919,,,,,,,,,"Sandve, Nedland, Syrstad, Eidsheim, Abul, Drabløs (PAMM)",2006,https://link.springer.com/chapter/10.1007/11851561_19,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
99,Motif Search,0.001,Motif Search,,920,,,,,,,,,"Abbas, Abouelhoda, Bahig, Mohie-Eldin",2014,https://link.springer.com/article/10.1007/s11227-014-1180-3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
99,Motif Search,0.001,Motif Search,,921,,,,,,,,,"Wang, Parthasarathy",2004,https://dl.acm.org/doi/pdf/10.1145/1006209.1006215,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
99,Motif Search,0.001,Motif Search,,922,,,,,,,,,"Schatz, Cooper-Balis, Bazinet",2008,https://www.researchgate.net/profile/Adam_Bazinet/publication/252312340_Parallel_Network_Motif_Finding/links/58457fc808ae61f75dd7c581/Parallel-Network-Motif-Finding.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
99,Motif Search,0.001,Motif Search,,923,,,,,,,,,"Kim, Diko, Rawson",2013,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6616521,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
153,Link Analysis,0.001,,Personalized PageRank,924,,,1,0,O((m/p) log(n/eps))?,,,,"Hou, Chen, Wang, Wei",2021,https://dl.acm.org/doi/abs/10.14778/3461535.3461554,,,,,,,,O((m/p) log(n/eps))?,O((m/n) log(n/eps))?,,,O(m log(n/eps))?,,,no,"n: number of pages/vertices
m: number of hyperlinks/edges
p: number of processors
eps: relative error",n,,,MPC,,,,,,,,,,0,,1,(1-eps)?,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
153,Link Analysis,0.001,,Dynamic Personalized PageRank,925,,,1,1,,,,,"Guo, Li, Sha, Tan",2017,https://dl.acm.org/doi/abs/10.14778/3151113.3151121,,,,,,,,,,,,,,,,"n: number of pages/vertices
m: number of hyperlinks/edges",n,,,,,,,,,,,,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
153,Link Analysis,0.001,Link Analysis,Link Analysis/PageRank,926,,,1,1,O((m/p) log(n/eps))?,,,,"Kohlschutter, Chirita, Nejdl",2006,https://link.springer.com/chapter/10.1007/11735106_22,,,,,,,,O((m/p) log(n/eps))?,O((m/n) log(n/eps))?,,,O(m log(n/eps))?,,,no,"n: number of pages/vertices
m: number of hyperlinks/edges
p: number of processors
eps: additive error",n,,,CREW PRAM?,120,,,,,,,,,0,,1,eps?,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
153,Link Analysis,0.001,Link Analysis,Link Analysis/PageRank,927,,,1,1,O((m/p) log(n/eps))?,,,,"Wicks, Greenwald",2007,https://dl.acm.org/doi/pdf/10.1145/1277741.1277946,,,,,,,,O((m/p) log(n/eps))?,O((m/n) log(n/eps))?,,,O(m log(n/eps))?,,,no,"n: number of pages/vertices
m: number of hyperlinks/edges
p: number of processors
eps: additive error",n,,,CREW PRAM?,120,,,,,,,,,0,,1,eps?,0,1,p,,0,0,https://link.springer.com/chapter/10.1007/978-3-540-77004-6_17,,,,,,,,,,,,,,,,,,,,,,,,,,
153,Link Analysis,0.001,,Personalized PageRank,928,,,1,1,,,,,Lin,2019,https://dl.acm.org/doi/abs/10.1145/3308558.3313555,,,,,,,,,,,,,,,,"n: number of pages/vertices
m: number of hyperlinks/edges",n,,,,,,,,,,,,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
153,Link Analysis,0.001,Link Analysis,Link Analysis/PageRank,929,,,1,1,O((m/p) log(n/eps))?,,,,"Zhang, Tang, Yao, Zhang",2023,https://arxiv.org/pdf/2112.01743.pdf,,,,,,,,O((m/p) log(n/eps))?,O((m/n) log(n/eps))?,,,O(m log(n/eps))?,,,no,"n: number of pages/vertices
m: number of hyperlinks/edges
p: number of processors
eps: additive error",n,,,CREW PRAM?,120,,,,,,,,,0,,1,eps?,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
153,Link Analysis,0.001,,Single-Sourced Personalized PageRank,930,,,1,0,O((n log n)/(p*eps) + log^2 n),,,,"Wang, Wang, Zhou",2019,https://link.springer.com/article/10.1007/s00778-019-00576-7,,,,,,,,O((n log n)/(p*eps) + log^2 n),O((log n)/eps + log^2 n),,,O((n log n)/eps),,,no,"n: number of pages/vertices
m: number of hyperlinks/edges
p: number of processors
eps: relative error",n,,,CREW PRAM?,120,,,,,,,,,0,,1,(1-eps)?,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
153,Link Analysis,1,,Personalized PageRank,931,,,1,1,O(hn/p + np),,,,Guo et al.,2017,https://dl.acm.org/doi/abs/10.1145/3035918.3035920,,,,,,,,O(hn/p + np),O(h*sqrt(n)),,,O(hn),,,no,"n: number of pages/vertices
m: number of hyperlinks/edges
p: number of processors
h: number of hub nodes",n,,,BSP?,400,,,,,,,,,0,,0,,0,1,p,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
107,Point-in-Polygon,1,Point-in-Polygon,Point-in-Polygon,932,,,,,,,,,Puri,2015,https://scholarworks.gsu.edu/cgi/viewcontent.cgi?article=1099&context=cs_diss,,,,,,,,O(log n),O(log n),1,,O(n log n),11,,,n: number of edges in the polygon,,,,CREW PRAM,120,,,,,,,,,0,,0,,0,1,n,10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
107,Point-in-Polygon,1,Point-in-Polygon,Point-in-Polygon,933,,,,,,,,,"Chen, Davis, Kruskal",1993,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=184775,,,,,,,,O(log n),O(log n),1,,O(n log n),11,,,n: number of edges in the polygon,,,,EREW PRAM,110,,,,,,,,,0,,0,,0,1,n,10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
117,Maximum Cut,1,Maximum Cut,Maximum Cut,934,,,1,1,O(log n),,,[https://research.iaun.ac.ir/pd/saeed-nasri/pdfs/UploadFile_9325.pdf Akl (1989)],Akl,1989,https://research.iaun.ac.ir/pd/saeed-nasri/pdfs/UploadFile_9325.pdf,,,,,,,,O(log n),O(log n),1,https://research.iaun.ac.ir/pd/saeed-nasri/pdfs/UploadFile_9325.pdf,O(n),6,https://research.iaun.ac.ir/pd/saeed-nasri/pdfs/UploadFile_9325.pdf,yes,n: number of vertices,n,,,SIMD,200,,,,,,,,,0,,0,,0,1,O(n/log n),5.9,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
119,Determinants,1,Determinant of Matrices with Integer Entries,Determinant of Matrices with Integer Entries(/over a Field of characteristic 0),935,,,1,1,O((log n)^2),,,[https://epubs.siam.org/doi/10.1137/0205040 Csanky (1976)],Csanky,1976,https://epubs.siam.org/doi/10.1137/0205040,,,,,,,,O((log n)^2),O((log n)^2),2,https://epubs.siam.org/doi/10.1137/0205040,O(n^4 (log n)^2)?,22,,0,n: dimension of matrix,n,https://epubs.siam.org/doi/10.1137/0205040,0,MIMD shared memory,300,,,,,,,,,0,,0,,0,1,O(n^4),20,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
119,Determinants,1,Determinant of Matrices with Integer Entries,Determinant of Matrices with Integer Entries,936,,,1,1,O((log n)^2),,,"[https://www.sciencedirect.com/science/article/pii/0020019078900790 Preparata, Sarwate (1977)]","Preparata, Sarwate",1977,https://www.sciencedirect.com/science/article/pii/0020019078900790,,,,,,,,O((log n)^2),O((log n)^2),2,https://www.sciencedirect.com/science/article/pii/0020019078900790,O(n^(log_2(7) + 0.5) (log n)^2)?,15.605,,0,n: dimension of matrix,n,https://www.sciencedirect.com/science/article/pii/0020019078900790,0,MIMD shared memory,300,,,,,,,,,0,,0,,0,1,O(n^(log_2(7) + 0.5)) ~ O(n^(3.31)),15.603,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
119,Determinants,1,Determinant of Matrices with Integer Entries,Determinant of Matrices with Integer Entries(/over a Field),937,,,1,1,O((log n)^2),,,"[https://ieeexplore.ieee.org/abstract/document/4568376 Borodin, von zur Gathem, Hopcroft (1982)]","Borodin, von zur Gathem, Hopcroft",1982,https://ieeexplore.ieee.org/abstract/document/4568376,,,,,,,,O((log n)^2),O((log n)^2),2,https://ieeexplore.ieee.org/abstract/document/4568376,??,,,0,n: dimension of matrix,n,https://ieeexplore.ieee.org/abstract/document/4568376,0,CRCW PRAM?,,,,,,,,,,0,,0,,0,1,poly(n),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
119,Determinants,1,,Determinant of Matrices with Integer Entries over some Linear Space,938,,,1,1,O((log k)^2) + log n + log p ,,,[https://link.springer.com/article/10.1007/BF02576204 Bini (1985)],Bini,1985,https://link.springer.com/article/10.1007/BF02576204,,,,,,,,O((log k)^2) + log n + log p ,O((log k)^2) + log n + log p ,,https://link.springer.com/article/10.1007/BF02576204,"O(max(p(n+k), n(k^2+1)) * (log n + log p + (log k)^2))?",,,0,"n: dimension of matrix
k: tensor rank minus n
p: number of linearly independent matrices generating linear space",n,https://link.springer.com/article/10.1007/BF02576204,0,CRCW PRAM?,,,,,,,,,,0,,0,,0,1,"max(p(n+k), n(k^2+1))",,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
119,Determinants,1,Determinant of Matrices with Integer Entries,Determinant of Matrices with Integer Entries,939,,,1,1,O((log n)^2),,,[https://www.sciencedirect.com/science/article/pii/0304397587900193 Pan (1987)],Pan,1987,https://www.sciencedirect.com/science/article/pii/0304397587900193,,,,,,,,O((log n)^2),O((log n)^2),2,https://www.sciencedirect.com/science/article/pii/0020019078900790,O(n^(omega+0.5) (log n)^2)?,,,0,n: dimension of matrix,n,https://www.sciencedirect.com/science/article/pii/0020019078900790,0,CRCW PRAM?,,,,,,,,,,0,,0,,0,1,O(n^(omega + 0.5)) ~ O(n^(2.872)) (omega denotes exponent on matrix mult),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
119,Determinants,1,Determinant of Matrices with Integer Entries,Determinant of Matrices with Integer Entries,940,,,1,1,O((log n)^2),,,"[https://www.sciencedirect.com/science/article/pii/0020019089901737 Galil, Pan (1989)]","Galil, Pan",1989,https://www.sciencedirect.com/science/article/pii/0020019089901737,,,,,,,,O((log n)^2),O((log n)^2),2,https://www.sciencedirect.com/science/article/pii/0020019089901737,o(n^(2.851) (log n)^2)?,15.612,,0,n: dimension of matrix,n,https://www.sciencedirect.com/science/article/pii/0020019089901737,0,MIMD shared memory,300,,,,,,,,,0,,0,,0,1,o(n^(2.851)),15.61,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
119,Determinants,1,Determinant of Matrices with Integer Entries,Determinant of Matrices with Integer Entries,941,,,1,1,O((log n)^2),,,"[http://repository.ias.ac.in/127977/1/cj97-05.pdf Mahajan, Vinay (1997)]","Mahajan, Vinay",1997,http://repository.ias.ac.in/127977/1/cj97-05.pdf,,,,,,,,O((log n)^2),O((log n)^2),2,http://repository.ias.ac.in/127977/1/cj97-05.pdf,O(n^6),30,http://repository.ias.ac.in/127977/1/cj97-05.pdf,0,n: dimension of matrix,n,http://repository.ias.ac.in/127977/1/cj97-05.pdf,0,EREW PRAM (also OROW PRAM),110,,,,,,,,,0,,0,,0,1,O(n^6),29.3,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
119,Determinants,1,Determinant of Matrices with Integer Entries,Determinant of Matrices with Integer Entries,942,,,1,1,O(n^2 m^{\log_{2}{3}})?,,,"[https://link.springer.com/article/10.1007/s10543-015-0547-z Beliakov, Matiyasevich (2013)]","Beliakov, Matiyasevich",2013,https://link.springer.com/article/10.1007/s10543-015-0547-z,,,,,,,,O(n^2 m^{\log_{2}{3}})?,O(n^2 m^{\log_{2}{3}})?,26.7,,O(n^3 m^{\log_{2}{3}}),33.7,,0,"n: dimension of matrix
m: number of mantissa bits (representing precision)",n,,0,CRCW PRAM?,320,,,,,,,,,0,,0,,0,1,O(n),6,0,0,,,,,"Model: CREW; Work: O( N^3 m^{\log_{2}{3}} ); Span: \Th{ N^2 m^{\log_{2}{3}} }; where m is the number of mantissa bits (representing precision). The complexities above are for Algorithm 1 (given on page 41) based on the parallelization strategy theu described in Section 4.1.2. However, it is possible to parallelize the loops in lines 2.2.2 and 2.3.2 as well (which they do not do) using reducers and thus reducing the span to \Th{ N m^{\log_{2}{3}} } assuming arbitrary-way forking (as in PRAM) and to \Th{ N m^{\log_{2}{3}} \log{ N } } assuming binary-forking (which is how forking is implemented on modern concurrency platforms).  ",,,,,,,,,,,,,,,,,,,,,,
119,Determinants,1,Determinant of Matrices with Integer Entries,Determinant of Matrices with Integer Entries,943,,,1,1,O(n)?,,,"[https://ieeexplore.ieee.org/abstract/document/6142484 Pereira, de Morais, Matsumoto (2012)]","Pereira, de Morais, Matsumoto",2012,https://ieeexplore.ieee.org/abstract/document/6142484,,,,,,,,O(n)?,O(n)?,6,,O(n^3)?,16,,,n: dimension of matrix,n,,0,CRCW PRAM?,300,,,,,,,,,0,,0,,0,1,O(n^2)?,10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
120,Integer Relation,1,Integer Relation,Integer Relation Among Reals,944,,,,,,,,"[https://www.ams.org/journals/mcom/2001-70-236/S0025-5718-00-01278-3/S0025-5718-00-01278-3.pdf Bailey, Broadhurst (2001)]","Bailey, Broadhurst",2001,https://www.ams.org/journals/mcom/2001-70-236/S0025-5718-00-01278-3/S0025-5718-00-01278-3.pdf,,,,,,,,O(n^2)*number of iterations,O(n^2)*number of iterations,,,O(n^3)*number of iterations,,,,n: number of real numbers to find integer relation for,n,,,interconnection network w/ distributed shared memory,700,,,,,,,,,0,,0,,0,1,n,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
122,Sequence-to-Graph Alignment,0.001,#N/A,Sequence-to-Graph Alignment with DAGs,945,,,1,1,,,,[https://ieeexplore.ieee.org/abstract/document/8821047 Jain et al. (2019)],Jain et al.,2019,https://ieeexplore.ieee.org/abstract/document/8821047,,,,,,,,,,,,,,,,"m: length of input sequence
V: number of vertices
E: number of edges",V,,,SIMD,200,,,,,,,,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
122,Sequence-to-Graph Alignment,0.001,#N/A,Sequence-to-Graph Alignment with DAGs,946,,,1,1,,,,"[https://dl.acm.org/doi/abs/10.1145/3472456.3472505 Feng, Luo (2021)]","Feng, Luo",2021,https://dl.acm.org/doi/abs/10.1145/3472456.3472505,,,,,,,,,,,,,,,,"m: length of input sequence
V: number of vertices
E: number of edges",V,,,SIMD?,,,,,,,,,,0,,0,,0,1,,,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
122,Sequence-to-Graph Alignment,0.001,,,947,,,,,,,,,"Zeng, Zhu, Zhang, Chen, Yuan, Wei, Liu",2024,https://ieeexplore.ieee.org/abstract/document/10311345,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
129,Transitive Reduction Problem,1,Transitive Reduction Problem of Directed Graphs,Transitive Reduction Problem of Directed Graphs,948,,,,,O(log^4 n),,,[https://www.osti.gov/biblio/6980369 Gibbons et al. (1988)],Gibbons et al.,1988,https://www.osti.gov/biblio/6980369,,,,,,,,O(log^4 n),O(log^4 n),4,https://www.osti.gov/biblio/6980369,O(n^3 log^4 n),16.24,,0,"n: number of vertices
m: number of edges",n,https://www.osti.gov/biblio/6980369,0,CREW PRAM,120,,,,,,,,,0,,0,,0,1,O(n^3),16,0,0,https://www.researchgate.net/profile/Vijaya-Ramachandran/publication/235048140_Transitive_Reduction_in_Parallel_via_Branchings/links/54170a0e0cf2f48c74a3e86e/Transitive-Reduction-in-Parallel-via-Branchings.pdf,,,,,,,,,,,,,,,,,,,,,,,,,,
129,Transitive Reduction Problem,1,Transitive Reduction Problem of Directed Graphs,Transitive Reduction Problem of Directed Graphs,949,,,,,O(n+e_max),,,"[https://ieeexplore.ieee.org/abstract/document/77136 Chang, Henschen (1990)]","Chang, Henschen",1990,https://ieeexplore.ieee.org/abstract/document/77136,,,,,,,,O(n+e_max),O(n+e_max),6,https://ieeexplore.ieee.org/abstract/document/77136,O(n^2 + sigma); can be treated as O(n^3),16,,0,"n: number of vertices
m: number of edges
e_max: maximum (over all vertices) number of edges traversable from a vertex
sigma: sum (over all vertices) of number of edges traversable from a vertex",n,https://ieeexplore.ieee.org/abstract/document/77136,0,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,n,10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
129,Transitive Reduction Problem,1,Transitive Reduction Problem of Directed Graphs,Transitive Reduction Problem of Directed Graphs,950,,,,,O(n*ceil(n^2/p)),,,[https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-13-281 Bosnacki et al. (2012)],Bosnacki et al.,2012,https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-13-281,,,,,,,,O(n*ceil(n^2/p)),O(n),6,https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-13-281,O(n^3),16,,1,"n: number of vertices
m: number of edges
p: number of processors",n,https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-13-281,0,CREW PRAM?,100,,,,,,,,,0,,0,,0,1,p,10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
137,Integral Equations,0.001,Volterra-Abel Equations,Volterra-Abel Equations,951,,,,,,,,,"Capobianco, Cardone",2008,https://www.sciencedirect.com/science/article/pii/S0377042708002550,,,,,,,,O(d^2 N log^2 N/nprocs),O(d N log^2 N),,,O(d^2 N log^2 N),,,,,,,,distributed-memory MIMD,700,,,,,,,,,,,,,,,nprocs <= d,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
137,Integral Equations,0.001,Fredholm Equations,Fredholm Equations,952,,,,,,,,,"Bebendorf, Kriemann",2004,https://link.springer.com/content/pdf/10.1007/s00791-005-0001-x.pdf,,,,,,,,O(N log^{2d−1} N / p),,,,,,,,"N: number of unknowns
d: spacial dimension
p: number of processors",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
137,Integral Equations,0.001,Fredholm Equations,Fredholm Equations,953,,,,,,,,,"Bebendorf, Kriemann",2004,https://link.springer.com/content/pdf/10.1007/s00791-005-0001-x.pdf,,,,,,,,O(N log^d N / p),,,,,,,,"N: number of unknowns
d: spacial dimension
p: number of processors",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
137,Integral Equations,0.001,Fredholm Equations,Fredholm Equations,954,,,,,,,,,"Dimov, Gurov",2000,http://sci-gems.math.bas.bg/jspui/bitstream/10525/2165/1/Pliska-13-2000-117-132.pdf,,,,,,,,,,,,,,,,,,,,distributed MIMD,700,,,,,,,,,1,Monte Carlo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
137,Integral Equations,0.001,Fredholm Equations,Fredholm Equations,955,,,,,,,,,Miel,1989,https://www.sciencedirect.com/science/article/pii/0168927489900159,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
137,Integral Equations,0.001,Fredholm Equations,Fredholm Equations,956,,,,,,,,,"Aggarwal, Dellwo, Friedman",1993,https://www.sciencedirect.com/science/article/pii/016781919390020L,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
140,Solutions to Nonlinear Equations,0.001,Solutions to Nonlinear Equations,Solutions to Nonlinear Equations,957,,,,,,,,,"Chakraborty, Allison,  Ribbens, Watson",1993,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=219760,,,,,,,,,,,,,,,,,,,,hypercube,700,,,,,,,,,,,,,,,O(n^2 + n),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
140,Solutions to Nonlinear Equations,0.001,Solutions to Nonlinear Equations,Solutions to Nonlinear Equations,958,,,,,,,,,Hu,1996,https://link.springer.com/content/pdf/10.1007/BF02943133.pdf,,,,,,,,"(for step 3.3) each processor evaluates O(N/p) rows of the Jacobian (O(N) entries, less? bc matrix is sparse), O(N^2) for 3.2",,,,,,,,NxN matrix,,,,shared memory MIMD,300,,,,,,,,,,,,,,1,p <= N,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
140,Solutions to Nonlinear Equations,0.001,Solutions to Nonlinear Equations,Solutions to Nonlinear Equations,959,,,,,,,,,"Gan, Yang, Hu",1994,https://www.sciencedirect.com/science/article/pii/0167819194900361,,,,,,,,O(N) + O(N^2/P),O(N^1.5),,,O(N^2)?,,,,"N: number of equations in the system
P: number of processors
n = N/P",,,,hypercube SIMD (CM-2),700,,,,,,,,,,,,,,,P<=N; Maximum parallelism can be achieved when n = P = sqrt(N),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
140,Solutions to Nonlinear Equations,0.001,Solutions to Nonlinear Equations,Solutions to Nonlinear Equations,960,,,,,,,,,Mukai (1EP),1981,https://www.sciencedirect.com/science/article/pii/0898122181900833/pdf,,,,,,,,E = (log \tau_{[n/k]-1}) / [(k+1)/p],(log \tau_{[n/k]-1}) / [(k+1)/p],,,E = (log \tau_{[n/k]-1}) / (k+1),,,,k: some parameter <= n,,,,MIMD (implied distributed),700,,,,,,,,,,,,,,1,p <= k+1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
140,Solutions to Nonlinear Equations,0.001,Solutions to Nonlinear Equations,Solutions to Nonlinear Equations,961,,,,,,,,,Mukai (2EP),1981,https://www.sciencedirect.com/science/article/pii/0898122181900833/pdf,,,,,,,,E = (log (k+1)) / ([(n+1)/p] + k - 1),(log (k+1)) / ([(n+1)/p] + k - 1),,,E = (log (k+1)) / (n + k),,,,k: some parameter <= n,,,,MIMD (implied distributed),700,,,,,,,,,,,,,,1,p <= k+1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
142,Polynomial Interpolation,1,2-D Polynomial Interpolation,2-D Polynomial Interpolation,962,,,1,1,O(log n),,,"[https://link.springer.com/article/10.1007/BF02017348 Egecioglu, Gallopoulos, Koc (1990)]","Egecioglu, Gallopoulos, Koc",1990,https://link.springer.com/article/10.1007/BF02017348,,,,,,,,O(log n),O(log n),1,https://link.springer.com/article/10.1007/BF02017348,O(n^2),20,https://link.springer.com/article/10.1007/BF02017348,0,n: text length (block size),n,https://link.springer.com/article/10.1007/BF02017348,0,EREW PRAM,110,,,,,,,,,0,,0,,0,1,O(n^2),19,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
142,Polynomial Interpolation,1,2-D Polynomial Interpolation,2-D Polynomial Interpolation,963,,,1,1,O((n^2 log n)/p),,,"[https://www.sciencedirect.com/science/article/pii/089812219400241C Jana, Sinha (1995)]","Jana, Sinha",1995,https://www.sciencedirect.com/science/article/pii/089812219400241C,,,,,,,,O((n^2 log n)/p),O(log n),1,https://www.sciencedirect.com/science/article/pii/089812219400241C,O(n^2 log n),21,,0,"n: text length (block size)
p: number of processors",n,https://www.sciencedirect.com/science/article/pii/089812219400241C,0,processor network,700,,,,,,,,,0,,0,,0,1,p ( = O(n^2)),10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
143,Greatest Common Divisor,1,Greatest Common Divisor,Greatest Common Divisor,964,,,1,1,O((n log log n)/(log n)),,,"[https://epubs.siam.org/doi/abs/10.1137/0216002 Kannan, Miller, Rudolph (1987)]","Kannan, Miller, Rudolph",1987,https://epubs.siam.org/doi/abs/10.1137/0216002,,,,,,,,O((n log log n)/(log n)),O((n log log n)/(log n)),991,https://epubs.siam.org/doi/abs/10.1137/0216002,O(n^3(log n)(log log n)),3011,,0,n: sum of number of bits among the two integers,n,https://epubs.siam.org/doi/abs/10.1137/0216002,0,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,n^2(log n)^2,2020,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
143,Greatest Common Divisor,1,Greatest Common Divisor,Greatest Common Divisor,965,,,1,1,O(n/log n),,,"[https://link.springer.com/content/pdf/10.1007/BF01840374.pdf Chor, Goldreich [CRCW] (1990)]","Chor, Goldreich [CRCW]",1990,https://link.springer.com/content/pdf/10.1007/BF01840374.pdf,,,,,,,,O(n/log n),O(n/log n),990,https://link.springer.com/content/pdf/10.1007/BF01840374.pdf,O(n^(2+eps)/log n) for any eps>0,2090.5,,0,n: sum of number of bits among the two integers,n,https://link.springer.com/content/pdf/10.1007/BF01840374.pdf,0,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,n^(1+eps) for any eps>0,1099,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
143,Greatest Common Divisor,1,Greatest Common Divisor,Greatest Common Divisor,966,,,1,1,O((n log log n)/(log n)),,,"[https://link.springer.com/content/pdf/10.1007/BF01840374.pdf Chor, Goldreich [CREW] (1990)]","Chor, Goldreich [CREW]",1990,https://link.springer.com/content/pdf/10.1007/BF01840374.pdf,,,,,,,,O((n log log n)/(log n)),O((n log log n)/(log n)),991,https://link.springer.com/content/pdf/10.1007/BF01840374.pdf,O(n^(2+eps)(log log n)/log n) for any eps>0,2091.5,,0,n: sum of number of bits among the two integers,n,https://link.springer.com/content/pdf/10.1007/BF01840374.pdf,0,CREW PRAM,120,,,,,,,,,0,,0,,0,1,n^(1+eps) for any eps>0,1099,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
143,Greatest Common Divisor,1,Greatest Common Divisor,Greatest Common Divisor,967,,,1,1,O(n/log k + (log n)^2(log log n)),,,[https://www.sciencedirect.com/science/article/pii/S0196677484710066 Sorenson (left shift k-ary) (1994)],Sorenson (left shift k-ary),1994,https://www.sciencedirect.com/science/article/pii/S0196677484710066,,,,,,,,O(n/log k + (log n)^2(log log n)),O((log n)^2(log log n)),21,https://www.sciencedirect.com/science/article/pii/S0196677484710066,O(nk^(2+o(1))(n/log k + (log n)^2(log log n))),,,,"n: sum of number of bits among the two integers
k: even power of 2 between log n and 2^n",n,https://www.sciencedirect.com/science/article/pii/S0196677484710066,0,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,nk^(2+o(1)),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
143,Greatest Common Divisor,1,Greatest Common Divisor,Greatest Common Divisor,968,,,1,1,O(n/log k + (log n)^2(log log n)),,,[https://www.sciencedirect.com/science/article/pii/S0196677484710066 Sorenson (right shift k-ary) (1994)],Sorenson (right shift k-ary),1994,https://www.sciencedirect.com/science/article/pii/S0196677484710066,,,,,,,,O(n/log k + (log n)^2(log log n)),O((log n)^2(log log n)),21,https://www.sciencedirect.com/science/article/pii/S0196677484710066,O(nk^(4+o(1))(n/log k + (log n)^2(log log n))),,,,"n: sum of number of bits among the two integers
k: any number between log n and 2^n",n,https://www.sciencedirect.com/science/article/pii/S0196677484710066,0,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,nk^(4+o(1)),,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
143,Greatest Common Divisor,1,Greatest Common Divisor,Greatest Common Divisor,969,,,1,1,O(n/log n),,,[https://dl.acm.org/doi/abs/10.1145/384101.384142 Sedjelmaci (2001)],Sedjelmaci,2001,https://dl.acm.org/doi/abs/10.1145/384101.384142,,,,,,,,O(n/log n),O(n/log n),990,https://dl.acm.org/doi/abs/10.1145/384101.384142,O(n^(2+eps)/log n) for any eps>0,2090.5,,,n: sum of number of bits among the two integers,n,https://dl.acm.org/doi/abs/10.1145/384101.384142,0,CRCW PRAM,130,,,,,,,,,0,,0,,0,1,n^(1+eps) for any eps>0,1099,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
143,Greatest Common Divisor,1,Greatest Common Divisor,Greatest Common Divisor,970,,,1,1,O((n log log n)/(log n)),,,[https://www.sciencedirect.com/science/article/abs/pii/S0020019009003640 Sorenson (2010)],Sorenson,2010,https://www.sciencedirect.com/science/article/abs/pii/S0020019009003640,,,,,,,,O((n log log n)/(log n)),O((n log log n)/(log n)),991,https://www.sciencedirect.com/science/article/abs/pii/S0020019009003640,O(n^(7+eps)(log log n)/log n) for any eps>0,7091.5,,,n: sum of number of bits among the two integers,n,https://www.sciencedirect.com/science/article/abs/pii/S0020019009003640,0,EREW PRAM,110,,,,,,,,,0,,0,,0,1,n^(6+eps) for any eps>0,6000.5,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
145,Interval Scheduling,1,,"Preemptive Scheduling on Many Machines, Minimize Lateness",971,,,1,1,O(log n + (log k)^3),,,[https://www.sciencedirect.com/science/article/pii/0743731588900378 Martel (1988)],Martel,1988,https://www.sciencedirect.com/science/article/pii/0743731588900378,,,,,,,,O(log n + (log k)^3),O(log n + (log k)^3),3,https://www.sciencedirect.com/science/article/pii/0743731588900378,O(n(log n + (log k)^3)),13,,,"n: number of tasks (intervals)
k: number of machines (resources)",n,https://www.sciencedirect.com/science/article/pii/0743731588900378,0,CREW PRAM (Shared Memory),120,,,,,,,,,0,,0,,0,1,n,10,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,
145,Interval Scheduling,1,,"Preemptive Scheduling on Many Machines, Minimize Lateness",972,,,1,1,O(log n),,,[https://docs.lib.purdue.edu/cgi/viewcontent.cgi?article=1680&context=cstech Rodger (1988)],Rodger,1988,https://docs.lib.purdue.edu/cgi/viewcontent.cgi?article=1680&context=cstech,,,,,,,,O(log n),O(log n),1,https://docs.lib.purdue.edu/cgi/viewcontent.cgi?article=1680&context=cstech,O(n log n),11,,1,"n: number of tasks (intervals)
k: number of machines (resources)",n,https://docs.lib.purdue.edu/cgi/viewcontent.cgi?article=1680&context=cstech,0,CREW PRAM (Shared Memory),120,,,,,,,,,0,,0,,0,1,n,10,0,0,https://www.proquest.com/docview/303730556?pq-origsite=gscholar&fromopenview=true,,,,,,,,,,,,,,,,,,,,,,,,,,
